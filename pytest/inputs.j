//===========================================================================
// 
// 다른 워크래프트 III 지도
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Date: Wed Sep 25 16:59:14 2024
//   Map Author: 알려지지 않음
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // User-defined
    integer                 udg_ExitOption             = 0
    unit array              udg_hero

    // Generated
    rect                    gg_rct_Rect_Tutorial       = null
    rect                    gg_rct_Env_Moonlight       = null
    rect                    gg_rct_Hunting_Enter_01_Down = null
    rect                    gg_rct_Player_Hunting_Rect_01 = null
    rect                    gg_rct_Hunting_Enter_02    = null
    rect                    gg_rct_Player_Hunting_Rect_02 = null
    rect                    gg_rct________006          = null
    sound                   gg_snd_BigButtonClick      = null
    sound                   gg_snd_MouseClick1         = null
    sound                   gg_snd_HeroDropItem1       = null
    trigger                 gg_trg_Native_of_JNStopwatch = null
    trigger                 gg_trg_Native_of_DzAPIFrameHandle = null
    trigger                 gg_trg_Native_of_JNString  = null
    trigger                 gg_trg_Native_of_JNServer  = null
    trigger                 gg_trg_Native_of_DzAPISync = null
    trigger                 gg_trg_Native_of_Misc      = null
    trigger                 gg_trg_Native_of_DzAPIHardware = null
    trigger                 gg_trg_Nativa_of_JNMemory  = null
    trigger                 gg_trg_Native_of_JAPIEffect = null
    trigger                 gg_trg_etc                 = null
    trigger                 gg_trg_Import_File         = null
    trigger                 gg_trg_PKey                = null
    trigger                 gg_trg_PushKey             = null
    trigger                 gg_trg_StartSetting        = null
    trigger                 gg_trg_MainSubFrame        = null
    trigger                 gg_trg_SkillTrees          = null
    trigger                 gg_trg_Select              = null
    trigger                 gg_trg_test                = null
    trigger                 gg_trg_MenuQuickSlot       = null
    trigger                 gg_trg_Option              = null
    trigger                 gg_trg_Inventory_Equip     = null
    trigger                 gg_trg_Info                = null
    trigger                 gg_trg_MiniInfo            = null
    trigger                 gg_trg_JN_Object_Api       = null
    trigger                 gg_trg_Time                = null
    trigger                 gg_trg_Save                = null
    trigger                 gg_trg_Load5_Auto          = null
    trigger                 gg_trg_Load_End            = null
    trigger                 gg_trg_Load3_Repick        = null
    trigger                 gg_trg_Check               = null
    trigger                 gg_trg_test_1_add          = null
    trigger                 gg_trg_test_2_change       = null
    trigger                 gg_trg_test4               = null
    trigger                 gg_trg_test5               = null
    trigger                 gg_trg_Test6               = null
    trigger                 gg_trg_Reset               = null
    trigger                 gg_trg_test7               = null
    trigger                 gg_trg_Save2               = null
    trigger                 gg_trg_add                 = null
    trigger                 gg_trg_Exit                = null
    trigger                 gg_trg_FrameGrid           = null
    trigger                 gg_trg_Typecast            = null
    trigger                 gg_trg_MemoryLib           = null
    trigger                 gg_trg_EndGameHook         = null
    trigger                 gg_trg_ClearWhenRestartGame = null
    trigger                 gg_trg_UnitName            = null
    trigger                 gg_trg_HandleProfiler      = null
    trigger                 gg_trg_Regen               = null
    trigger                 gg_trg_Enchant             = null
    trigger                 gg_trg_ItemGet             = null
    trigger                 gg_trg_UnitNameTest        = null
    trigger                 gg_trg_Quest               = null
    trigger                 gg_trg________________________003 = null
    trigger                 gg_trg________________________002 = null
    trigger                 gg_trg________________________001 = null
    trigger                 gg_trg_rt                  = null
    trigger                 gg_trg_UIMain              = null
    trigger                 gg_trg_Tile                = null
    trigger                 gg_trg_Hunting             = null
    unit                    gg_unit_H005_0003          = null
    unit                    gg_unit_H004_0007          = null
    unit                    gg_unit_H003_0008          = null
    unit                    gg_unit_H002_0009          = null
    unit                    gg_unit_H001_0010          = null
    unit                    gg_unit_H000_0011          = null
endglobals

function InitGlobals takes nothing returns nothing
    local integer i = 0
    set udg_ExitOption = 0
endfunction

//***************************************************************************
//*
//*  Sounds
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_BigButtonClick = CreateSound( "Sound\\Interface\\BigButtonClick.wav", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_BigButtonClick, "GlueScreenClick" )
    call SetSoundDuration( gg_snd_BigButtonClick, 390 )
    set gg_snd_MouseClick1 = CreateSound( "Sound\\Interface\\MouseClick1.wav", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_MouseClick1, "InterfaceClick" )
    call SetSoundDuration( gg_snd_MouseClick1, 239 )
    set gg_snd_HeroDropItem1 = CreateSound( "Sound\\Interface\\HeroDropItem1.wav", false, true, true, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_HeroDropItem1, "ItemDrop" )
    call SetSoundDuration( gg_snd_HeroDropItem1, 486 )
endfunction

//***************************************************************************
//*
//*  Items
//*
//***************************************************************************

function CreateAllItems takes nothing returns nothing
    local integer itemID

    call CreateItem( 'azhr', -9377.4, 2851.1 )
    call CreateItem( 'azhr', -9369.2, 2953.1 )
    call CreateItem( 'azhr', -9371.1, 2747.5 )
    call CreateItem( 'ckng', -9447.1, 2961.3 )
    call CreateItem( 'ckng', -9449.0, 2755.7 )
    call CreateItem( 'ckng', -9455.3, 2859.2 )
    call CreateItem( 'desc', -9532.1, 2963.3 )
    call CreateItem( 'desc', -9540.2, 2861.3 )
    call CreateItem( 'desc', -9534.0, 2757.7 )
    call CreateItem( 'modt', -9715.8, 2761.8 )
    call CreateItem( 'modt', -9722.1, 2865.4 )
    call CreateItem( 'modt', -9713.9, 2967.5 )
    call CreateItem( 'ofro', -9294.1, 2853.1 )
    call CreateItem( 'ofro', -9287.8, 2749.5 )
    call CreateItem( 'ratf', -9627.1, 2967.5 )
    call CreateItem( 'ratf', -9629.0, 2761.8 )
    call CreateItem( 'ratf', -9635.3, 2865.4 )
    call CreateItem( 'rde4', -9206.0, 2763.9 )
    call CreateItem( 'rde4', -9212.3, 2867.5 )
    call CreateItem( 'tkno', -9478.6, 2369.8 )
    call CreateItem( 'tkno', -9411.2, 2360.1 )
    call CreateItem( 'tkno', -9348.6, 2360.1 )
    call CreateItem( 'tkno', -9286.8, 2350.4 )
    call CreateItem( 'tkno', -9531.7, 2350.4 )
    call CreateItem( 'tkno', -9585.0, 2369.8 )
    call CreateItem( 'tkno', -9217.0, 2331.3 )
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateBuildingsForPlayer10 takes nothing returns nothing
    local player p = Player(10)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'ncop', -64.0, 896.0, 270.000 )
endfunction

//===========================================================================
function CreateUnitsForPlayer10 takes nothing returns nothing
    local player p = Player(10)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'nvlk', -952.6, 571.8, 336.983 )
    set u = CreateUnit( p, 'nvl2', -3062.5, 2413.8, 277.974 )
    set u = CreateUnit( p, 'nvl2', -2352.1, 2850.3, 65.074 )
    set u = CreateUnit( p, 'nvlw', -2421.5, 2950.8, 321.799 )
    set u = CreateUnit( p, 'nvil', -888.1, 680.9, 308.802 )
    set u = CreateUnit( p, 'nvil', 161.1, 347.9, 28.181 )
    set u = CreateUnit( p, 'nvlk', 289.7, 379.8, 226.446 )
    set u = CreateUnit( p, 'nvlk', -360.9, 1191.0, 150.166 )
    set u = CreateUnit( p, 'nvil', -867.8, 421.7, 43.123 )
    set u = CreateUnit( p, 'nvlw', -108.7, 1288.0, 251.946 )
    set u = CreateUnit( p, 'nvl2', -403.6, 1019.9, 31.158 )
    set u = CreateUnit( p, 'nvl2', -269.8, 902.3, 359.758 )
    set u = CreateUnit( p, 'nvk2', -2495.9, 2827.2, 263.010 )
    set u = CreateUnit( p, 'nvk2', -135.5, 850.4, 19.556 )
    set u = CreateUnit( p, 'nvk2', -1465.0, 1082.0, 177.742 )
    set u = CreateUnit( p, 'nvk2', -1323.0, 1439.7, 221.370 )
    set u = CreateUnit( p, 'nvlk', -1519.3, 1402.3, 3.153 )
    set u = CreateUnit( p, 'nvl2', -1210.5, 1154.0, 152.715 )
    set u = CreateUnit( p, 'nvl2', -1306.5, 1042.5, 109.504 )
    set u = CreateUnit( p, 'nvlk', -2595.4, 1875.5, 98.008 )
    set u = CreateUnit( p, 'nvlw', -1230.3, 1365.5, 217.096 )
    set u = CreateUnit( p, 'nvlw', -2668.4, 1924.0, 126.529 )
    set u = CreateUnit( p, 'nvil', -1391.6, 1389.7, 358.231 )
    set u = CreateUnit( p, 'hsor', -694.1, 936.1, 88.305 )
    set u = CreateUnit( p, 'hsor', -611.6, 1012.9, 186.271 )
    set u = CreateUnit( p, 'hmpr', -784.3, 1029.3, 1.060 )
    set u = CreateUnit( p, 'hsor', -201.2, 1026.8, 349.802 )
    set u = CreateUnit( p, 'hsor', -36.7, 1026.8, 186.271 )
    set u = CreateUnit( p, 'hmpr', -115.4, 953.4, 86.077 )
    set u = CreateUnit( p, 'hrif', -827.5, 1124.3, 86.103 )
    set u = CreateUnit( p, 'hrif', 40.1, 1120.0, 94.107 )
endfunction

//===========================================================================
function CreateNeutralHostile takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_AGGRESSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'nban', -6995.1, 4196.8, 214.991 )
    set u = CreateUnit( p, 'nban', -7007.9, 4108.0, 127.739 )
    set u = CreateUnit( p, 'nenf', -7685.6, 4509.8, 165.648 )
endfunction

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'n000', -10016.0, 4384.0, 270.000 )
    set u = CreateUnit( p, 'ncop', -9088.0, 4608.0, 270.000 )
    set u = CreateUnit( p, 'ncop', -640.0, 1344.0, 270.000 )
    set u = CreateUnit( p, 'ncp3', 384.0, 384.0, 270.000 )
endfunction

//===========================================================================
function CreateNeutralPassive takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H005_0003 = CreateUnit( p, 'H005', -9509.4, 5613.9, 243.624 )
    set u = CreateUnit( p, 'H000', 644.4, 2903.3, 331.244 )
    set gg_unit_H004_0007 = CreateUnit( p, 'H004', -9421.7, 5478.0, 215.831 )
    set gg_unit_H003_0008 = CreateUnit( p, 'H003', -9627.6, 5665.2, 264.367 )
    set gg_unit_H002_0009 = CreateUnit( p, 'H002', -9756.4, 5654.7, 284.859 )
    set gg_unit_H001_0010 = CreateUnit( p, 'H001', -9866.4, 5598.7, 304.534 )
    set gg_unit_H000_0011 = CreateUnit( p, 'H000', -9949.1, 5460.4, 331.244 )
    set u = CreateUnit( p, 'H001', -9888.5, 4225.1, 283.969 )
    set u = CreateUnit( p, 'Hamg', -9823.8, 4220.1, 248.391 )
    set u = CreateUnit( p, 'H000', -10020.1, 4200.2, 331.244 )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
    call CreateBuildingsForPlayer10(  )
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
    call CreateUnitsForPlayer10(  )
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreateNeutralHostile(  )
    call CreateNeutralPassive(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_Rect_Tutorial = Rect( -10112.0, 3584.0, -8704.0, 4736.0 )
    set gg_rct_Env_Moonlight = Rect( -10112.0, 4992.0, -9088.0, 6016.0 )
    set we = AddWeatherEffect( gg_rct_Env_Moonlight, 'LRma' )
    call EnableWeatherEffect( we, true )
    set gg_rct_Hunting_Enter_01_Down = Rect( -9184.0, 4512.0, -8992.0, 4704.0 )
    set gg_rct_Player_Hunting_Rect_01 = Rect( -8320.0, 4992.0, -7040.0, 6016.0 )
    set gg_rct_Hunting_Enter_02 = Rect( -9120.0, 4000.0, -8928.0, 4192.0 )
    set gg_rct_Player_Hunting_Rect_02 = Rect( -6784.0, 4992.0, -5504.0, 6016.0 )
    set gg_rct________006 = Rect( -7648.0, 4864.0, -7200.0, 5024.0 )
endfunction

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: Native of JNStopwatch
//===========================================================================
native JNStopwatchCreate takes nothing returns integer
native JNStopwatchStart takes integer id returns nothing
native JNStopwatchReset takes integer id returns nothing
native JNStopwatchElapsedMinute takes integer id returns integer
native JNStopwatchElapsedHour takes integer id returns integer//===========================================================================
// Trigger: Native of DzAPIFrameHandle
//
// JN 함수 임포트!
//===========================================================================
globals
  constant integer JN_FRAMEPOINT_TOPLEFT = 0
  constant integer JN_FRAMEPOINT_TOP = 1
  constant integer JN_FRAMEPOINT_TOPRIGHT = 2
  constant integer JN_FRAMEPOINT_LEFT = 3
  constant integer JN_FRAMEPOINT_CENTER = 4
  constant integer JN_FRAMEPOINT_RIGHT = 5
  constant integer JN_FRAMEPOINT_BOTTOMLEFT = 6
  constant integer JN_FRAMEPOINT_BOTTOM = 7
  constant integer JN_FRAMEPOINT_BOTTOMRIGHT = 8
    
  constant integer JN_FRAMEEVENT_MOUSE_ENTER = 2
  constant integer JN_FRAMEEVENT_MOUSE_LEAVE = 3
  constant integer JN_FRAMEEVENT_MOUSE_UP = 4
  /* constant integer JN_FRAMEEVENT_MOUSE_DOWN = 5 /* 제대로 안먹힘 */ */
endglobals

native DzFrameShow takes integer frame, boolean enable returns nothing
native DzCreateFrameByTagName takes string frameType, string name, integer parent, string template, integer id returns integer
native DzFrameSetAlpha takes integer frame, integer alpha returns nothing
native DzFrameSetTexture takes integer frame, string texture, integer flag returns nothing
native DzFrameSetAbsolutePoint takes integer frame, integer point, real x, real y returns nothing
native DzFrameSetSize takes integer frame, real w, real h returns nothing
native DzGetGameUI takes nothing returns integer
native DzFrameSetText takes integer frame, string text returns nothing
native DzFrameGetCommandBarButton takes integer row, integer column returns integer
native DzFrameFindByName takes string name, integer id returns integer
native DzSimpleFrameFindByName takes string name, integer id returns integer
native DzGetTriggerUIEventFrame takes nothing returns integer
native DzGetTriggerUIEventPlayer takes nothing returns player
native DzFrameSetFont takes integer frame, string fileName, real height, integer flag returns nothing
native DzFrameSetAllPoints takes integer frame, integer relativeFrame returns boolean
native DzFrameSetScriptByCode takes integer frame, integer eventId, code funcHandle, boolean sync returns nothing
native DzFrameGetMinimap takes nothing returns integer
native DzCreateFrame takes string frame, integer parent, integer id returns integer
native DzFrameSetPoint takes integer frame, integer point, integer relativeFrame, integer relativePoint, real x, real y returns nothing
native DzFrameSetEnable takes integer name, boolean enable returns nothing
native DzFrameClearAllPoints takes integer frame returns nothing
native DzFrameHideInterface takes nothing returns nothing
native DzFrameGetUpperButtonBarButton takes integer buttonId returns integer
native DzFrameGetHeroBarButton takes integer buttonId returns integer
native DzFrameGetHeroHPBar takes integer buttonId returns integer
native DzFrameGetHeroManaBar takes integer buttonId returns integer
native DzFrameGetMinimapButton takes integer buttonId returns integer
native DzFrameEditBlackBorders takes real upperHeight, real bottomHeight returns nothing
native DzEnableWideScreen takes boolean enable returns nothing
native DzFrameGetChatMessage takes nothing returns integer
native DzFrameGetUnitMessage takes nothing returns integer
native DzLoadToc takes string fileName returns nothing
native DzFrameGetPortrait takes nothing returns integer
native DzFrameGetParent takes integer frame returns integer
native DzFrameSetUpdateCallback takes string func returns nothing
native DzSimpleFontStringFindByName takes string name, integer id returns integer
native DzFrameSetParent takes integer frame, integer parent returns nothing


debug native DzSimpleTextureFindByName takes string name, integer id returns integer

native DzFrameSetModel takes integer frame, string modelFile, integer modelType, integer flag returns nothing


  function JNGetFrameByName2 takes string name, integer createContext returns integer
    local integer frame = DzFrameFindByName(name, createContext)
    if frame == 0 then
        set frame = DzSimpleFrameFindByName(name, createContext)
        debug if frame != 0 then
        debug call BJDebugMsg("2. name: " + name + " / DzSimpleFrameFindByName " + I2S(frame))
        debug endif
    debug else
      debug call BJDebugMsg("1. name: " + name + " / DzFrameFindByName " + I2S(frame))
        if frame == 0 then
            set frame = DzSimpleFontStringFindByName(name, createContext)
            debug if frame != 0 then
            debug call BJDebugMsg("3. name: " + name + " / DzSimpleFontStringFindByName " + I2S(frame))
            debug endif
            if frame == 0 then
                set frame = DzSimpleTextureFindByName(name, createContext)
                debug if frame != 0 then
                debug call BJDebugMsg("4. name: " + name + " / DzSimpleTextureFindByName " + I2S(frame))
                debug endif
            endif
        endif
    endif
    debug if frame == 0 then
        debug call BJDebugMsg("0. name: " + name + " / Result " + I2S(frame))
    debug endif
    return frame
endfunction//===========================================================================
// Trigger: Native of JNString
//===========================================================================
native JNStringPos takes string str, string sub returns integer
native JNStringContains takes string str, string sub returns boolean
native JNStringSplit takes string str, string sub, integer index returns string
native JNStringReplace takes string str, string old, string newstr returns string
native JNStringLength takes string str returns integer
native JNStringSub takes string str, integer start, integer length returns string//===========================================================================
// Trigger: Native of JNServer
//===========================================================================
native JNUse takes nothing returns boolean
native JNObjectCharacterResetCharacter takes string UserId returns nothing
native JNObjectCharacterSetInt takes string UserId, string Field, integer value returns nothing
native JNObjectCharacterSetString takes string UserId, string Field, string value returns nothing
native JNObjectCharacterSave takes string MapId, string UserId, string SecretKey, string Character returns string

native JNObjectCharacterGetInt takes string UserId, string Field returns integer
native JNObjectCharacterGetString takes string UserId, string Field returns string
native JNObjectCharacterInit takes string MapId, string UserId, string SecretKey, string Character returns integer
native JNServerTime takes string Format returns string//===========================================================================
// Trigger: Native of DzAPISync
//===========================================================================
native DzGetTriggerSyncPlayer takes nothing returns player
native DzGetTriggerSyncData takes nothing returns string
native DzSyncData takes string prefix, string data returns nothing
native DzTriggerRegisterSyncData takes trigger trig, string prefix, boolean server returns nothing
native DzTriggerRegisterSyncData takes trigger trig, string prefix, boolean server returns nothing//===========================================================================
// Trigger: Native of Misc
//===========================================================================
//JAPIItemState
native EXGetItemDataString takes integer itemcode, integer data_type returns string

// JAPIMisc
//native EXExecuteScript takes string script returns string

//JNCommon
native JNWriteLog takes string str returns nothing//===========================================================================
// Trigger: Native of DzAPIHardware
//===========================================================================
globals
  constant integer JN_OSKEY_BACKSPACE           = $08
  constant integer JN_OSKEY_TAB               = $09
  constant integer JN_OSKEY_RETURN            = $0D
  constant integer JN_OSKEY_SHIFT             = $10
  constant integer JN_OSKEY_CONTROL             = $11
  constant integer JN_OSKEY_ALT               = $12
  constant integer JN_OSKEY_CAPSLOCK            = $14
  constant integer JN_OSKEY_SPACE             = $20
  constant integer JN_OSKEY_SEPARATOR           = $6C
  constant integer JN_OSKEY_RSHIFT            = $A1
  constant integer JN_OSKEY_RCONTROL            = $A3
  constant integer JN_OSKEY_RALT              = $A5
  constant integer JN_OSKEY_OEM_1             = $BA
  constant integer JN_OSKEY_OEM_PLUS            = $BB
  constant integer JN_OSKEY_OEM_COMMA           = $BC
  constant integer JN_OSKEY_OEM_MINUS           = $BD
  constant integer JN_OSKEY_OEM_PERIOD          = $BE
  constant integer JN_OSKEY_OEM_2             = $BF
  constant integer JN_OSKEY_OEM_3             = $C0
  constant integer JN_OSKEY_OEM_4             = $DB
  constant integer JN_OSKEY_OEM_5             = $DC
  constant integer JN_OSKEY_OEM_6             = $DD
  constant integer JN_OSKEY_OEM_7             = $DE
  
  constant integer JN_MOUSE_BUTTON_TYPE_RIGHT = 2 /* 마우스 우클 0x3은 제대로 못잡음 */
endglobals
native DzGetTriggerKeyPlayer takes nothing returns player
native DzGetTriggerKey takes nothing returns integer
native DzTriggerRegisterKeyEventByCode takes trigger trig, integer key, integer status, boolean sync, code funcHandle returns nothing

native DzTriggerRegisterMouseEventByCode takes trigger trig, integer btn, integer status, boolean sync, code funcHandle returns nothing
/* trig: 말 그대로 이벤트 넣을 트리거 */
/* btn: 마우스 버튼을 선택. */
/* status: 0을 넣으면 버튼 땜, 1을 넣으면 버튼 누름. */
/* sync: false는 비동기화, true는 동기화이다. 비동기화는 반응속도가 매우매우매우 빠르지만 멀티 불가. */
/* 동기화는 반응속도는 보통이지만 멀티 가능 */
/* func, funcHandle: 뭔진 모르겠지만 null 값을 넣어도 무방함 *///===========================================================================
// Trigger: Nativa of JNMemory
//===========================================================================
native JNMemoryGetInteger takes integer offset returns integer
native JNGetModuleHandle takes string moduleName returns integer
native JNMemoryGetReal takes integer offset returns real

scope JNMemory initializer Init
  // Thanks to Howww
  globals
    private integer FrameMouseXOffset
    private integer FrameMouseYOffset
  endglobals
  
  //프레임 UI단위로 마우스 X축 반환(0.0 ~ 0.8)
  function GetFrameMouseX takes nothing returns real
    return JNMemoryGetReal(FrameMouseXOffset)
  endfunction
  //프레임 UI단위로 마우스 Y축 반환(0.0 ~ 0.6)
  function GetFrameMouseY takes nothing returns real
    return JNMemoryGetReal(FrameMouseYOffset)
  endfunction
  private function Init takes nothing returns nothing
    set FrameMouseXOffset = JNGetModuleHandle("Game.dll")+0xCB1AF8
    set FrameMouseYOffset = JNGetModuleHandle("Game.dll")+0xCB1AFC
  endfunction
endscope//===========================================================================
// Trigger: Native of JAPIEffect
//===========================================================================
native EXEffectMatRotateZ takes effect e, real angle returns nothing
native EXSetEffectSize takes effect e, real size returns nothing//===========================================================================
// Trigger: Import File
//===========================================================================
//! import "C:\Program Files\Warcraft\New\Breach\Script\GitAdder.j"//===========================================================================
// Trigger: JN Object Api
//===========================================================================
native JNObjectCharacterServerConnectCheck takes nothing returns boolean

library JNObjectGui initializer init /* requires JNServer, JNString, DzAPISync */

  globals
    constant string JN_MAPID = "LoD"
    constant string JN_SECRETKEY = "9d316ce7-eb22-4637-8dd0-9d869aabfb7a"
    player GetServerPlayer
    string GetServerCode = null
    integer JN_LoaderNow = 0
  endglobals

  // JNObjectLoadSave
  function JNObjectCharacterInitG takes player p, string character returns nothing
    if GetLocalPlayer() == p then
      if udg_hero[GetPlayerId(p)+1] == null then
        call JNObjectCharacterResetCharacter(Name[GetPlayerId(p)+1])
      endif
      call JNObjectCharacterInit(JN_MAPID, Name[GetPlayerId(p)+1], JN_SECRETKEY, character)
    endif
  endfunction

  function JNObjectCharacterCreateSync takes nothing returns nothing
    set GetServerPlayer = DzGetTriggerSyncPlayer()
    call TriggerExecute(gg_trg_Load_End)
  endfunction

  // JNObjectCharacterLoad
  function JNObjectCharacterGetIntegerSync takes nothing returns nothing
    local string str = DzGetTriggerSyncData()
    call SaveInteger(hash, GetPlayerId(DzGetTriggerSyncPlayer())+1, StringHash(JNStringSplit(str, "!", 0)), S2I(JNStringSplit(str, "!", 1)))
    debug call BJDebugMsg("load/save i - " + I2S(GetPlayerId(DzGetTriggerSyncPlayer())+1) + "/" + JNStringSplit(str, "!", 0) + "/" + JNStringSplit(str, "!", 1))
  endfunction

  function JNObjectCharacterGetStringSync takes nothing returns nothing
    local string str = DzGetTriggerSyncData()
    call SaveStr(hash, GetPlayerId(DzGetTriggerSyncPlayer())+1, StringHash(JNStringSplit(str, "!", 0)), JNStringSplit(str, "!", 1))
    debug call BJDebugMsg("load/save s - " + I2S(GetPlayerId(DzGetTriggerSyncPlayer())+1) + "/" + JNStringSplit(str, "!", 0) + "/" + JNStringSplit(str, "!", 1))
  endfunction

  private function init takes nothing returns nothing
    local trigger trig = CreateTrigger()
    local integer i = 0

    call DzTriggerRegisterSyncData(trig, "JNEndSync", false)
    call TriggerAddAction(trig, function JNObjectCharacterCreateSync)

    set trig = CreateTrigger()
    call DzTriggerRegisterSyncData(trig, "JNIntSync", false)
    call TriggerAddAction(trig, function JNObjectCharacterGetIntegerSync)

    set trig = CreateTrigger()
    call DzTriggerRegisterSyncData(trig, "JNStrSync", false)
    call TriggerAddAction(trig, function JNObjectCharacterGetStringSync)

    loop
      exitwhen i == bj_MAX_PLAYERS
      set Name[i + 1] = GetPlayerName(Player(i))
      set i = i + 1
    endloop
    
    call JNUse()
    
    set trig = null
  endfunction

endlibrary//===========================================================================
// Trigger: Time
//===========================================================================
scope Time initializer Init
  globals
    public integer StopWatch = 0
    public integer array last
    public integer array Original
  endglobals
  public function Get takes nothing returns integer
    return JNStopwatchElapsedHour(StopWatch)*60+JNStopwatchElapsedMinute(StopWatch)
  endfunction
  public function FirstLoad takes player p, string Data returns nothing
    local integer loopA = 1
    if ( Data != "" and Data != null ) then
      if ( GetLocalPlayer() == p ) then
        loop
          set Original[loopA] = S2I(JNStringSplit(JNStringSplit(Data, I2S(loopA)+"_", 1), "'", 0))
          exitwhen loopA >= Save_MAX_CHARACTER
          set loopA = loopA + 1
        endloop
        set Original[0] = Original[1] + Original[2] + Original[3] + Original[4] + Original[5] + Original[6]
      endif
    endif
  endfunction
  public function Load takes player p, integer Slot returns nothing
    if ( GetLocalPlayer() == p ) then
      call Msg(p, "총 시간: " + I2S(Original[0]) + "-> " + I2S(Original[0]   +Get()-last[Slot]))
      call Msg(p, I2S(Slot)+"번 시간: " + I2S(Original[Slot]) + "-> " + I2S(Original[Slot]   +Get()-last[Slot]))
      set Original[0] =    Original[0]   +Get()-last[Slot]
      set Original[Slot] = Original[Slot]+Get()-last[Slot]
      set last[Slot] = Get()
    endif
  endfunction
  
  public function Save takes player p, integer Slot returns string
    local string Data = LoadStr(hash, GetPlayerId(p)+1, StringHash("Data"))
    local integer P = GetPlayerId(p)+1
    call Load(p, Slot)
    if ( Data == null ) or ( Data == "" ) then
      set Data = Select_DEFAULT_DATA
    endif
    /*포맷: LastSlot ' 플탐All */
    set Data = I2S(Slot)+"'"+I2S(Original[0])  +  JNStringSub(Data, JNStringPos(Data, "/"), JNStringLength(Data))
    /*포맷: Slot _ 플탐 ' 레벨 . 경험치 */
    return JNStringReplace(Data, JNStringSplit(Data, "/", Slot), I2S(Slot)+"_"+I2S(Original[Slot])+"'"+I2S(GetHeroLevel(udg_hero[P]))+"."+I2S(GetHeroXP(udg_hero[P])))
  endfunction
  private function Init takes nothing returns nothing
    set StopWatch = JNStopwatchCreate()
    call JNStopwatchStart(StopWatch)
  endfunction

endscope//===========================================================================
// Trigger: Save
//
// scope in scope가 가능하다
//===========================================================================
native JNObjectCharacterRemoveField takes string UserId, string Field returns nothing
scope Save initializer Init
  globals
    private string array InvenData
    private string array EquipData
    
    public constant integer MAX_INVENTORY = 49
    public constant integer MAX_EQUIP = 16
    public constant integer MAX_CHARACTER = 6
  endglobals
  
  private function GetEquipData takes integer P returns nothing
   local integer loopA = 1
   local item t = null
    loop
      set t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(-loopA)))
      if ( t != null ) then
        set EquipData[loopA] = I2S(GetItemTypeId(t))+"/"+LoadStr(hash, GetHandleId(t), StringHash("ItemAddData"))
      else
        set EquipData[loopA] = ""
      endif
      exitwhen loopA >= MAX_EQUIP
      set loopA = loopA + 1
    endloop
   set t = null
  endfunction
  private function GetInvenData takes integer P returns nothing
   local integer loopA = 1
   local item t = null
    loop
      set t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(loopA)))
      if ( t != null ) then
        set InvenData[loopA] = I2S(GetItemTypeId(t))+"/"+LoadStr(hash, GetHandleId(t), StringHash("ItemAddData"))
      else
        set InvenData[loopA] = ""
      endif
      exitwhen loopA >= MAX_INVENTORY
      set loopA = loopA + 1
    endloop
   set t = null
  endfunction
  private function msgCheck takes player p, string s returns nothing
    if ( s != "저장이 성공적으로 되었습니다." ) then
      call DisplayTimedTextToPlayer(p, 0., 0., 8, "데이터 저장 |cffff0000실패: |r" + s)
    endif
  endfunction
  
  function EquipItemValue takes string name, integer P, integer Slot returns nothing
    local integer loopA = 1
    local integer loopB = 1
    local string s = ""
    
    loop
      set loopA = 1
      loop
        if ( loopB == Slot ) then
          set s = EquipData[loopA]
        else
          set s = LoadStr(hash, P, StringHash(I2S(loopB)+"e"+I2S(loopA)))
        endif
        if ( IsEmpty(s) ) then
          call JNObjectCharacterRemoveField(name, I2S(loopB)+"e"+I2S(loopA))
        else
          call JNObjectCharacterSetString(name, I2S(loopB)+"e"+I2S(loopA), s)
        endif
        
        exitwhen loopA >= MAX_EQUIP
        set loopA = loopA + 1
      endloop
      exitwhen loopB >= MAX_CHARACTER
      set loopB = loopB + 1
    endloop
  endfunction
  
  
  public function Saving takes player p, integer Slot returns nothing
   local integer P = GetPlayerId(p)+1
   local unit u = udg_hero[P]
   local boolean SpecialName = GetHeroProperNameIndex(u) > 0
   local integer loopA = 1
    call GetEquipData(P)
    call GetInvenData(P)    
    if ( GetLocalPlayer() == p ) then
      //if ( first ) then
        //call JNObjectCharacterResetCharacter(name)
//        set first = false
        //call BJDebugMsg("Reset")
      //endif
      call JNObjectCharacterInit(JN_MAPID, Name[P], JN_SECRETKEY, "Save")
      
      call JNObjectCharacterSetString(Name[P], "Data", Time_Save(p, Slot))
      call BJDebugMsg("Saveing...Data: "+JNObjectCharacterGetString(Name[P], "Data"))
      if ( SpecialName ) then
        call JNObjectCharacterSetString(Name[P], I2S(loopA)+"_Name", GetHeroProperName(u))
      endif
      
      call EquipItemValue(Name[P], P, Slot)
      set loopA = 1
      loop
        if ( InvenData[loopA] != "" ) then
          call JNObjectCharacterSetString(Name[P], "i"+I2S(loopA), InvenData[loopA])
        else
          call JNObjectCharacterRemoveField(Name[P], "i"+I2S(loopA))
        endif
        exitwhen loopA >= MAX_INVENTORY
        set loopA = loopA + 1
      endloop
      call msgCheck(p, JNObjectCharacterSave(JN_MAPID, Name[P], JN_SECRETKEY, "Save"))
    endif
    set u = null
  endfunction
  private function SaveAction takes nothing returns nothing
    call Saving(GetTriggerPlayer(), Select_NowSelect[GetPlayerId(GetTriggerPlayer())+1])
  endfunction
  private function Init takes nothing returns nothing
   local integer i = 0
   local trigger trg = CreateTrigger()
    loop
      call TriggerRegisterPlayerChatEvent(trg, Player(i), "-save", false)
      exitwhen i >= bj_MAX_PLAYERS-1
      set i = i + 1
    endloop
    call TriggerAddAction(trg, function SaveAction)
   set trg = null
  endfunction
endscope//===========================================================================
// Trigger: Load5 Auto
//===========================================================================
scope LoadAuto initializer Init
  globals
    string array Name
    private integer int = 0
  endglobals
  private function msgCheck2 takes player p, integer i returns boolean
    if ( i == 0 ) then
      return true
    elseif ( i == -1 ) then
      call DisplayTimedTextToPlayer(p, 0., 0., 4, "캐릭터 로드 실패: 인증 실패")
    elseif ( i == -2 ) then
      call DisplayTimedTextToPlayer(p, 0., 0., 4, "캐릭터 파일 로드 실패: 현재 사용중(동시로드 비허용 맵)")
    elseif ( i == -3 ) then
      call DisplayTimedTextToPlayer(p, 0., 0., 4, "캐릭터 파일 로드 실패: 이미 로드됨")
      return true
    endif
   return false
  endfunction
  private function RemoveItemData takes item t returns boolean
    if ( t != null ) then
      //call RemoveSavedString(hash, GetHandleId(t), StringHash("ItemAddData"))
      call FlushChildHashtable(hash, GetHandleId(t))
      call RemoveItem(t)
      return true
    endif
    return false
  endfunction
  function ResetEquip takes integer P returns nothing
   local integer i = Save_MAX_EQUIP
    /* 장비 비우기 16~1 */
    loop
      if ( RemoveItemData(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(-i)))) ) then
        if ( GetLocalPlayer() == Player(P-1) ) then
          call DzFrameSetTexture(Equip_EquipBackdrop[-i], Equip_I2BE(-i), 0)
        endif
      endif
      exitwhen i <= 1
      set i = i - 1
    endloop
  endfunction
  function ResetInven takes integer P returns nothing
   local integer i = Save_MAX_INVENTORY
   /* 인벤 비우기 1~49 */
    call SaveInteger(hash, P, StringHash("ItemData0"), 1)
    loop
      if ( RemoveItemData(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(i)))) ) then
        if ( GetLocalPlayer() == Player(P-1) ) then
          call DzFrameSetTexture(Frame_InvenButtonsBackDrop[i], "Inven_Empty.blp", 0)
        endif
      endif
      exitwhen i <= 1
      set i = i - 1
    endloop
  endfunction
  function ResetLoad takes integer P returns nothing
    call RemoveUnit(udg_hero[P])
    
    call ResetEquip(P)
    call ResetInven(P)
  endfunction
  function Loading takes player p returns nothing
   local integer P = GetPlayerId(p)+1
   local integer loopA = 1
   local integer loopB = 1
   local string s = ""
    //call Msg(p, "Loading..." + I2S(P))
    call ResetLoad(P)
    if ( GetLocalPlayer() == p ) then 
      if ( msgCheck2(p, JNObjectCharacterInit(JN_MAPID, Name[P], JN_SECRETKEY, "Save")) ) then
        set s = JNObjectCharacterGetString(Name[P], "Data")
        if ( IsEmpty(s) ) then
          //call Msg(p, I2S(P) + ", 새로 시작")
          call DzSyncData("SaveData", "")
        else
          call DzSyncData("SaveData", s)
          
          call Time_FirstLoad(p, s)
          
          /* 장비 6슬롯 x 16개 */
          loop
            loop
              set s = JNObjectCharacterGetString(Name[P], I2S(loopB)+"e"+I2S(loopA))
              if ( s != "" ) then
                call DzSyncData("JNStrSync", I2S(loopB)+"e"+I2S(loopA)+"!"+s)
              endif
            
              exitwhen loopA >= Save_MAX_EQUIP
              set loopA = loopA + 1
            endloop
            
            set s = JNObjectCharacterGetString(Name[P], I2S(loopB)+"Name[P]")
            if ( s != "" ) then
              call DzSyncData("JNStrSync", I2S(loopB)+"_Name[P]"+"!"+s)
            endif
            exitwhen loopB >= Save_MAX_CHARACTER
            set loopB = loopB + 1
          endloop
          set loopA = 1 /* 인벤토리 1~49 */
          loop
            set s = JNObjectCharacterGetString(Name[P], "i"+I2S(loopA))
            if ( s != "" ) then
              call DzSyncData("JNStrSync", "i"+I2S(loopA)+"!"+s)
            endif
            exitwhen loopA >= Save_MAX_INVENTORY
            set loopA = loopA + 1
          endloop
        endif
      endif
      call DzSyncData("JNEndSync", "_")
    endif
  endfunction
  private function DataSync takes nothing returns nothing
    call Select_GetSaveData(DzGetTriggerSyncPlayer(), DzGetTriggerSyncData())
  endfunction
  private function AfterLoad takes nothing returns nothing
    if ( udg_hero[GetPlayerId(GetTriggerPlayer())+1] != null ) then
        call Msg(GetTriggerPlayer(), "이미 선택 혹은 로드하였습니다.")
      else
        call Loading(GetTriggerPlayer())
      endif
  endfunction
  private function LoadingAll takes nothing returns nothing
    if ( GetPlayerSlotState(Player(int)) == PLAYER_SLOT_STATE_PLAYING ) and ( GetPlayerController(Player(int)) == MAP_CONTROL_USER ) then
      call Loading(Player(int))
    elseif ( int >= bj_MAX_PLAYERS-1 ) then
      call DestroyTimer(GetExpiredTimer())
    endif
    set int = int + 1
  endfunction
  private function Init takes nothing returns nothing
    local integer loopA = bj_MAX_PLAYERS-1
    local trigger trig = CreateTrigger()
    call TimerStart(CreateTimer(), .15, true, function LoadingAll)
    loop
      if ( GetPlayerSlotState(Player(loopA)) == PLAYER_SLOT_STATE_PLAYING ) and ( GetPlayerController(Player(loopA)) == MAP_CONTROL_USER ) then
        call TriggerRegisterPlayerChatEvent(trig, Player(loopA), "-load", false)
        set Name[loopA+1] = GetPlayerName(Player(loopA))
      endif
      exitwhen loopA == 0
      set loopA = loopA - 1
    endloop
    call TriggerAddAction(trig, function AfterLoad)
    
    set trig = CreateTrigger()
    call DzTriggerRegisterSyncData(trig, "SaveData", false)
    call TriggerAddAction(trig, function DataSync)
    set trig = null
  endfunction
endscope//===========================================================================
// Trigger: Load End
//
// "0'0/1_0'0/2_0'0/3_0'0/4_0'0/5_0'0/6_0'0/"
//===========================================================================
globals
  string array InvenData2
  string array EquipData2
endglobals
function SetEquipData takes integer P, integer Slot returns nothing
  local integer loopA = 1
  loop
    set EquipData2[loopA] = LoadStringBJ(StringHash(I2S(Slot)+"e"+I2S(loopA)), P, hash)
    exitwhen loopA >= Save_MAX_EQUIP
    set loopA = loopA + 1
  endloop
endfunction
function SetInvenData takes integer P returns nothing
  local integer loopA = 1
  loop
    set InvenData2[loopA] = LoadStringBJ(StringHash("i"+I2S(loopA)), P, hash)
    exitwhen loopA >= Save_MAX_INVENTORY
    set loopA = loopA + 1
  endloop
endfunction

constant function IsNotEmpty takes string s returns boolean
  return ( s != "" ) and ( s != null )
endfunction
function Trig_JN_Object_Load2_Actions takes nothing returns nothing
  local integer loopA = 0
  local string Data = ""
  local string HouseName = ""
  if ( JN_LoaderNow == 0 ) then
    set JN_LoaderNow = GetPlayerId(GetServerPlayer)+1
    set Data = JNStringSplit(LoadStr(hash, JN_LoaderNow, StringHash("Data")),"/",Select_NowSelect[JN_LoaderNow])
    if ( IsNotEmpty(Data) ) then
      if ( Select_NowSelect[JN_LoaderNow] == 0 ) then
        call DisplayTimedTextToPlayer(GetServerPlayer, 0., 0., 20, "로드 |cff00ff00가능! |r - 로드할 준비가 되었습니다.")
      else
        set loopA = S2I(JNStringSplit(Data,"'",1))
        if ( loopA == 0 ) then /* 신규 시작 */
          call Msg(GetLocalPlayer(), GetPlayerName(GetServerPlayer) + "님이 " + JNStringSplit(Select_Data_Select(Select_NowSelect[JN_LoaderNow]),"'",0) +"을(를) 선택하였습니다.")
          call ResetEquip(JN_LoaderNow)
        else
          call Msg(GetLocalPlayer(), GetPlayerName(GetServerPlayer) + "님이 Lv."+I2S(loopA)+ " " +JNStringSplit(Select_Data_Select(Select_NowSelect[JN_LoaderNow]),"'",0) +"(으)로 모험을 이어갑니다.")
          call SetEquipData(JN_LoaderNow, Select_NowSelect[JN_LoaderNow])
        endif
        
        //집 이름 변경
        set HouseName = GetObjectName('nefm')
        if ( GetLocalPlayer() == GetServerPlayer ) then
          set HouseName = GetPlayerName(GetServerPlayer) + "가문의 " + GetObjectName(Select_I2U(Select_NowSelect[JN_LoaderNow])) + "네 집"
        endif
        call SetObjectName('nefm', HouseName)
        
        set udg_hero[JN_LoaderNow] = CreateUnit(GetServerPlayer, Select_I2U(Select_NowSelect[JN_LoaderNow]), Select_startXX, Select_startYY, bj_UNIT_FACING)
        if ( GetLocalPlayer() == GetServerPlayer ) then
          call DzFrameShow(Frame_Main, true)
        endif
        
        call SetInvenData(JN_LoaderNow)
        
        call SetHeroLevel(udg_hero[JN_LoaderNow], loopA, false)
        call SetHeroXP(   udg_hero[JN_LoaderNow], S2I(JNStringSplit(JNStringSplit(Data,"'",1),".",1)), false)

        
        set Data = LoadStr(hash, JN_LoaderNow, StringHash(I2S(Select_NowSelect[JN_LoaderNow])+"_"+"Name"))
        if ( IsNotEmpty(Data) ) then
          call SetHeroProperNameIndex(udg_hero[JN_LoaderNow], JN_LoaderNow)
          call SetHeroProperName(udg_hero[JN_LoaderNow], Data)
        else
          call SetHeroProperNameIndex(udg_hero[JN_LoaderNow], 0)
        endif
                
        set loopA = 1
        loop
          set Data = EquipData2[loopA]
          if ( IsNotEmpty(Data) ) then
            set bj_lastCreatedItem = CreateItem(S2I(JNStringSplit(Data,"/",0)), 0, 0)
            
            call SaveItemHandle(hash, JN_LoaderNow, StringHash("ItemData"+I2S(-loopA)), bj_lastCreatedItem)
            call SaveStr(hash, GetHandleId(bj_lastCreatedItem), StringHash("ItemAddData"), JNStringSplit(Data,"/",1))
            if ( GetLocalPlayer() == GetServerPlayer ) then
              call DzFrameSetTexture(Equip_EquipBackdrop[loopA], EXGetItemDataString(GetItemTypeId(bj_lastCreatedItem), 1), 0)
            endif
            call Equip_Process(EXGetItemDataString(GetItemTypeId(bj_lastCreatedItem), 3) + "'" + LoadStr(hash, GetHandleId(bj_lastCreatedItem), StringHash("ItemAddData")), JN_LoaderNow)
            call SetItemPosition(bj_lastCreatedItem, XX, YY)
          endif
          exitwhen loopA >= Save_MAX_EQUIP
          set loopA = loopA + 1
        endloop
        set loopA = 1
        loop
          set Data = InvenData2[loopA]
          if ( IsNotEmpty(Data) ) then
            set bj_lastCreatedItem = CreateItem(S2I(JNStringSplit(Data,"/",0)), 0, 0)
            
            call SaveItemHandle(hash, JN_LoaderNow, StringHash("ItemData"+I2S(loopA)), bj_lastCreatedItem)
            call SaveStr(hash, GetHandleId(bj_lastCreatedItem), StringHash("ItemAddData"), JNStringSplit(Data,"/",1))
            if ( GetLocalPlayer() == GetServerPlayer ) then
              call DzFrameSetTexture(Frame_InvenButtonsBackDrop[loopA], EXGetItemDataString(GetItemTypeId(bj_lastCreatedItem), 1), 0)
            endif
            call SetItemPosition(bj_lastCreatedItem, XX, YY)
          endif
          exitwhen loopA >= Save_MAX_INVENTORY
          set loopA = loopA + 1
        endloop
      endif
    else
      call DisplayTimedTextToPlayer(GetServerPlayer, 0., 0., 20, "로드 준비 |cffff0000실패|r: \"-load\"로 리로드가 가능합니다.")
    endif
    set JN_LoaderNow = 0
  else
    call DisplayTimedTextToPlayer(GetServerPlayer, 0., 0., 20, "로드 |cffff0000실패! |r - 현재 "+GetPlayerName(Player(JN_LoaderNow-1))+"|r님이 로드하고 있습니다. 잠시 후 다시 시도하세요.")
  endif
endfunction

//===========================================================================
function InitTrig_Load_End takes nothing returns nothing
    set gg_trg_Load_End = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Load_End, function Trig_JN_Object_Load2_Actions )
endfunction

//===========================================================================
// Trigger: Load3 Repick
//===========================================================================
function Trig_Load3_Repick_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig_Load3_Repick takes nothing returns nothing
 local integer i = bj_MAX_PLAYERS
  set gg_trg_Load3_Repick = CreateTrigger()
  loop
    call TriggerRegisterPlayerChatEvent(gg_trg_Load3_Repick, Player(i), "-re", true)
    exitwhen i <= 0
    set i = i - 1
  endloop
  call TriggerAddAction(gg_trg_Load3_Repick, function Trig_Load3_Repick_Actions)
endfunction//===========================================================================
// Trigger: test 1 add
//===========================================================================
function Trig_test_1_add_Actions takes nothing returns nothing
 local integer P = GetPlayerId(GetTriggerPlayer())+1
 local integer loopA = 1
  loop
    //call SaveInteger(NGUI_hash, P, loopA, PKey_H2I(NGUI_BaseHotKey(loopA)))
    //call SaveInteger(NGUI_hash, PKey_H2I(NGUI_BaseHotKey(loopA)), P, loopA)
    //call BJDebugMsg("기본 등록 - " + I2S(loopA) + "번째 메뉴: " + NGUI_BaseHotKey(loopA))
    call MenuQuickSlot_AddReg(P, loopA, PushKey_H2I(MenuQuickSlot_BaseHotKey(loopA)))
    
    exitwhen loopA >= 23
    set loopA = loopA + 1
  endloop
endfunction

//===========================================================================
function InitTrig_test_1_add takes nothing returns nothing
    set gg_trg_test_1_add = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent(gg_trg_test_1_add, Player(0), "-등록", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_test_1_add, Player(1), "-등록", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_test_1_add, Player(2), "-등록", true)
    call TriggerAddAction( gg_trg_test_1_add, function Trig_test_1_add_Actions )
endfunction

//===========================================================================
// Trigger: test4
//===========================================================================
function Trig_test4_Actions takes nothing returns nothing
 call EndGame(false)
endfunction

//===========================================================================
function InitTrig_test4 takes nothing returns nothing
    set gg_trg_test4 = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_test4, Player(0), "-4", true )
    call TriggerAddAction( gg_trg_test4, function Trig_test4_Actions )
endfunction

//===========================================================================
// Trigger: Reset
//===========================================================================
function Trig_Reset_Actions takes nothing returns nothing
  //set first[GetPlayerId(GetTriggerPlayer())+1] = false
  if ( GetEventPlayerChatString() == "-r1" ) then
    if ( GetLocalPlayer() == GetTriggerPlayer() ) then
      call JNObjectCharacterResetCharacter(Name[GetPlayerId(GetTriggerPlayer())+1])
    endif
  else
    if ( GetLocalPlayer() == GetTriggerPlayer() ) then
      call JNObjectCharacterInit(JN_MAPID, Name[GetPlayerId(GetTriggerPlayer())+1], JN_SECRETKEY, "Save")
    endif
  endif
  call TriggerExecute(gg_trg_Check)
 call BJDebugMsg("Reset")
endfunction

//===========================================================================
function InitTrig_Reset takes nothing returns nothing
    set gg_trg_Reset = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(0), "-r1", true)
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(1), "-r1", true)
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(2), "-r1", true)
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(0), "-r2", true)
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(1), "-r2", true)
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(2), "-r2", true)
    call TriggerAddAction( gg_trg_Reset, function Trig_Reset_Actions )
endfunction

//===========================================================================
// Trigger: test7
//===========================================================================
function Trig_test7_Actions takes nothing returns nothing
  if ( GetLocalPlayer() == GetTriggerPlayer() ) then
    call Msg(GetTriggerPlayer(), "강제 로드")
    call DzSyncData("SaveData", "1'1/1_1'11.6500/2_0'0/3_0'0/4_0'0/5_0'0/6_0'0/")
    call Time_FirstLoad(GetTriggerPlayer(), "1'1/1_1'11.6500/2_0'0/3_0'0/4_0'0/5_0'0/6_0'0/")
  endif
endfunction

//===========================================================================
function InitTrig_test7 takes nothing returns nothing
    set gg_trg_test7 = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_test7, Player(0), "-7", true )
    call TriggerAddAction( gg_trg_test7, function Trig_test7_Actions )
endfunction//===========================================================================
// Trigger: add
//===========================================================================
function Trig_add_Actions takes nothing returns nothing
  if ( udg_ExitOption == 2 ) then
    set udg_ExitOption = 0
  else
    set udg_ExitOption = udg_ExitOption + 1
  endif
  if ( udg_ExitOption == 1 ) then
    call BJDebugMsg("나가기 테스트 준비 ON")
  elseif ( udg_ExitOption == 2 ) then
    call BJDebugMsg("나가면 자동세이브 ON")
  else
    call BJDebugMsg("나가기 테스트 OFF")
  endif
endfunction

//===========================================================================
function InitTrig_add takes nothing returns nothing
    set gg_trg_add = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_add, Player(0), "-얍", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_add, Player(1), "-얍", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_add, Player(2), "-얍", true )
    call TriggerAddAction( gg_trg_add, function Trig_add_Actions )
endfunction

//===========================================================================
// Trigger: Exit
//===========================================================================
function Trig_Exit_Actions takes nothing returns nothing
    call BJDebugMsg(GetPlayerName(GetTriggerPlayer()) + " 나감")
endfunction

//===========================================================================
function InitTrig_Exit takes nothing returns nothing
    set gg_trg_Exit = CreateTrigger(  )
    call TriggerRegisterPlayerEventLeave( gg_trg_Exit, Player(0) )
    call TriggerRegisterPlayerEventLeave( gg_trg_Exit, Player(1) )
    call TriggerRegisterPlayerEventLeave( gg_trg_Exit, Player(2) )
    call TriggerRegisterPlayerEventLeave( gg_trg_Exit, Player(3) )
    call TriggerAddAction( gg_trg_Exit, function Trig_Exit_Actions )
endfunction

//===========================================================================
// Trigger: FrameGrid
//===========================================================================
library DisplayGrid initializer Init
    globals
        private constant integer GRID_ALPHA = 255
        
        private integer GridLine
        private integer GridLine_Small
        private integer GridLine_Medium
        private integer GridLine_Large
    endglobals
    
    function GetShowGridLine takes integer size returns nothing
        if size == 0 then
            call DzFrameShow(GridLine_Small, false)
            call DzFrameShow(GridLine_Medium, false)
            call DzFrameShow(GridLine_Large, false)
        elseif size == 1 then
            call DzFrameShow(GridLine_Small, false)
            call DzFrameShow(GridLine_Medium, false)
            call DzFrameShow(GridLine_Large, true)
        elseif size == 2 then
            call DzFrameShow(GridLine_Small, false)
            call DzFrameShow(GridLine_Medium, true)
            call DzFrameShow(GridLine_Large, true)
        elseif size == 3 then
            call DzFrameShow(GridLine_Small, true)
            call DzFrameShow(GridLine_Medium, true)
            call DzFrameShow(GridLine_Large, true)
        endif
    endfunction
    
    private function Main takes nothing returns nothing
        local integer targetFrame
        local integer frame
        local integer x = 1
        local integer y = 1
        local string texture
        
        call DestroyTrigger( GetTriggeringTrigger() )
        set GridLine = DzCreateFrameByTagName("FRAME", "", DzGetGameUI(), "", 0)
        set GridLine_Small = DzCreateFrameByTagName("FRAME", "", GridLine, "", 0)
        set GridLine_Medium = DzCreateFrameByTagName("FRAME", "", GridLine, "", 0)
        set GridLine_Large = DzCreateFrameByTagName("FRAME", "", GridLine, "", 0)
        call DzFrameShow(GridLine_Small, false)
        call DzFrameShow(GridLine_Medium, false)
        call DzFrameShow(GridLine_Large, false)
        
        //알파 값
        call DzFrameSetAlpha(GridLine, GRID_ALPHA)
        
        //x축 격자 생성
        loop
            exitwhen x > 79
            if ModuloInteger(x, 10) == 0 then
                set targetFrame = GridLine_Large
                set texture = "ReplaceableTextures\\TeamColor\\TeamColor04.blp"
            elseif ModuloInteger(x, 5) == 0 then
                set targetFrame = GridLine_Medium
                set texture = "Textures\\white.blp"
            else
                set targetFrame = GridLine_Small
                set texture = "ReplaceableTextures\\TeamColor\\TeamColor08.blp"
            endif
            set frame = DzCreateFrameByTagName("BACKDROP", "", targetFrame, "", 0)
            call DzFrameSetTexture(frame, texture, 0)
            call DzFrameSetAbsolutePoint(frame, JN_FRAMEPOINT_CENTER, x*0.01, 0.30)
            call DzFrameSetSize(frame, 0.0001, 0.6)
            set x = x + 1
        endloop
        //x축 격자 수치 표기
        set x = 1
        loop
            exitwhen x > 8
            set frame = DzCreateFrameByTagName("TEXT", "", GridLine_Large, "", 0)
            call DzFrameSetText(frame, "0." + I2S(x))
            call DzFrameSetAbsolutePoint(frame, JN_FRAMEPOINT_BOTTOMRIGHT, x*0.1, 0.0)
            set x = x + 1
        endloop
        
        //y축 격자 생성
        loop
            exitwhen y > 59
            if ModuloInteger(y, 10) == 0 then
                set targetFrame = GridLine_Large
                set texture = "ReplaceableTextures\\TeamColor\\TeamColor04.blp"
            elseif ModuloInteger(y, 5) == 0 then
                set targetFrame = GridLine_Medium
                set texture = "Textures\\white.blp"
            else
                set targetFrame = GridLine_Small
                set texture = "ReplaceableTextures\\TeamColor\\TeamColor08.blp"
            endif
            set frame = DzCreateFrameByTagName("BACKDROP", "", targetFrame, "", 0)
            call DzFrameSetTexture(frame, texture, 0)
            call DzFrameSetAbsolutePoint(frame, JN_FRAMEPOINT_CENTER, 0.40, y*0.01)
            call DzFrameSetSize(frame, 0.8, 0.0001)
            set y = y + 1
        endloop
        
        //y축 격자 수치 표기
        set y = 0
        loop
            exitwhen y > 8
            set frame = DzCreateFrameByTagName("TEXT", "", GridLine_Large, "", 0)
            call DzFrameSetText(frame, "0." + I2S(y))
            call DzFrameSetAbsolutePoint(frame, JN_FRAMEPOINT_TOPLEFT, 0.0, y*0.1)
            set y = y + 1
        endloop
        
        //(0.0) 격자 수치 표기
        set frame = DzCreateFrameByTagName("TEXT", "", GridLine_Large, "", 0)
        call DzFrameSetText(frame, "0.0")
        call DzFrameSetAbsolutePoint(frame, JN_FRAMEPOINT_BOTTOMLEFT, 0.0, 0.0)
    endfunction
    
    private function Command takes nothing returns nothing
        local string chat = StringCase(GetEventPlayerChatString(), false)
        if chat == "-g0" then
            call GetShowGridLine(0)
        elseif chat == "-g1" then
            call GetShowGridLine(1)
        elseif chat == "-g2" then
            call GetShowGridLine(2)
        elseif chat == "-g3" then
            call GetShowGridLine(3)
        endif
    endfunction

    private function Init takes nothing returns nothing
        local trigger t = CreateTrigger(  )
        local integer i = 0
        call TriggerRegisterTimerEvent(t, 0.00, false)
        call TriggerAddAction( t, function Main )
        
        set t = CreateTrigger(  )
        loop
            exitwhen i > 11
            call TriggerRegisterPlayerChatEvent( t, Player(i), "-g", false )
            set i = i + 1
        endloop
        call TriggerAddAction( t, function Command )
        
        set t = null
    endfunction
endlibrary//===========================================================================
// Trigger: Typecast
//===========================================================================
library Typecast

globals
    //These are not used, they are here just to fool Jasshelper.
    code Code
    integer Int
    string Str
    boolean Bool
 
    //These are the actual ones used for typecasting.
    code l__Code
    integer l__Int
    string l__Str
    boolean l__Bool
endglobals

//The "return" line prevents Jasshelper from inlining these functions
function setCode takes code c returns nothing
    set l__Code = c
    return
endfunction

function setInt takes integer i returns nothing
    set l__Int = i
    return
endfunction

function setStr takes string s returns nothing
    set l__Str = s
    return
endfunction

function setBool takes boolean b returns nothing
    set l__Bool = b
    return
endfunction

//Jasshelper will append an "l__" prefix to all Typecast locals
private function Typecast1 takes nothing returns nothing
    local integer Str   //l__Str
    local string Int    //l__Int
endfunction

//# +nosemanticerror
function SH2I takes string s returns integer
    call setStr(s)
    return l__Str
endfunction

//# +nosemanticerror
function I2SH takes integer i returns string
    call setInt(i)
    return l__Int
endfunction

private function Typecast2 takes nothing returns nothing
    local integer Bool  //l_Bool
    local boolean Int   //l_Int
endfunction

//# +nosemanticerror
function B2I takes boolean b returns integer
    call setBool(b)
    return l__Bool
endfunction

//# +nosemanticerror
function I2B takes integer i returns boolean
    call setInt(i)
    return l__Int
endfunction

private function Typecast3 takes nothing returns nothing
    local integer Code   //l__Code
    local code Int       //l_Int
endfunction

//# +nosemanticerror
function C2I takes code c returns integer
    call setCode(c)
    return l__Code
endfunction

//# +nosemanticerror
function I2C takes integer i returns code
    call setInt(i)
    return l__Int
endfunction

//# +nosemanticerror
function realToIndex takes real r returns integer
    return r
endfunction

function cleanInt takes integer i returns integer
    return i
endfunction

//# +nosemanticerror
function indexToReal takes integer i returns real
    return i
endfunction

function cleanReal takes real r returns real
    return r
endfunction

endlibrary
//===========================================================================
// Trigger: MemoryLib
//===========================================================================
/*
 * MemoryLib (v0.1-alpha)
 * commit: 71944c8 (22)
 */

// source: src/MemoryLib.j
// ! import "JNMemory.j"
//native JNGetModuleHandle takes string moduleName returns integer
native JNMemoryGetByte takes integer offset returns integer
native JNMemorySetInteger takes integer offset, integer value returns nothing
native JNMemorySetReal takes integer offset, real value returns nothing
native JNMemoryGetString takes integer offset, integer length returns string
native JNMemorySetByte takes integer offset, integer value returns nothing
native JNProcCall takes integer callConv, integer address, hashtable params returns boolean

library MemoryLib requires /*
    */ MemoryLibBase, /*
    */ optional MemoryLibCommandButton, /*
    */ optional MemoryLibCommandButtonData, /*
    */ optional MemoryLibGameUI, /*
    */ optional MemoryLibMemoryBlock, /*
    */ optional MemoryLibPrimitiveType, /*
    */ MemoryLibEnd
endlibrary

library MemoryLibBase initializer Init /*requires JNMemory*/
    globals
        integer pGameDll
    endglobals

    interface Ptr
    endinterface

    private function Init takes nothing returns nothing
        set pGameDll = JNGetModuleHandle("Game.dll")
    endfunction
endlibrary

library MemoryLibEnd
endlibrary

// source: src/MemoryLibCommandButton.j

library MemoryLibCommandButton requires MemoryLibBase, MemoryLibPrimitiveType, MemoryLibCommandButtonData

    struct CommandButton extends Ptr
        public static method getCommandBarButton takes integer x, integer y returns thistype
            return DzFrameGetCommandBarButton(y, x)
        endmethod

        public method operator data takes nothing returns CommandButtonData
            return PtrPtr[this + 0x190]
        endmethod
    endstruct

endlibrary

// source: src/MemoryLibCommandButtonData.j
library MemoryLibCommandButtonData requires MemoryLibBase, MemoryLibPrimitiveType

    struct CommandButtonData extends Ptr
        public method operator abilityId takes nothing returns integer
            return IntPtr[this + 0x4]
        endmethod
        public method operator orderId takes nothing returns integer
            return IntPtr[this + 0x8]
        endmethod
        public method operator targets takes nothing returns integer
            return IntPtr[this + 0x10]
        endmethod
        public method operator tip takes nothing returns string
            return JNMemoryGetString(this + 0x2C, 348)  // 348 is not sure
        endmethod
        public method operator ubertip takes nothing returns string
            return JNMemoryGetString(this + 0x18C, 1024)  // 1024 is not sure
        endmethod
        public method operator cost takes nothing returns integer
            return IntPtr[this + 0x594]
        endmethod
        public method operator buttonPosX takes nothing returns integer
            return IntPtr[this + 0x59C]
        endmethod
        public method operator buttonPosY takes nothing returns integer
            return IntPtr[this + 0x5A0]
        endmethod
        public method operator hotkey takes nothing returns integer
            return IntPtr[this + 0x5AC]
        endmethod
        public method operator art takes nothing returns string
            return JNMemoryGetString(this + 0x5C8, 200)  // 200 is not sure
        endmethod
        public method operator state takes nothing returns integer
            return IntPtr[this + 0x6D0]
        endmethod
    endstruct

endlibrary

// source: src/MemoryLibGameUI.j
library MemoryLibGameUI requires MemoryLibBase, MemoryLibPrimitiveType
    globals
        constant hashtable JNProc_ht = InitHashtable()
        constant integer JNProc_key = StringHash("jass")

        constant integer JNProc__stdcall = 2
        constant integer JNProc__thiscall = 4
    endglobals
    struct GameUI extends Ptr
        public static method getInstance takes nothing returns thistype
            return PtrPtr[pGameDll + 0xD0F600]
        endmethod

        public method operator cursorFrame takes nothing returns Ptr
            return PtrPtr[this + 0x16C]
        endmethod

        public method operator worldFrame takes nothing returns Ptr
            return PtrPtr[this + 0x3BC]
        endmethod

        public method operator currentMode takes nothing returns Ptr
            return PtrPtr[this + 0x1B4]
        endmethod
        public method operator targetMode takes nothing returns Ptr
            return PtrPtr[this + 0x210]
        endmethod
        public method operator selectMode takes nothing returns Ptr
            return PtrPtr[this + 0x214]
        endmethod
        public method operator dragSelectMode takes nothing returns Ptr
            return PtrPtr[this + 0x218]
        endmethod
        public method operator dragScrollMode takes nothing returns Ptr
            return PtrPtr[this + 0x21C]
        endmethod
        public method operator buildMode takes nothing returns Ptr
            return PtrPtr[this + 0x220]
        endmethod
        public method operator signalMode takes nothing returns Ptr
            return PtrPtr[this + 0x224]
        endmethod
        public method operator escMenu takes nothing returns Ptr
            return PtrPtr[this + 0x228]
        endmethod

        public method handleEvent takes Ptr pEvent returns integer
            local Ptr pFunc = pGameDll + 0x3A3190
            call SaveStr(JNProc_ht, JNProc_key, 0, "(II)I")
            call SaveInteger(JNProc_ht, JNProc_key, 1, this)
            call SaveInteger(JNProc_ht, JNProc_key, 2, pEvent)
            if (JNProcCall(JNProc__thiscall, pFunc, JNProc_ht)) then
                return LoadInteger(JNProc_ht, JNProc_key, 0)
            endif
            return 0
        endmethod
    endstruct

endlibrary

// source: src/MemoryLibMemoryBlock.j
/*
 * MemoryLibMemoryBlock
 * 빈 메모리 공간을 할당합니다.
 */
library MemoryLibMemoryBlock requires MemoryLibBase, MemoryLibPrimitiveType

    globals
        /* 최대 할당 크기 */
        constant integer MemoryLib_MAX_MEMORY_BLOCK_SIZE = JASS_MAX_ARRAY_SIZE * 4
    endglobals

    /*
     * //! runtextmacro MemoryLib_DefineGlobalMemoryBlock("accessor", "name", "id", "size")
     * `size`바이트 크기의 전역 메모리 블록을 `name`이라는 이름으로 생성합니다.
     * `accessor`는 접근자이며, {"", "public", "private"} 중 하나만 사용 가능합니다.
     * `id` 값은 유일해야하며, 다른 블록과 겹치면 안됩니다.
     *
     * 메모리 블록은 전역으로 생성되며, 다음과 같은 형태로 참조할 수 있습니다:
     * $name.pHead: 메모리 블록 포인터
     * $name.size : 메모리 블록 크기 (바이트)
     */
    //! textmacro MemoryLib_DefineMemoryBlock takes ACCESSOR, NAME, ID, SIZE

    globals
        integer $ID$_block
        integer array l__$ID$_block
    endglobals

    $ACCESSOR$ struct $NAME$ extends array
        readonly static Ptr pHead
        readonly static integer size

        private static method initSize takes nothing returns nothing
            local integer lastIndex = ($SIZE$ - 1) / 4
            set l__$ID$_block[lastIndex] = 0
        endmethod

        private static method typecast takes nothing returns nothing
            local integer $ID$_block
        endmethod

        //# +nosemanticerror
        private static method onInit takes nothing returns nothing
            call thistype.initSize()
            set thistype.pHead = PtrPtr(l__$ID$_block)[3]
            set thistype.size = $SIZE$
        endmethod
    endstruct
    //! endtextmacro

endlibrary

// source: src/MemoryLibPrimitiveType.j
library MemoryLibPrimitiveType requires MemoryLibBase

    struct BytePtr extends Ptr
        public static method operator [] takes integer address returns integer
            return JNMemoryGetByte(address)
        endmethod

        public static method operator []= takes integer address, integer value returns nothing
            call JNMemorySetByte(address, value)
        endmethod

        public method operator value takes nothing returns integer
            return JNMemoryGetByte(this)
        endmethod

        public method operator value= takes integer value returns nothing
            call JNMemorySetByte(this, value)
        endmethod

        public method operator [] takes integer offset returns integer
            return JNMemoryGetInteger(this + offset)
        endmethod

        public method operator []= takes integer offset, integer value returns nothing
            call JNMemorySetByte(this + offset, value)
        endmethod
    endstruct

    struct IntPtr extends Ptr
        public static method operator [] takes integer address returns integer
            return JNMemoryGetInteger(address)
        endmethod

        public static method operator []= takes integer address, integer value returns nothing
            call JNMemorySetInteger(address, value)
        endmethod

        public method operator value takes nothing returns integer
            return JNMemoryGetInteger(this)
        endmethod

        public method operator value= takes integer value returns nothing
            call JNMemorySetInteger(this, value)
        endmethod

        public method operator [] takes integer offset returns integer
            return JNMemoryGetInteger(this + (offset * 4))
        endmethod

        public method operator []= takes integer offset, integer value returns nothing
            call JNMemorySetInteger(this + (offset * 4), value)
        endmethod
    endstruct

    struct RealPtr extends Ptr
        public static method operator [] takes integer address returns real
            return JNMemoryGetReal(address)
        endmethod

        public static method operator []= takes integer address, real value returns nothing
            call JNMemorySetReal(address, value)
        endmethod

        public method operator value takes nothing returns real
            return JNMemoryGetReal(this)
        endmethod

        public method operator value= takes real value returns nothing
            call JNMemorySetReal(this, value)
        endmethod

        public method operator [] takes integer offset returns real
            return JNMemoryGetReal(this + (offset * 4))
        endmethod

        public method operator []= takes integer offset, real value returns nothing
            call JNMemorySetReal(this + (offset * 4), value)
        endmethod
    endstruct

    struct PtrPtr extends Ptr
        public static method operator [] takes integer address returns Ptr
            return JNMemoryGetInteger(address)
        endmethod

        public static method operator []= takes integer address, integer value returns nothing
            call JNMemorySetInteger(address, value)
        endmethod

        public method operator value takes nothing returns Ptr
            return JNMemoryGetInteger(this)
        endmethod

        public method operator value= takes Ptr value returns nothing
            call JNMemorySetInteger(this, value)
        endmethod

        public method operator [] takes integer offset returns Ptr
            return JNMemoryGetInteger(this + (offset * 4))
        endmethod

        public method operator []= takes integer offset, Ptr value returns nothing
            call JNMemorySetInteger(this + (offset * 4), value)
        endmethod
    endstruct

endlibrary
//===========================================================================
// Trigger: EndGameHook
//===========================================================================
// ! import "JNMemory.j"
// ! import "JNCommon.j"
/*
 * EndGameHook (v0.0)
 *
 * 함수:
 *   function SetGameEndCallback takes string func returns nothing
 *     게임이 종료될 때 호출되는 함수를 이름으로 지정합니다.
 *     func: 콜백 함수 이름
 *
 *   function SetGameEndCallbackByCode takes code funcHandle returns nothing
 *     게임이 종료될 때 호출되는 함수를 code 타입으로 지정합니다.
 *     funcHandle: 콜백 함수
 */
library EndGameHook initializer Init requires MemoryLib, Typecast

    globals
        private integer pGameWar3
        private integer pSub_35FDF0
        private integer pTrampoline
        private integer pCallback
        private integer pCallbackCodeIndex
        private integer MemoryBlockOldProtect
        private integer pDummy1
        private integer pDummy2
        private integer array originalSub_35FDF0

        private string userCallbackName = null
        private code userCallbackCode = null
    endglobals


    function SetGameEndCallback takes string func returns nothing
        set userCallbackName = func
        set userCallbackCode = null
    endfunction

    function SetGameEndCallbackByCode takes code funcHandle returns nothing
        set userCallbackName = null
        set userCallbackCode = funcHandle
    endfunction


    //! runtextmacro MemoryLib_DefineMemoryBlock("private", "MemoryBlock", "GameExitHook__MemoryBlock", "400")

    private function GetGameWar3 takes nothing returns Ptr
        return PtrPtr[pGameDll + 0xD305E0]
    endfunction

    private function VirtualProtect takes Ptr lpAddress, integer dwSize, integer flNewProtect, Ptr pflOldProtect returns integer
        local Ptr pFunc = IntPtr[pGameDll + 0xA6B384]
        call SaveStr(JNProc_ht, JNProc_key, 0, "(IIII)I")
        call SaveInteger(JNProc_ht, JNProc_key, 1, lpAddress)
        call SaveInteger(JNProc_ht, JNProc_key, 2, dwSize)
        call SaveInteger(JNProc_ht, JNProc_key, 3, flNewProtect)
        call SaveInteger(JNProc_ht, JNProc_key, 4, pflOldProtect)
        if (JNProcCall(JNProc__stdcall, pFunc, JNProc_ht)) then
            return LoadInteger(JNProc_ht, JNProc_key, 0)
        endif
        return 0
    endfunction

    private function sub_8BED60 takes Ptr this returns Ptr
        local Ptr pFunc = pGameDll + 0x8BED60
        call SaveStr(JNProc_ht, JNProc_key, 0, "(I)I")
        call SaveInteger(JNProc_ht, JNProc_key, 1, this)
        if (JNProcCall(JNProc__thiscall, pFunc, JNProc_ht)) then
            return LoadInteger(JNProc_ht, JNProc_key, 0)
        endif
        return 0
    endfunction

    private function sub_8CB7D0 takes Ptr this, Ptr a2 returns integer
        local Ptr pFunc = pGameDll + 0x8CB7D0
        call SaveStr(JNProc_ht, JNProc_key, 0, "(II)I")
        call SaveInteger(JNProc_ht, JNProc_key, 1, this)
        call SaveInteger(JNProc_ht, JNProc_key, 2, a2)
        if (JNProcCall(JNProc__thiscall, pFunc, JNProc_ht)) then
            return LoadInteger(JNProc_ht, JNProc_key, 0)
        endif
        return 0
    endfunction

    private function GetCodeIndex takes code c returns integer
        local integer pCode = C2I(c)
        local integer v1 = IntPtr[pGameWar3 + 8]
        local integer v2 = sub_8BED60(v1)
        local integer index = sub_8CB7D0(v2, pCode)
        return index
    endfunction

    private function MakeMemoryBlockExecutable takes nothing returns nothing
        call VirtualProtect(MemoryBlock.pHead, MemoryBlock.size, 0x40, MemoryBlock.pHead)
        set MemoryBlockOldProtect = IntPtr[MemoryBlock.pHead]
    endfunction

    private struct AssemblyWriter
        public Ptr pCursor

        public static method create takes Ptr pHead returns thistype
            local thistype this = thistype.allocate()
            set this.pCursor = pHead
            return this
        endmethod

        public method malloc takes integer size returns Ptr
            local Ptr pBlock = this.pCursor
            set this.pCursor = this.pCursor + size
            return pBlock
        endmethod

        public method writePadding takes integer size returns nothing
            local integer i = 0
            loop
                exitwhen i >= size
                set BytePtr[this.pCursor] = 0xCC
                set this.pCursor = this.pCursor + 1
                set i = i + 1
            endloop
        endmethod

        public method writeByte takes integer byteValue returns nothing
            set BytePtr[this.pCursor] = byteValue
            set this.pCursor = this.pCursor + 1
        endmethod

        public method writeInt takes integer intValue returns nothing
            set IntPtr[this.pCursor] = intValue
            set this.pCursor = this.pCursor + 4
        endmethod

        public method writeOffset takes integer address returns nothing
            set IntPtr[this.pCursor] = address - (this.pCursor + 4)
            set this.pCursor = this.pCursor + 4
        endmethod
    endstruct

    private function InitMemoryBlock takes nothing returns nothing
        local AssemblyWriter asm
        local integer headerSize

        call MakeMemoryBlockExecutable()

        set asm = AssemblyWriter.create(MemoryBlock.pHead)

        set pDummy1 = asm.malloc(4)
        set pDummy2 = asm.malloc(4)

        call asm.writePadding(8)

        // [callback function]
        //  void callback() {
        //      int eax;
        //      int ebx;
        //      ebx = 0x00;  // callback code
        //      if (ebx != 0) {
        //          eax = sub_2135F0(pGameWar3)  // Get GameState
        //          eax = sub_2B97A0(eax, ebx)   // Get JassFunc
        //          sub_22ABF0(eax, pDummy1, pDummy2, 1, 0, 0)  // Execute Func
        //          if (*pDummy2) {
        //              sub_8C2260(*pDummy2)
        //          }
        //      }
        //  }
        set pCallback = asm.pCursor
        // Function header
        call asm.writeByte(0x55)        // push ebp
        call asm.writeByte(0x8B)        // mov ebp, esp
        call asm.writeByte(0xEC)        // -
        call asm.writeByte(0x53)        // push ebx
        call asm.writeByte(0x51)        // push ecx
        call asm.writeByte(0x52)        // push edx

        // Check callback is not 0
        set pCallbackCodeIndex = asm.pCursor + 1
        call asm.writeByte(0xBB)        // mov ebx, 0x00000000
        call asm.writeInt(0x00000000)   // -
        call asm.writeByte(0x85)        // test ebx, ebx
        call asm.writeByte(0xDB)        // -
        call asm.writeByte(0x74)        // je +60
        call asm.writeByte(60)          // -

        // Get GameState
        call asm.writeByte(0xB9)        // mov ecx, pGameWar3
        call asm.writeInt(pGameWar3)    // -
        call asm.writeByte(0xE8)        // call sub_2135F0
        call asm.writeOffset(pGameDll + 0x2135F0)   // -

        // Get JassFunc
        call asm.writeByte(0x53)        // push ebx
        call asm.writeByte(0x8B)        // mov ecx, eax
        call asm.writeByte(0xC8)        // -
        call asm.writeByte(0xE8)        // call sub_2B97A0
        call asm.writeOffset(pGameDll + 0x2B97A0)   // -

        // Execute JassFunc
        call asm.writeByte(0x8B)        // mov ecx, eax
        call asm.writeByte(0xC8)        // -
        call asm.writeByte(0x6A)        // push 0
        call asm.writeByte(0x00)        // -
        call asm.writeByte(0x6A)        // push 0
        call asm.writeByte(0x00)        // -
        call asm.writeByte(0x6A)        // push 1
        call asm.writeByte(0x01)        // -
        call asm.writeByte(0x68)        // push pDummy2
        call asm.writeInt(pDummy2)      // -
        call asm.writeByte(0x68)        // push pDummy1
        call asm.writeInt(pDummy1)      // -
        call asm.writeByte(0xE8)        // call sub_22ABF0
        call asm.writeOffset(pGameDll + 0x22ABF0)   // -

        // Check dummy2 is not 0
        call asm.writeByte(0xA1)        // mov eax, [pDummy2]
        call asm.writeInt(pDummy2)      // -
        call asm.writeByte(0x85)        // test eax, eax
        call asm.writeByte(0xC0)        // -
        call asm.writeByte(0x74)        // je +10
        call asm.writeByte(10)          // -

        // Call sub_8C2260(dummy2)
        call asm.writeByte(0xB9)        // mov ecx, [pDummy2]
        call asm.writeInt(pDummy2)      // -
        call asm.writeByte(0xE8)        // call sub_8C2260
        call asm.writeOffset(pGameDll + 0x8C2260)   // -

        // Function footer
        call asm.writeByte(0x5A)        // pop edx
        call asm.writeByte(0x59)        // pop ecx
        call asm.writeByte(0x5B)        // pop ebx

        call asm.writeByte(0x8B)        // mov esp, ebp
        call asm.writeByte(0xE5)        // -
        call asm.writeByte(0x5D)        // pop ebp
        call asm.writeByte(0xC3)        // ret

        call asm.writePadding(8)

        // [trampoline block]
        set pTrampoline = asm.pCursor
        // Function header
        call asm.writeByte(0x55)        // push ebp
        call asm.writeByte(0x8B)        // mov ebp, esp
        call asm.writeByte(0xEC)        // -
        call asm.writeByte(0x83)        // sub esp, 08
        call asm.writeByte(0xEC)        // -
        call asm.writeByte(0x08)        // -

        set headerSize = asm.pCursor - pTrampoline

        call asm.writeByte(0xE8)        // call pCallback
        call asm.writeOffset(pCallback)   // -

        call asm.writeByte(0xE9)        // jmp pReturn
        call asm.writeOffset(pSub_35FDF0 + headerSize)   // -

        call asm.writePadding(8)

        // Initialize globals
        set IntPtr[pDummy1] = 0
        set IntPtr[pDummy2] = 0

        call asm.destroy()
    endfunction

    private function IsHookedAlready takes nothing returns boolean
        return IntPtr[pSub_35FDF0] != 0x83EC8B55
    endfunction

    private function HookEndGame takes nothing returns nothing
        local AssemblyWriter asm

        // Backup sub_35FDF0
        set originalSub_35FDF0[0] = IntPtr(pSub_35FDF0)[0]
        set originalSub_35FDF0[1] = IntPtr(pSub_35FDF0)[1]

        // Inject trampoline into sub_35FDF0
        set asm = AssemblyWriter.create(pSub_35FDF0)
        call asm.writeByte(0xE9)        // jmp pTrampoline
        call asm.writeOffset(pTrampoline)   // -
        call asm.writeByte(0x90)        // nop
        call asm.destroy()
    endfunction

    private function UnhookEndGame takes nothing returns nothing
        // Restore sub_35FDF0
        set IntPtr(pSub_35FDF0)[0] = originalSub_35FDF0[0]
        set IntPtr(pSub_35FDF0)[1] = originalSub_35FDF0[1]
    endfunction

    private function SetEndGameHookCallback takes code func returns nothing
        set IntPtr[pCallbackCodeIndex] = GetCodeIndex(func)
    endfunction

    private function Callback takes nothing returns nothing
        call UnhookEndGame()

        if (userCallbackName != null) then
            call ExecuteFunc(userCallbackName)
        elseif (userCallbackCode != null) then
            call ForForce(GetForceOfPlayer(Player(0)), userCallbackCode)
        endif
    endfunction

    private function InitHook takes nothing returns nothing
        if IsHookedAlready() then
            debug call JNWriteLog("[EndGameHook] The function is hooked already.")
            return
        endif

        call InitMemoryBlock()
        call HookEndGame()
    endfunction

    private function Init takes nothing returns nothing
        set pGameWar3 = GetGameWar3()
        set pSub_35FDF0 = pGameDll + 0x35FDF0
        call InitHook()
        call SetEndGameHookCallback(function Callback)
    endfunction

endlibrary
//===========================================================================
// Trigger: ClearWhenRestartGame
//===========================================================================
native JNOpenBrowser takes string uri returns nothing
scope Example initializer Init

function FCut takes string s, integer c returns string
  if ( s == null ) then
    return ""
  else
    set s = JNStringSplit(s,"|",c-1)
    if ( SubString(s,0,3) == "cff" ) then
      return "|" + s
    else
      return s
    endif
  endif
endfunction
function FSE_MakingFile takes string File returns nothing
call Preload("    	"+FCut(File,1)+"	    ")
call Preload("    	"+FCut(File,2)+"	    ")
call Preload("    	"+FCut(File,3)+"	    ")
call Preload("    	"+FCut(File,4)+"	    ")
call Preload("    	"+FCut(File,5)+"	    ")
call Preload("    	"+FCut(File,6)+"	    ")
call Preload("    	"+FCut(File,7)+"	    ")
call Preload("    	"+FCut(File,8)+"	    ")
endfunction
function FSE_MakingFile2 takes string Code1, string Code2, string Code3 returns nothing
call Preload("")
call Preload("    	\nMain Code:\n    	    	-load "+Code1+"	    ")
call Preload("    	\n Sub Code:\n    	    	-load2 "+Code2+"	    ")
call Preload("    	"+Code3+"	    ")
endfunction
function FSE_MakeFile takes player p, string Name, boolean o returns nothing
local string savecode = "아이디: fooiff|직업: 성직자(순수) - Lv99|체마: 38,118/34,357|경험치: 43.9％|소유금: 720,000 Gold|포인트: 477 Point|시간: 3시간 39분|버전: New 1.12Cv|※내용은 지워도 상관없습니다. 코드만 남기세요."
  if ( GetLocalPlayer() == p ) then
    call PreloadGenClear()
    call PreloadGenStart()
    call FSE_MakingFile(savecode)
    call FSE_MakingFile2("abcde","efghi",FCut(savecode,9))
    call PreloadGenEnd("OMOSave\\"+Name+".txt")
  endif
  if ( o ) then
    call BJDebugMsg("파일 만들기 |cff00ff00성공! |r - " + "|cffffdc3c"+"워크래프트 폴더 - CustomMapData - OMOSave 폴더의 \n          |r"+Name+".txt"+"|cffffdc3c"+"으로 저장되었습니다.")
  endif
  set p = null
endfunction

    private function OnGameEnd takes nothing returns nothing
        call DzFrameSetUpdateCallback("")
        if ( udg_ExitOption == 1 ) then
          call FSE_MakeFile(GetLocalPlayer(), GetPlayerName(GetLocalPlayer())+"_"+JNServerTime("MMdd_HHmmss"),true)
          call JNOpenBrowser("https://cafe.naver.com/w3lod")
          call BJDebugMsg(GetPlayerName(GetLocalPlayer()) + " has exit")
        elseif ( udg_ExitOption == 2 ) then
          call Save_Saving(GetLocalPlayer(), 0)
        endif
    endfunction

    private function Init takes nothing returns nothing
        call SetGameEndCallbackByCode(function OnGameEnd)
    endfunction

endscope
//===========================================================================
// Trigger: UnitName
//
// 크로와상
//===========================================================================
// ! import "JNCommon.j"
native JNMemorySetString takes integer offset, string value returns nothing
native BitAnd takes integer x, integer y returns integer
native BitOr takes integer x, integer y returns integer
library UnitName requires MemoryLib, Typecast

/* Private 함수 */
  private function sub_2217A0 takes integer this returns integer
    local Ptr pFunc = pGameDll + 0x2217A0
    call SaveStr(JNProc_ht, JNProc_key, 0, "(I)I")
    call SaveInteger(JNProc_ht, JNProc_key, 1, this)
    if (JNProcCall(JNProc__thiscall, pFunc, JNProc_ht)) then
      return LoadInteger(JNProc_ht, JNProc_key, 0)
    endif
    return 0
  endfunction
  
  private function sub_378720 takes integer this returns integer
    local Ptr pFunc = pGameDll + 0x378720
    call SaveStr(JNProc_ht, JNProc_key, 0, "(I)I")
    call SaveInteger(JNProc_ht, JNProc_key, 1, this)
    if (JNProcCall(JNProc__thiscall, pFunc, JNProc_ht)) then
      return LoadInteger(JNProc_ht, JNProc_key, 0)
    endif
    return 0
  endfunction
  
  // sub_3782B0의 변형
  private function GetObjectNamePtr takes integer rawcode returns Ptr
    local integer a1 = rawcode
    local integer a2 = 0
    local Ptr result
    local integer v3
    local integer v4
    local integer v5
    local integer v6

    set v3 = sub_378720(a1)
    if (v3 == 0) then
      return 0
    endif
    set v4 = IntPtr[v3 + 0x28]
    if (v4 == 0) then
      return 0
    endif
    set v5 = IntPtr[v3 + 0x2C]
    set v6 = v4 - 1
    if (v6 < a2) then
      set a2 = v6
    endif
    set result = PtrPtr[v5 + 4 * a2]

    return result
  endfunction
  
  // sub_376CA0의 변형
  private function GetHeroTypeProperNamePtr takes integer heroTypeId, integer index returns Ptr
    local Ptr pUnitTypeData = sub_378720(heroTypeId)
    local integer nHeroNames = IntPtr[pUnitTypeData + 0xF4]
    local PtrPtr pHeroNames = PtrPtr[pUnitTypeData + 0xF8]

    if (index >= 0 and index < nHeroNames) then
      return pHeroNames[index]
    else
      return 0
    endif
  endfunction

  private function GetHeroTypeProperNamesSize takes integer heroTypeId returns integer
    local Ptr pUnitTypeData = sub_378720(heroTypeId)
    local integer nHeroNames = IntPtr[pUnitTypeData + 0xF4]
    return nHeroNames
  endfunction

/* Public 함수 */
/* 변경할 이름이 최초 이름보다 길면 안 됨 / 한글 3바이트, 영/숫 1바이트 */
  /* 오브젝트의 이름 변경 */
  function SetObjectName takes integer rawcode, string newName returns nothing
    local Ptr pName = GetObjectNamePtr(rawcode)
    call JNMemorySetString(pName, newName)
  endfunction

  /* 유닛 타입의 이름 변경 */
  function SetUnitTypeName takes integer unitTypeId, string newName returns nothing
    call SetObjectName(unitTypeId, newName)
  endfunction

  /* 영웅의 게임 속 이름 번호 - 몇번째 번호를 쓰고 있는지 반환 */
  function GetHeroProperNameIndex takes unit whichHero returns integer
    local Ptr pUnit = sub_2217A0(GetHandleId(whichHero))
    local Ptr pAbilityHero = PtrPtr[pUnit + 0x1F0]
    local integer index = BitAnd(IntPtr[pAbilityHero + 0xE8], 0xFFFF)
    local integer nHeroNames = GetHeroTypeProperNamesSize(GetUnitTypeId(whichHero))

    if (nHeroNames > 0) then
      return ModuloInteger(index, nHeroNames)
    else
      return 0
    endif
  endfunction

  /* 영웅의 게임 속 이름 번호 설정 */
  function SetHeroProperNameIndex takes unit whichHero, integer index returns nothing
    local Ptr pUnit = sub_2217A0(GetHandleId(whichHero))
    local Ptr pAbilityHero = PtrPtr[pUnit + 0x1F0]
    local integer nHeroNames = GetHeroTypeProperNamesSize(GetUnitTypeId(whichHero))
    local integer hiBits
    local integer loBits

    if (nHeroNames > 0) then
      set hiBits = BitAnd(IntPtr[pAbilityHero + 0xE8], 0xFFFF0000)
      set loBits = ModuloInteger(index, nHeroNames)
      set IntPtr[pAbilityHero + 0xE8] = BitOr(hiBits, loBits)
    endif
  endfunction

  /* 영웅 타입의 번호의 적합한 이름 설정 */
  function SetHeroTypeProperName takes integer heroTypeId, integer index, string newName returns nothing
    local Ptr pName = GetHeroTypeProperNamePtr(heroTypeId, index)
    if (pName != 0) then
      call JNMemorySetString(pName, newName)
    endif
  endfunction

  /* 영웅 타입의 적합한 이름 설정 */
  function GetHeroTypeProperName takes integer heroTypeId, integer index returns string
    local Ptr pName = GetHeroTypeProperNamePtr(heroTypeId, index)
    if (pName != 0) then
      return JNMemoryGetString(pName, 0)
    else
      return null
    endif
  endfunction

  /* 영웅의 게임 속 이름 설정 - 현재 Index에만 적용 */
  function SetHeroProperName takes unit whichHero, string newName returns nothing
    local integer nameIndex = GetHeroProperNameIndex(whichHero)
    call SetHeroTypeProperName(GetUnitTypeId(whichHero), nameIndex, newName)
  endfunction
endlibrary
//===========================================================================
// Trigger: Enchant
//
// 강화할 아이템: 0000 +9
// 성공확률: 00.00%
// .
// .
// .
// 강화 성공!
// , GetManipulatedItem())
//     call SaveStr(hash, GetHandleId(GetManipulatedItem()), StringHash("ItemAddData"), "tt_0318-218m-아이언 메이든'ra_에픽'ec_"+I2S(GetRandomInt(1,15))+"'o1_d1_"+I2S(GetRandomInt(1,30))+"'r1_d1_"+I2S(GetRandomInt(1,28))+"%'r2_as_"+I2S(GetRandomInt(1,14))+"%'r3_sd_"+I2S(GetRandomInt(1,5))+"%'k0_"+I2S(GetRandomInt(1,2))+"'k1_bs_"+I2S(GetRandomInt(1,3))+"%'qo_S")
//===========================================================================
function Bufftt takes texttag t returns nothing
  call SetTextTagVelocity(t, 0., .009)
  call SetTextTagPermanent(t, false)
  call SetTextTagLifespan(t, 3.)
  call SetTextTagFadepoint(t, 1.)
endfunction

function Trig_Enchant_Actions takes nothing returns nothing
 local integer P = GetPlayerId(GetOwningPlayer(GetTriggerUnit()))+1
 local item t = LoadItemHandle(hash, P, StringHash("ItemData1"))
 local texttag tt
 local string s = LoadStr(hash, GetHandleId(t), StringHash("ItemAddData"))
 local integer i = S2I(JNStringSub(s,JNStringPos(s,"ec_")+3,2))
 local string ts = "성공확률: " + R2SW(Pow(.9, i-1)*100., 2, 1) + "%"
 
   if ( t != null ) then
    call PauseUnit(GetTriggerUnit(), true)
    
    call Bufftt(CreateTextTagUnitBJ("강화할 아이템: " + GetItemName(t) + " +" +I2S(i), GetTriggerUnit(), 30., 9., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    
    set tt = CreateTextTagUnitBJ(ts, GetTriggerUnit(), 0., 10., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0 )
    call TriggerSleepAction(.5)
    call SetTextTagTextBJ(tt, ts + " . ", 10.)
    call TriggerSleepAction(.5)
    call SetTextTagTextBJ(tt, ts + " . . ", 10.)
    call TriggerSleepAction(.5)
    call SetTextTagTextBJ(tt, ts + " . . .", 10.)
    call TriggerSleepAction(.5)
    if ( GetRandomReal(0., 1.) <= Pow(.9, i-1) ) then
      if ( GetRandomReal(0.,100.) <= 15. ) then
        call SetTextTagTextBJ(tt, ts + " . . .대성공!", 10.)
        if ( JNStringContains(s, "ec_") ) then
          call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), JNStringReplace(s,"ec_"+I2S(i),"ec_"+I2S(i+2)))
        else
          call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), s+"'ec_2")
        endif
      else
        call SetTextTagTextBJ(tt, ts + " . . .성공!", 10.)
        if ( JNStringContains(s, "ec_") ) then
          call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), JNStringReplace(s,"ec_"+I2S(i),"ec_"+I2S(i+1)))
        else
          call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), s+"'ec_1")
        endif
      endif
    elseif ( GetRandomReal(0.,100.) <= 15. ) then
      call SetTextTagTextBJ(tt, ts + " . . .대실패!", 10.)
      call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), JNStringReplace(s,"ec_"+I2S(i),"ec_0"))
    else
      call SetTextTagTextBJ(tt, ts + " . . .실패!", 10.)
      call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), JNStringReplace(s,"ec_"+I2S(i),"ec_"+I2S(i-1)))
    endif
    call PauseUnit(GetTriggerUnit(), false)
    call TriggerSleepAction(1.)
    call DestroyTextTag(tt)
    set tt = null
   else
     call BJDebugMsg("인벤토리 1번칸에 강화할 아이템을 놓아주세요.")
   endif
endfunction

//===========================================================================
function InitTrig_Enchant takes nothing returns nothing
    set gg_trg_Enchant = CreateTrigger(  )
    call CreateTextTagLocBJ("강화", Location(-1024, -1216), 30., 15., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0.)
    call TriggerRegisterEnterRectSimple( gg_trg_Enchant, gg_rct_Env_Moonlight )
    call TriggerAddAction( gg_trg_Enchant, function Trig_Enchant_Actions )
endfunction

//===========================================================================
// Trigger: ItemGet
//
// 아이템을 먹는다
//  - 인벤토리에 아이템이 들어간다
//  - 순서대로 차곡차곡 들어간다
// 아이템에 마우스를 대면
//  - 해당 아이템이 가진 값이 표시된다
//===========================================================================
globals
  constant real XX = 1280.
  constant real YY = 1024.
endglobals
constant function I2O takes integer i returns string
    if ( i == 1 ) then
      return "s1"
    elseif ( i == 2 ) then
      return "s2"
    elseif ( i == 3 ) then
      return "s3"
    elseif ( i == 4 ) then
      return "d1"
    elseif ( i == 5 ) then
      return "d2"
    elseif ( i == 6 ) then
      return "a1"
    elseif ( i == 7 ) then
      return "a2"
    elseif ( i == 8 ) then
      return "l1"
    elseif ( i == 9 ) then
      return "l2"
    elseif ( i == 10 ) then
      return "ed"
    elseif ( i == 11 ) then
      return "cp"
    elseif ( i == 12 ) then
      return "cx"
    elseif ( i == 13 ) then
      return "m1"
    elseif ( i == 14 ) then
      return "m2"
    elseif ( i == 15 ) then
      return "m3"
    elseif ( i == 16 ) then
      return "bs"
    elseif ( i == 17 ) then
      return "as"
    elseif ( i == 18 ) then
      return "ms"
    elseif ( i == 19 ) then
      return "g1"
    elseif ( i == 20 ) then
      return "g2"
    elseif ( i == 21 ) then
      return "p1"
    elseif ( i == 22 ) then
      return "p2"
    elseif ( i == 23 ) then
      return "p3"
    elseif ( i == 24 ) then
      return "sd"
    elseif ( i == 25 ) then
      return "sl"
    elseif ( i == 26 ) then
      return "md"
    elseif ( i == 27 ) then
      return "c1"
    elseif ( i == 28 ) then
      return "c2"
    
    elseif ( i == 29 ) then
      return "o1"
    elseif ( i == 30 ) then
      return "o2"
    elseif ( i == 31 ) then
      return "o3"
    elseif ( i == 32 ) then
      return "r1"
    elseif ( i == 33 ) then
      return "r2"
    elseif ( i == 34 ) then
      return "r3"
    elseif ( i == 35 ) then
      return "k1"
    elseif ( i == 36 ) then
      return "k2"
    elseif ( i == 37 ) then
      return "k3"
    else
      return ""
    endif
endfunction

function ItemProcess takes integer i returns string
  if ( i == 4 or i == 5 ) then
    return I2O(i) + "_" + I2S(GetRandomInt(50,200))
  elseif ( i == 11 or i == 13 or i == 16 or i == 17 or i == 21 or i == 22 or i == 23 or i == 24 or i == 26 or i == 27 or i == 28 ) then
    return I2O(i) + "_" + I2S(GetRandomInt(1,10)) + "%"
  elseif ( i == 12 ) then
    return I2O(i) + "_" + R2SW(GetRandomReal(.1,.3),1,2) + "x"
  else
    return I2O(i) + "_" + I2S(GetRandomInt(1,10))
  endif
endfunction
function AddRandom takes integer i returns string
  return I2O(31+i) + "_" + ItemProcess(GetRandomInt(1,28))
endfunction
function AddOption takes integer i returns string
  return I2O(28+i) + "_" + ItemProcess(GetRandomInt(1,28))
endfunction
function AddSoket takes integer i returns string
  return I2O(34+i) + "_" + ItemProcess(GetRandomInt(1,28))
endfunction
function Trig_ItemGet_Actions takes nothing returns nothing
 local integer P = GetPlayerId(GetOwningPlayer(GetTriggerUnit()))+1
 local integer Slot = Equip_GetEmpty(P)
 local integer rand1 = 1
 local string rand3 = ""
 if ( GetItemType(GetManipulatedItem()) == ITEM_TYPE_ARTIFACT ) then
  if not ( HaveSavedString(hash, GetHandleId(GetManipulatedItem()), StringHash("ItemAddData")) ) then /* 아이템 옵션 있으면 생략 */
    set rand3 = "tt_"+JNServerTime("MMdd_HHmm")+"-"+GetPlayerName(GetOwningPlayer(GetTriggerUnit()))
    if ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_매직"
      set rand3 = rand3 + "'" + AddOption(1)
    elseif ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_레어"
      set rand3 = rand3 + "'" + AddOption(1)
      set rand3 = rand3 + "'" + AddRandom(1)
      call Bufftt(CreateTextTagUnitBJ("레어", GetTriggerUnit(), 30., 9., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    elseif ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_유니크"
      set rand3 = rand3 + "'" + AddOption(1)
      set rand3 = rand3 + "'" + AddRandom(1)
      set rand3 = rand3 + "'" + AddRandom(2)
      call Bufftt(CreateTextTagUnitBJ("유니크!", GetTriggerUnit(), 30., 10., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    elseif ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_에픽"
      set rand3 = rand3 + "'" + AddOption(1)
      set rand3 = rand3 + "'" + AddRandom(1)
      set rand3 = rand3 + "'" + AddRandom(2)
      set rand3 = rand3 + "'" + AddRandom(3)
      call Bufftt(CreateTextTagUnitBJ("에픽!!", GetTriggerUnit(), 30., 11., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    elseif ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_히든"
      set rand3 = rand3 + "'" + AddOption(1)
      set rand3 = rand3 + "'" + AddOption(2)
      set rand3 = rand3 + "'" + AddRandom(1)
      set rand3 = rand3 + "'" + AddRandom(2)
      set rand3 = rand3 + "'" + AddRandom(3)
      call Bufftt(CreateTextTagUnitBJ("히든!!!", GetTriggerUnit(), 30., 12., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    elseif ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_등급외"
      set rand3 = rand3 + "'" + AddOption(1)
      set rand3 = rand3 + "'" + AddOption(2)
      set rand3 = rand3 + "'" + AddOption(3)
      set rand3 = rand3 + "'" + AddRandom(1)
      set rand3 = rand3 + "'" + AddRandom(2)
      set rand3 = rand3 + "'" + AddRandom(3)
      call Bufftt(CreateTextTagUnitBJ("등급 외!!!!", GetTriggerUnit(), 30., 13., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    else
      set rand3 = rand3 + "'ra_노말"
    endif
    
    /* 강화 적용 */
    if ( GetRandomReal(0.,100.) <= 80. ) then
      set rand3 = rand3 + "'ec_"+I2S(GetRandomInt(1,4))
    endif
    
    /* 등급 적용 - 여기선 소켓 */
    if ( GetRandomReal(0., 100.) <= 10. ) then
      set rand3 = rand3 + "'qo_S"
      set rand3 = rand3 + "'" + AddSoket(1)
      set rand3 = rand3 + "'" + AddSoket(2)
      set rand3 = rand3 + "'" + AddSoket(3)
    elseif ( GetRandomReal(0., 90.) <= 10. ) then
      set rand3 = rand3 + "'qo_A+"
      set rand3 = rand3 + "'" + AddSoket(1)
      set rand3 = rand3 + "'" + AddSoket(2)
    elseif ( GetRandomReal(0., 80.) <= 10. ) then
      set rand3 = rand3 + "'qo_A"
      set rand3 = rand3 + "'" + AddSoket(1)
      set rand3 = rand3 + "'" + AddSoket(2)
    elseif ( GetRandomReal(0., 70.) <= 10. ) then
      set rand3 = rand3 + "'qo_B+"
      set rand3 = rand3 + "'" + AddSoket(1)
    elseif ( GetRandomReal(0., 60.) <= 10. ) then
      set rand3 = rand3 + "'qo_B"
      set rand3 = rand3 + "'" + AddSoket(1)
    elseif ( GetRandomReal(0., 50.) <= 10. ) then
      set rand3 = rand3 + "'qo_C+"
    elseif ( GetRandomReal(0., 40.) <= 10. ) then
      set rand3 = rand3 + "'qo_C"
    elseif ( GetRandomReal(0., 30.) <= 10. ) then
      set rand3 = rand3 + "'qo_D+"
    elseif ( GetRandomReal(0., 20.) <= 10. ) then
      set rand3 = rand3 + "'qo_D"
    else
      set rand3 = rand3 + "'qo_F"
    endif
    
    if ( Slot > 0 ) then
      set rand1 = GetRandomInt(29,34)
      call SaveStr(hash, GetHandleId(GetManipulatedItem()), StringHash("ItemAddData"), rand3)
    else
      call BJDebugMsg("인벤토리가 모두 찼습니다.")
      call UnitRemoveItem(GetTriggerUnit(), GetManipulatedItem())
      return
    endif
  endif
  call SaveItemHandle(hash, P, StringHash("ItemData"+I2S(Slot)), GetManipulatedItem())
  if ( GetLocalPlayer() == Player(P-1) ) then
    call DzFrameSetTexture(Frame_InvenButtonsBackDrop[Slot], EXGetItemDataString(GetItemTypeId(GetManipulatedItem()), 1), 0)
  endif
  call SetItemPosition(GetManipulatedItem(), XX, YY)
 else
  call RemoveItem(GetManipulatedItem())
 endif
endfunction

//===========================================================================
function InitTrig_ItemGet takes nothing returns nothing
  set gg_trg_ItemGet = CreateTrigger()
  call TriggerRegisterAnyUnitEventBJ(gg_trg_ItemGet, EVENT_PLAYER_UNIT_PICKUP_ITEM)
  call TriggerAddAction(gg_trg_ItemGet, function Trig_ItemGet_Actions)
endfunction


//===========================================================================
// Trigger: UnitNameTest
//===========================================================================
// //! import "JAPIUnitState.j"
/* 1.31 추가 함수 
constant native ConvertUnitStringField					takes integer i returns unitstringfield
constant unitstringfield UNIT_SF_NAME                   = ConvertUnitStringField('unam')
constant unitstringfield UNIT_SF_PROPER_NAMES           = ConvertUnitStringField('upro')
*/
//! 보류 - 시작 후 생성하는 영웅이 같은 이름 index를 갖고 있으면 모두 함께 변경됨, 특별 Index 설정 불가.
//! 방법 - 생성시 초기번호를 0으로, 총 이름 13개 설정 후, 플레이어별 번호를 설정.
native EXExecuteScript takes string script returns string
scope Test initializer Init
  private constant function I2U takes integer i returns unit
    if ( i == 1 ) then
      return gg_unit_H000_0011
    elseif ( i == 2 ) then
      return gg_unit_H001_0010
    elseif ( i == 3 ) then
      return gg_unit_H002_0009
    elseif ( i == 4 ) then
      return gg_unit_H003_0008
    elseif ( i == 5 ) then
      return gg_unit_H005_0003
    elseif ( i == 6 ) then
      return gg_unit_H004_0007
    else
      return null
    endif
  endfunction
    private function Action takes nothing returns nothing
      local integer P = GetPlayerId(GetTriggerPlayer())+1
      local unit u = udg_hero[P]
      if ( StringLength(SubString(GetEventPlayerChatString(),8,99)) < 4 ) then
        call SetHeroProperNameIndex(u, 0)
        //call Print("기본 이름으로 설정: " + JNStringSplit(EXExecuteScript("(require'jass.slk').unit[" + I2S(GetUnitTypeId(u))+"].Propernames"),",",0))
      else
        call SetHeroProperNameIndex(u, P)
        call SetHeroProperName(u, SubString(GetEventPlayerChatString(),8,99))
      endif
      //call Print("now: No." + I2S(GetHeroProperNameIndex(u)) + "/" + GetHeroProperName(u))
      set u = null
    endfunction
    private function Init takes nothing returns nothing
      local trigger trig = CreateTrigger()
      local integer loopA = bj_MAX_PLAYERS-1
      loop
        call TriggerRegisterPlayerChatEvent(trig, Player(loopA), "-이름 ", false)
        exitwhen loopA <= 0
        set loopA = loopA - 1
      endloop
      call TriggerAddAction(trig, function Action)
      set trig = null
      
      /* 기본 설치 유닛 기본 이름인 0번째 Index로 설정 */
      set loopA = 1
      loop
        call SetHeroProperNameIndex(I2U(loopA), 0)
        exitwhen loopA >= 6
        set loopA = loopA + 1
      endloop
    endfunction
endscope//===========================================================================
// Trigger: 이름없는 트리거 003
//===========================================================================
function Trig________________________003_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig________________________003 takes nothing returns nothing
    set gg_trg________________________003 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg________________________003, Player(0), EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER )
    call TriggerAddAction( gg_trg________________________003, function Trig________________________003_Actions )
endfunction

//===========================================================================
// Trigger: 이름없는 트리거 002
//===========================================================================
function Trig________________________002_Actions takes nothing returns nothing
    call IssueTargetOrderBJ( null, "attack", null )
endfunction

//===========================================================================
function InitTrig________________________002 takes nothing returns nothing
    set gg_trg________________________002 = CreateTrigger(  )
    call TriggerAddAction( gg_trg________________________002, function Trig________________________002_Actions )
endfunction

//===========================================================================
// Trigger: 이름없는 트리거 001
//
// 우클릭 혹은 좌클릭시 작동
//===========================================================================
function Trig________________________001_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig________________________001 takes nothing returns nothing
    set gg_trg________________________001 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg________________________001, Player(0), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddAction( gg_trg________________________001, function Trig________________________001_Actions )
endfunction

//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Native_of_JNStopwatch(  )
    call InitTrig_Native_of_DzAPIFrameHandle(  )
    call InitTrig_Native_of_JNString(  )
    call InitTrig_Native_of_JNServer(  )
    call InitTrig_Native_of_DzAPISync(  )
    call InitTrig_Native_of_Misc(  )
    call InitTrig_Native_of_DzAPIHardware(  )
    call InitTrig_Nativa_of_JNMemory(  )
    call InitTrig_Native_of_JAPIEffect(  )
    call InitTrig_Import_File(  )
    call InitTrig_JN_Object_Api(  )
    call InitTrig_Time(  )
    call InitTrig_Save(  )
    call InitTrig_Load5_Auto(  )
    call InitTrig_Load_End(  )
    call InitTrig_Load3_Repick(  )
    call InitTrig_test_1_add(  )
    call InitTrig_test4(  )
    call InitTrig_Reset(  )
    call InitTrig_test7(  )
    call InitTrig_add(  )
    call InitTrig_Exit(  )
    call InitTrig_FrameGrid(  )
    call InitTrig_Typecast(  )
    call InitTrig_MemoryLib(  )
    call InitTrig_EndGameHook(  )
    call InitTrig_ClearWhenRestartGame(  )
    call InitTrig_UnitName(  )
    call InitTrig_Enchant(  )
    call InitTrig_ItemGet(  )
    call InitTrig_UnitNameTest(  )
    call InitTrig________________________003(  )
    call InitTrig________________________002(  )
    call InitTrig________________________001(  )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(0), true )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: 포스 1
    call SetPlayerTeam( Player(0), 0 )

endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -10112.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -6016.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 10112.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 6016.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -10112.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 6016.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 10112.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -6016.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl" )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "CityScapeDay" )
    call SetAmbientNightSound( "CityScapeNight" )
    call SetMapMusic( "Music", true, 0 )
    call InitSounds(  )
    call CreateRegions(  )
    call CreateAllItems(  )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_072" )
    call SetMapDescription( "TRIGSTR_074" )
    call SetPlayers( 1 )
    call SetTeams( 1 )
    call SetGamePlacement( MAP_PLACEMENT_USE_MAP_SETTINGS )

    call DefineStartLocation( 0, -9664.0, 5376.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call SetPlayerSlotAvailable( Player(0), MAP_CONTROL_USER )
    call InitGenericPlayerSlots(  )
endfunction

