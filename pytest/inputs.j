//===========================================================================
// 
// 다른 워크래프트 III 지도
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Date: Tue Sep 24 22:14:57 2024
//   Map Author: 알려지지 않음
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // User-defined
    integer                 udg_ExitOption             = 0
    unit array              udg_hero

    // Generated
    rect                    gg_rct_Rect_Tutorial       = null
    rect                    gg_rct_Env_Moonlight       = null
    rect                    gg_rct_Hunting_Enter_01_Down = null
    rect                    gg_rct_Player_Hunting_Rect_01 = null
    rect                    gg_rct_Hunting_Enter_02    = null
    rect                    gg_rct_Player_Hunting_Rect_02 = null
    rect                    gg_rct________006          = null
    sound                   gg_snd_BigButtonClick      = null
    sound                   gg_snd_MouseClick1         = null
    sound                   gg_snd_HeroDropItem1       = null
    trigger                 gg_trg_Native_of_JNStopwatch = null
    trigger                 gg_trg_Native_of_DzAPIFrameHandle = null
    trigger                 gg_trg_Native_of_JNString  = null
    trigger                 gg_trg_Native_of_JNServer  = null
    trigger                 gg_trg_Native_of_DzAPISync = null
    trigger                 gg_trg_Native_of_Misc      = null
    trigger                 gg_trg_Native_of_DzAPIHardware = null
    trigger                 gg_trg_Nativa_of_JNMemory  = null
    trigger                 gg_trg_Native_of_JAPIEffect = null
    trigger                 gg_trg_etc                 = null
    trigger                 gg_trg_Import_File         = null
    trigger                 gg_trg_PKey                = null
    trigger                 gg_trg_PushKey             = null
    trigger                 gg_trg_StartSetting        = null
    trigger                 gg_trg_MainSubFrame        = null
    trigger                 gg_trg_SkillTrees          = null
    trigger                 gg_trg_Select              = null
    trigger                 gg_trg_test                = null
    trigger                 gg_trg_MenuQuickSlot       = null
    trigger                 gg_trg_Option              = null
    trigger                 gg_trg_Inventory_Equip     = null
    trigger                 gg_trg_Info                = null
    trigger                 gg_trg_MiniInfo            = null
    trigger                 gg_trg_JN_Object_Api       = null
    trigger                 gg_trg_Time                = null
    trigger                 gg_trg_Save                = null
    trigger                 gg_trg_Load5_Auto          = null
    trigger                 gg_trg_Load_End            = null
    trigger                 gg_trg_Load3_Repick        = null
    trigger                 gg_trg_Check               = null
    trigger                 gg_trg_test_1_add          = null
    trigger                 gg_trg_test_2_change       = null
    trigger                 gg_trg_test4               = null
    trigger                 gg_trg_test5               = null
    trigger                 gg_trg_Test6               = null
    trigger                 gg_trg_Reset               = null
    trigger                 gg_trg_test7               = null
    trigger                 gg_trg_Save2               = null
    trigger                 gg_trg_add                 = null
    trigger                 gg_trg_Exit                = null
    trigger                 gg_trg_FrameGrid           = null
    trigger                 gg_trg_Typecast            = null
    trigger                 gg_trg_MemoryLib           = null
    trigger                 gg_trg_EndGameHook         = null
    trigger                 gg_trg_ClearWhenRestartGame = null
    trigger                 gg_trg_UnitName            = null
    trigger                 gg_trg_HandleProfiler      = null
    trigger                 gg_trg_Regen               = null
    trigger                 gg_trg_Enchant             = null
    trigger                 gg_trg_ItemGet             = null
    trigger                 gg_trg_UnitNameTest        = null
    trigger                 gg_trg_Quest               = null
    trigger                 gg_trg________________________003 = null
    trigger                 gg_trg________________________002 = null
    trigger                 gg_trg________________________001 = null
    trigger                 gg_trg_rt                  = null
    trigger                 gg_trg_UIMain              = null
    trigger                 gg_trg_Tile                = null
    trigger                 gg_trg_Hunting             = null
    unit                    gg_unit_H005_0003          = null
    unit                    gg_unit_H004_0007          = null
    unit                    gg_unit_H003_0008          = null
    unit                    gg_unit_H002_0009          = null
    unit                    gg_unit_H001_0010          = null
    unit                    gg_unit_H000_0011          = null
endglobals

function InitGlobals takes nothing returns nothing
    local integer i = 0
    set udg_ExitOption = 0
endfunction

//***************************************************************************
//*
//*  Sounds
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_BigButtonClick = CreateSound( "Sound\\Interface\\BigButtonClick.wav", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_BigButtonClick, "GlueScreenClick" )
    call SetSoundDuration( gg_snd_BigButtonClick, 390 )
    set gg_snd_MouseClick1 = CreateSound( "Sound\\Interface\\MouseClick1.wav", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_MouseClick1, "InterfaceClick" )
    call SetSoundDuration( gg_snd_MouseClick1, 239 )
    set gg_snd_HeroDropItem1 = CreateSound( "Sound\\Interface\\HeroDropItem1.wav", false, true, true, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_HeroDropItem1, "ItemDrop" )
    call SetSoundDuration( gg_snd_HeroDropItem1, 486 )
endfunction

//***************************************************************************
//*
//*  Items
//*
//***************************************************************************

function CreateAllItems takes nothing returns nothing
    local integer itemID

    call CreateItem( 'azhr', -9377.4, 2851.1 )
    call CreateItem( 'azhr', -9369.2, 2953.1 )
    call CreateItem( 'azhr', -9371.1, 2747.5 )
    call CreateItem( 'ckng', -9447.1, 2961.3 )
    call CreateItem( 'ckng', -9449.0, 2755.7 )
    call CreateItem( 'ckng', -9455.3, 2859.2 )
    call CreateItem( 'desc', -9532.1, 2963.3 )
    call CreateItem( 'desc', -9540.2, 2861.3 )
    call CreateItem( 'desc', -9534.0, 2757.7 )
    call CreateItem( 'modt', -9715.8, 2761.8 )
    call CreateItem( 'modt', -9722.1, 2865.4 )
    call CreateItem( 'modt', -9713.9, 2967.5 )
    call CreateItem( 'ofro', -9294.1, 2853.1 )
    call CreateItem( 'ofro', -9287.8, 2749.5 )
    call CreateItem( 'ratf', -9627.1, 2967.5 )
    call CreateItem( 'ratf', -9629.0, 2761.8 )
    call CreateItem( 'ratf', -9635.3, 2865.4 )
    call CreateItem( 'rde4', -9206.0, 2763.9 )
    call CreateItem( 'rde4', -9212.3, 2867.5 )
    call CreateItem( 'tkno', -9478.6, 2369.8 )
    call CreateItem( 'tkno', -9411.2, 2360.1 )
    call CreateItem( 'tkno', -9348.6, 2360.1 )
    call CreateItem( 'tkno', -9286.8, 2350.4 )
    call CreateItem( 'tkno', -9531.7, 2350.4 )
    call CreateItem( 'tkno', -9585.0, 2369.8 )
    call CreateItem( 'tkno', -9217.0, 2331.3 )
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateBuildingsForPlayer10 takes nothing returns nothing
    local player p = Player(10)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'ncop', -64.0, 896.0, 270.000 )
endfunction

//===========================================================================
function CreateUnitsForPlayer10 takes nothing returns nothing
    local player p = Player(10)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'nvlk', -952.6, 571.8, 336.983 )
    set u = CreateUnit( p, 'nvl2', -3062.5, 2413.8, 277.974 )
    set u = CreateUnit( p, 'nvl2', -2352.1, 2850.3, 65.074 )
    set u = CreateUnit( p, 'nvlw', -2421.5, 2950.8, 321.799 )
    set u = CreateUnit( p, 'nvil', -888.1, 680.9, 308.802 )
    set u = CreateUnit( p, 'nvil', 161.1, 347.9, 28.181 )
    set u = CreateUnit( p, 'nvlk', 289.7, 379.8, 226.446 )
    set u = CreateUnit( p, 'nvlk', -360.9, 1191.0, 150.166 )
    set u = CreateUnit( p, 'nvil', -867.8, 421.7, 43.123 )
    set u = CreateUnit( p, 'nvlw', -108.7, 1288.0, 251.946 )
    set u = CreateUnit( p, 'nvl2', -403.6, 1019.9, 31.158 )
    set u = CreateUnit( p, 'nvl2', -269.8, 902.3, 359.758 )
    set u = CreateUnit( p, 'nvk2', -2495.9, 2827.2, 263.010 )
    set u = CreateUnit( p, 'nvk2', -135.5, 850.4, 19.556 )
    set u = CreateUnit( p, 'nvk2', -1465.0, 1082.0, 177.742 )
    set u = CreateUnit( p, 'nvk2', -1323.0, 1439.7, 221.370 )
    set u = CreateUnit( p, 'nvlk', -1519.3, 1402.3, 3.153 )
    set u = CreateUnit( p, 'nvl2', -1210.5, 1154.0, 152.715 )
    set u = CreateUnit( p, 'nvl2', -1306.5, 1042.5, 109.504 )
    set u = CreateUnit( p, 'nvlk', -2595.4, 1875.5, 98.008 )
    set u = CreateUnit( p, 'nvlw', -1230.3, 1365.5, 217.096 )
    set u = CreateUnit( p, 'nvlw', -2668.4, 1924.0, 126.529 )
    set u = CreateUnit( p, 'nvil', -1391.6, 1389.7, 358.231 )
    set u = CreateUnit( p, 'hsor', -694.1, 936.1, 88.305 )
    set u = CreateUnit( p, 'hsor', -611.6, 1012.9, 186.271 )
    set u = CreateUnit( p, 'hmpr', -784.3, 1029.3, 1.060 )
    set u = CreateUnit( p, 'hsor', -201.2, 1026.8, 349.802 )
    set u = CreateUnit( p, 'hsor', -36.7, 1026.8, 186.271 )
    set u = CreateUnit( p, 'hmpr', -115.4, 953.4, 86.077 )
    set u = CreateUnit( p, 'hrif', -827.5, 1124.3, 86.103 )
    set u = CreateUnit( p, 'hrif', 40.1, 1120.0, 94.107 )
endfunction

//===========================================================================
function CreateNeutralHostile takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_AGGRESSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'nban', -6995.1, 4196.8, 214.991 )
    set u = CreateUnit( p, 'nban', -7007.9, 4108.0, 127.739 )
    set u = CreateUnit( p, 'nenf', -7685.6, 4509.8, 165.648 )
endfunction

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'n000', -10016.0, 4384.0, 270.000 )
    set u = CreateUnit( p, 'ncop', -9088.0, 4608.0, 270.000 )
    set u = CreateUnit( p, 'ncop', -640.0, 1344.0, 270.000 )
    set u = CreateUnit( p, 'ncp3', 384.0, 384.0, 270.000 )
endfunction

//===========================================================================
function CreateNeutralPassive takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H005_0003 = CreateUnit( p, 'H005', -9509.4, 5613.9, 243.624 )
    set u = CreateUnit( p, 'H000', 644.4, 2903.3, 331.244 )
    set gg_unit_H004_0007 = CreateUnit( p, 'H004', -9421.7, 5478.0, 215.831 )
    set gg_unit_H003_0008 = CreateUnit( p, 'H003', -9627.6, 5665.2, 264.367 )
    set gg_unit_H002_0009 = CreateUnit( p, 'H002', -9756.4, 5654.7, 284.859 )
    set gg_unit_H001_0010 = CreateUnit( p, 'H001', -9866.4, 5598.7, 304.534 )
    set gg_unit_H000_0011 = CreateUnit( p, 'H000', -9949.1, 5460.4, 331.244 )
    set u = CreateUnit( p, 'H001', -9888.5, 4225.1, 283.969 )
    set u = CreateUnit( p, 'Hamg', -9823.8, 4220.1, 248.391 )
    set u = CreateUnit( p, 'H000', -10020.1, 4200.2, 331.244 )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
    call CreateBuildingsForPlayer10(  )
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
    call CreateUnitsForPlayer10(  )
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreateNeutralHostile(  )
    call CreateNeutralPassive(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_Rect_Tutorial = Rect( -10112.0, 3584.0, -8704.0, 4736.0 )
    set gg_rct_Env_Moonlight = Rect( -10112.0, 4992.0, -9088.0, 6016.0 )
    set we = AddWeatherEffect( gg_rct_Env_Moonlight, 'LRma' )
    call EnableWeatherEffect( we, true )
    set gg_rct_Hunting_Enter_01_Down = Rect( -9184.0, 4512.0, -8992.0, 4704.0 )
    set gg_rct_Player_Hunting_Rect_01 = Rect( -8320.0, 4992.0, -7040.0, 6016.0 )
    set gg_rct_Hunting_Enter_02 = Rect( -9120.0, 4000.0, -8928.0, 4192.0 )
    set gg_rct_Player_Hunting_Rect_02 = Rect( -6784.0, 4992.0, -5504.0, 6016.0 )
    set gg_rct________006 = Rect( -7648.0, 4864.0, -7200.0, 5024.0 )
endfunction

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: Native of JNStopwatch
//===========================================================================
native JNStopwatchCreate takes nothing returns integer
native JNStopwatchStart takes integer id returns nothing
native JNStopwatchReset takes integer id returns nothing
native JNStopwatchElapsedMinute takes integer id returns integer
native JNStopwatchElapsedHour takes integer id returns integer//===========================================================================
// Trigger: Native of DzAPIFrameHandle
//
// JN 함수 임포트!
//===========================================================================
globals
  constant integer JN_FRAMEPOINT_TOPLEFT = 0
  constant integer JN_FRAMEPOINT_TOP = 1
  constant integer JN_FRAMEPOINT_TOPRIGHT = 2
  constant integer JN_FRAMEPOINT_LEFT = 3
  constant integer JN_FRAMEPOINT_CENTER = 4
  constant integer JN_FRAMEPOINT_RIGHT = 5
  constant integer JN_FRAMEPOINT_BOTTOMLEFT = 6
  constant integer JN_FRAMEPOINT_BOTTOM = 7
  constant integer JN_FRAMEPOINT_BOTTOMRIGHT = 8
    
  constant integer JN_FRAMEEVENT_MOUSE_ENTER = 2
  constant integer JN_FRAMEEVENT_MOUSE_LEAVE = 3
  constant integer JN_FRAMEEVENT_MOUSE_UP = 4
  /* constant integer JN_FRAMEEVENT_MOUSE_DOWN = 5 /* 제대로 안먹힘 */ */
endglobals

native DzFrameShow takes integer frame, boolean enable returns nothing
native DzCreateFrameByTagName takes string frameType, string name, integer parent, string template, integer id returns integer
native DzFrameSetAlpha takes integer frame, integer alpha returns nothing
native DzFrameSetTexture takes integer frame, string texture, integer flag returns nothing
native DzFrameSetAbsolutePoint takes integer frame, integer point, real x, real y returns nothing
native DzFrameSetSize takes integer frame, real w, real h returns nothing
native DzGetGameUI takes nothing returns integer
native DzFrameSetText takes integer frame, string text returns nothing
native DzFrameGetCommandBarButton takes integer row, integer column returns integer
native DzFrameFindByName takes string name, integer id returns integer
native DzSimpleFrameFindByName takes string name, integer id returns integer
native DzGetTriggerUIEventFrame takes nothing returns integer
native DzGetTriggerUIEventPlayer takes nothing returns player
native DzFrameSetFont takes integer frame, string fileName, real height, integer flag returns nothing
native DzFrameSetAllPoints takes integer frame, integer relativeFrame returns boolean
native DzFrameSetScriptByCode takes integer frame, integer eventId, code funcHandle, boolean sync returns nothing
native DzFrameGetMinimap takes nothing returns integer
native DzCreateFrame takes string frame, integer parent, integer id returns integer
native DzFrameSetPoint takes integer frame, integer point, integer relativeFrame, integer relativePoint, real x, real y returns nothing
native DzFrameSetEnable takes integer name, boolean enable returns nothing
native DzFrameClearAllPoints takes integer frame returns nothing
native DzFrameHideInterface takes nothing returns nothing
native DzFrameGetUpperButtonBarButton takes integer buttonId returns integer
native DzFrameGetHeroBarButton takes integer buttonId returns integer
native DzFrameGetHeroHPBar takes integer buttonId returns integer
native DzFrameGetHeroManaBar takes integer buttonId returns integer
native DzFrameGetMinimapButton takes integer buttonId returns integer
native DzFrameEditBlackBorders takes real upperHeight, real bottomHeight returns nothing
native DzEnableWideScreen takes boolean enable returns nothing
native DzFrameGetChatMessage takes nothing returns integer
native DzFrameGetUnitMessage takes nothing returns integer
native DzLoadToc takes string fileName returns nothing
native DzFrameGetPortrait takes nothing returns integer
native DzFrameGetParent takes integer frame returns integer
native DzFrameSetUpdateCallback takes string func returns nothing
native DzSimpleFontStringFindByName takes string name, integer id returns integer
native DzFrameSetParent takes integer frame, integer parent returns nothing


debug native DzSimpleTextureFindByName takes string name, integer id returns integer

native DzFrameSetModel takes integer frame, string modelFile, integer modelType, integer flag returns nothing


  function JNGetFrameByName2 takes string name, integer createContext returns integer
    local integer frame = DzFrameFindByName(name, createContext)
    if frame == 0 then
        set frame = DzSimpleFrameFindByName(name, createContext)
        debug if frame != 0 then
        debug call BJDebugMsg("2. name: " + name + " / DzSimpleFrameFindByName " + I2S(frame))
        debug endif
    debug else
      debug call BJDebugMsg("1. name: " + name + " / DzFrameFindByName " + I2S(frame))
        if frame == 0 then
            set frame = DzSimpleFontStringFindByName(name, createContext)
            debug if frame != 0 then
            debug call BJDebugMsg("3. name: " + name + " / DzSimpleFontStringFindByName " + I2S(frame))
            debug endif
            if frame == 0 then
                set frame = DzSimpleTextureFindByName(name, createContext)
                debug if frame != 0 then
                debug call BJDebugMsg("4. name: " + name + " / DzSimpleTextureFindByName " + I2S(frame))
                debug endif
            endif
        endif
    endif
    debug if frame == 0 then
        debug call BJDebugMsg("0. name: " + name + " / Result " + I2S(frame))
    debug endif
    return frame
endfunction//===========================================================================
// Trigger: Native of JNString
//===========================================================================
native JNStringPos takes string str, string sub returns integer
native JNStringContains takes string str, string sub returns boolean
native JNStringSplit takes string str, string sub, integer index returns string
native JNStringReplace takes string str, string old, string newstr returns string
native JNStringLength takes string str returns integer
native JNStringSub takes string str, integer start, integer length returns string//===========================================================================
// Trigger: Native of JNServer
//===========================================================================
native JNUse takes nothing returns boolean
native JNObjectCharacterResetCharacter takes string UserId returns nothing
native JNObjectCharacterSetInt takes string UserId, string Field, integer value returns nothing
native JNObjectCharacterSetString takes string UserId, string Field, string value returns nothing
native JNObjectCharacterSave takes string MapId, string UserId, string SecretKey, string Character returns string

native JNObjectCharacterGetInt takes string UserId, string Field returns integer
native JNObjectCharacterGetString takes string UserId, string Field returns string
native JNObjectCharacterInit takes string MapId, string UserId, string SecretKey, string Character returns integer
native JNServerTime takes string Format returns string//===========================================================================
// Trigger: Native of DzAPISync
//===========================================================================
native DzGetTriggerSyncPlayer takes nothing returns player
native DzGetTriggerSyncData takes nothing returns string
native DzSyncData takes string prefix, string data returns nothing
native DzTriggerRegisterSyncData takes trigger trig, string prefix, boolean server returns nothing
native DzTriggerRegisterSyncData takes trigger trig, string prefix, boolean server returns nothing//===========================================================================
// Trigger: Native of Misc
//===========================================================================
//JAPIItemState
native EXGetItemDataString takes integer itemcode, integer data_type returns string

// JAPIMisc
//native EXExecuteScript takes string script returns string

//JNCommon
native JNWriteLog takes string str returns nothing//===========================================================================
// Trigger: Native of DzAPIHardware
//===========================================================================
globals
  constant integer JN_OSKEY_BACKSPACE           = $08
  constant integer JN_OSKEY_TAB               = $09
  constant integer JN_OSKEY_RETURN            = $0D
  constant integer JN_OSKEY_SHIFT             = $10
  constant integer JN_OSKEY_CONTROL             = $11
  constant integer JN_OSKEY_ALT               = $12
  constant integer JN_OSKEY_CAPSLOCK            = $14
  constant integer JN_OSKEY_SPACE             = $20
  constant integer JN_OSKEY_SEPARATOR           = $6C
  constant integer JN_OSKEY_RSHIFT            = $A1
  constant integer JN_OSKEY_RCONTROL            = $A3
  constant integer JN_OSKEY_RALT              = $A5
  constant integer JN_OSKEY_OEM_1             = $BA
  constant integer JN_OSKEY_OEM_PLUS            = $BB
  constant integer JN_OSKEY_OEM_COMMA           = $BC
  constant integer JN_OSKEY_OEM_MINUS           = $BD
  constant integer JN_OSKEY_OEM_PERIOD          = $BE
  constant integer JN_OSKEY_OEM_2             = $BF
  constant integer JN_OSKEY_OEM_3             = $C0
  constant integer JN_OSKEY_OEM_4             = $DB
  constant integer JN_OSKEY_OEM_5             = $DC
  constant integer JN_OSKEY_OEM_6             = $DD
  constant integer JN_OSKEY_OEM_7             = $DE
  
  constant integer JN_MOUSE_BUTTON_TYPE_RIGHT = 2 /* 마우스 우클 0x3은 제대로 못잡음 */
endglobals
native DzGetTriggerKeyPlayer takes nothing returns player
native DzGetTriggerKey takes nothing returns integer
native DzTriggerRegisterKeyEventByCode takes trigger trig, integer key, integer status, boolean sync, code funcHandle returns nothing

native DzTriggerRegisterMouseEventByCode takes trigger trig, integer btn, integer status, boolean sync, code funcHandle returns nothing
/* trig: 말 그대로 이벤트 넣을 트리거 */
/* btn: 마우스 버튼을 선택. */
/* status: 0을 넣으면 버튼 땜, 1을 넣으면 버튼 누름. */
/* sync: false는 비동기화, true는 동기화이다. 비동기화는 반응속도가 매우매우매우 빠르지만 멀티 불가. */
/* 동기화는 반응속도는 보통이지만 멀티 가능 */
/* func, funcHandle: 뭔진 모르겠지만 null 값을 넣어도 무방함 *///===========================================================================
// Trigger: Nativa of JNMemory
//===========================================================================
native JNMemoryGetInteger takes integer offset returns integer
native JNGetModuleHandle takes string moduleName returns integer
native JNMemoryGetReal takes integer offset returns real

scope JNMemory initializer Init
  // Thanks to Howww
  globals
    private integer FrameMouseXOffset
    private integer FrameMouseYOffset
  endglobals
  
  //프레임 UI단위로 마우스 X축 반환(0.0 ~ 0.8)
  function GetFrameMouseX takes nothing returns real
    return JNMemoryGetReal(FrameMouseXOffset)
  endfunction
  //프레임 UI단위로 마우스 Y축 반환(0.0 ~ 0.6)
  function GetFrameMouseY takes nothing returns real
    return JNMemoryGetReal(FrameMouseYOffset)
  endfunction
  private function Init takes nothing returns nothing
    set FrameMouseXOffset = JNGetModuleHandle("Game.dll")+0xCB1AF8
    set FrameMouseYOffset = JNGetModuleHandle("Game.dll")+0xCB1AFC
  endfunction
endscope//===========================================================================
// Trigger: Native of JAPIEffect
//===========================================================================
native EXEffectMatRotateZ takes effect e, real angle returns nothing
native EXSetEffectSize takes effect e, real size returns nothing//===========================================================================
// Trigger: Import File
//===========================================================================
//! import "C:\Program Files\Warcraft\New\Breach\Script\GitAdder.j"//===========================================================================
// Trigger: StartSetting
//===========================================================================
scope StartSetting initializer Init
  globals
    private dialog NoSaveDialog = DialogCreate()
    
    integer array Frame_SelectBack
    integer array Frame_SelectText
    
    integer array Frame_Buttons               //아이템/스킬/메뉴 버튼들
    integer array Frame_ButtonsBackDrop       //아이템/스킬/메뉴 버튼 배경 아이콘
    integer array Frame_ButtonsText           //아이템/스킬/메뉴 버튼 내용
    
    constant integer FRAME_TYPE_ITEM = 1
    constant integer FRAME_TYPE_SKILL = 2
    constant integer FRAME_TYPE_MENU = 3
    constant integer FRAME_TYPE_PRESKILL = 4
    constant integer FRAME_TYPE_CHARACTER = 5
    
    integer array Frame_Info
    integer array Frame_InfoValue
    
    integer array Frame_MiniInfo
    integer array Frame_MiniInfoBackdrop
    integer array Frame_MiniInfoText
    integer array Frame_MiniInfoText2
    
    integer array Frame_Setting
    integer array Frame_SettingBackdrop
  endglobals
  
  private function NoSaveNoTime takes nothing returns nothing
   local integer Relative = 0
    call DestroyTrigger(GetTriggeringTrigger())
    //일시 정지 버튼 비활성화 & 숨김
    call DzFrameSetEnable(DzFrameFindByName("PauseButton", 0), false)
    call DzFrameShow(DzFrameFindByName("PauseButton", 0), false)
    
    //게임 저장 버튼 비활성화
    call DzFrameSetEnable(DzFrameFindByName("SaveGameButton", 0), false)
    call DzFrameSetText(DzFrameFindByName("SaveGameButtonText", 0), "게임 저장 불가")
    
    call DzFrameSetEnable(DzFrameFindByName("LoadGameButton", 0), false)
    call DzFrameSetText(DzFrameFindByName("LoadGameButtonText", 0), "로드 또한 불가")
    
    call DzFrameSetEnable(DzFrameFindByName("SaveGameSaveButton", 0), false)
    call DzFrameShow(DzFrameFindByName("SaveGameSaveButton", 0), false)
    call DzFrameSetEnable(DzFrameFindByName("OverwriteOverwriteButton", 0), false)
    call DzFrameSetEnable(DzFrameFindByName("SaveGameFileEditBox", 0), false)
    call DzFrameShow(DzFrameFindByName("SaveGameFileEditBox", 0), false)
    
    //call JNGetFrameByName2("ConsoleUI",0)
    //call TriggerSleepAction(2.)
    //call DzFrameClearAllPoints(Frame_Main)
    //call DzFrameSetParent(Frame_Main, DzFrameGetParent(JNGetFrameByName2(testframe,0)))
    //call DzFrameSetAllPoints(Frame_Main, DzGetGameUI())
  endfunction
  private function Exit takes nothing returns nothing
    call DialogDisplay(GetLocalPlayer(), NoSaveDialog, false)
    call DestroyTimer(GetExpiredTimer())
  endfunction
  private function StopSave takes nothing returns nothing
    call DialogDisplay(GetLocalPlayer(), NoSaveDialog, true)
    call TimerStart(CreateTimer(), 0., false, function Exit)
  endfunction
  private function StopLoad takes nothing returns nothing
    call BJDebugMsg(GetPlayerName(Player(7-8)))
  endfunction
  
  private function RemoveFrame takes integer frameID returns nothing
    call DzFrameClearAllPoints(frameID)
    call DzFrameSetAbsolutePoint(frameID, JN_FRAMEPOINT_TOPRIGHT, 0, 0)
  endfunction
  public function Get takes integer Frame returns integer
    call DzFrameClearAllPoints(Frame)
    return Frame
  endfunction
  /*private function ExpOn takes nothing returns nothing
    call DzFrameSetAlpha(Frame_Buttons[19], 64)
    call BJDebugMsg("ExpOn - " + GetPlayerName(DzGetTriggerUIEventPlayer()) + "/" + I2S(DzGetTriggerUIEventFrame()) + "/" + I2S(Frame_Buttons[19]))
  endfunction
  private function ExpOff takes nothing returns nothing
    call DzFrameSetAlpha(Frame_Buttons[19], 255)
    call BJDebugMsg("ExpOff - " + GetPlayerName(DzGetTriggerUIEventPlayer()) + "/" + I2S(DzGetTriggerUIEventFrame()) + "/" + I2S(Frame_Buttons[19]))
  endfunction*/
  native DzFrameGetName takes integer frame returns string
  private function Init takes nothing returns nothing
   local integer i = 0
   local trigger trg
   
    /* 시간고정, 안개제거 */
    call SetFloatGameState(GAME_STATE_TIME_OF_DAY, 12.)
    call SetTimeOfDayScale(0.)
    call FogEnable(false)
    call FogMaskEnable(false)
    
    /* 전체 프레임 제거 */
    call DzFrameHideInterface()
    
    /* 기본 인터페이스 틀 */
    call DzFrameEditBlackBorders(0, 0)
  
    /* 화면 넓게 보기 */
    call DzEnableWideScreen(true)
    
    /* F9,F10,F11 날리기 */
    call RemoveFrame(DzFrameGetUpperButtonBarButton(0))
    call RemoveFrame(DzFrameGetUpperButtonBarButton(1))
    call RemoveFrame(DzFrameGetUpperButtonBarButton(2))
    
    /* F12 옮기고 작게 */
    set i = Get(DzFrameGetUpperButtonBarButton(3))
    call DzFrameSetSize(i, .022, .024)
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_BOTTOMLEFT, .2, -.004)
    
    /* 보유 자원량 -Gold, 목재, 식량- 제거 */
    call RemoveFrame(DzSimpleFrameFindByName("ResourceBarFrame", 0))
    /* [2] "ResourceBarFrame",0
	[0] Mouse Listener (Gold)
	[1] Mouse Listener (Lumber)
	[2] Mouse Listener (UpKeep)
	[3] Mouse Listener (Food)
	[???] Fps/Apm/Ping display << 이 프레임만 살려야함.
    */
    
    /* F1~F6 영웅 아이콘, 체력바, 마나바 제거 */
    set i = 0
    loop
      call DzFrameSetAbsolutePoint(DzFrameGetHeroBarButton(i), JN_FRAMEPOINT_TOPRIGHT, 0, 0)
      call DzFrameSetAbsolutePoint(DzFrameGetHeroHPBar(i)    , JN_FRAMEPOINT_TOPRIGHT, 0, 0)
      call DzFrameSetAbsolutePoint(DzFrameGetHeroManaBar(i)  , JN_FRAMEPOINT_TOPRIGHT, 0, 0)
      
      /* 미니맵 아이콘 */
      if ( i <= 4 ) then
        call DzFrameSetAbsolutePoint(DzFrameGetMinimapButton(i), JN_FRAMEPOINT_TOPRIGHT, 0, 0)
        
        /* 명령창 12개 */
        if ( i <= 3 ) then
          call DzFrameSetAbsolutePoint(DzFrameGetCommandBarButton(0, i), JN_FRAMEPOINT_TOPRIGHT, 0., 0.)
          call DzFrameSetAbsolutePoint(DzFrameGetCommandBarButton(1, i), JN_FRAMEPOINT_TOPRIGHT, 0., 0.)
          call DzFrameSetAbsolutePoint(DzFrameGetCommandBarButton(2, i), JN_FRAMEPOINT_TOPRIGHT, 0., 0.)
        endif
      endif
      
      exitwhen i >= 5
      set i = i + 1
    endloop
    
    /* 미니맵 이동 */
    set i = Get(DzFrameGetMinimap())
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_BOTTOMLEFT, 0.7, 0.45)
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_TOPRIGHT, 0.78, 0.55)
    call DzFrameShow(i, false)
    
    /* 채팅 메시지 */
    set i = Get(DzFrameGetChatMessage())
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_BOTTOMLEFT, 0., 0.02)
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_TOPRIGHT, 0.2, 0.15)
    
    /* 채팅 테두리 없애기 */
    call DzFrameSetAlpha(JNMemoryGetInteger(JNMemoryGetInteger(JNGetModuleHandle("Game.dll")+0xCB1B9C)+0x20), 0)
    
    /* 채팅 알맹이 */
    set i = Get(JNMemoryGetInteger(JNGetModuleHandle("Game.dll")+0xCB1B9C))
    call DzFrameSetAllPoints(i, JNMemoryGetInteger(JNMemoryGetInteger(JNGetModuleHandle("Game.dll")+0xCB1B9C)+0x20))
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_BOTTOMLEFT, 0., 0.)
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_TOPRIGHT, .2, .02)
    call DzFrameSetAlpha(i, 255)
    
    /* 시스템 메시지 */
    set i = Get(DzFrameGetUnitMessage())
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_BOTTOMLEFT, 0., .135)
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_TOPRIGHT, .3, .435)
    
    /*
    [0] Single Unit "SimpleInfoPanelUnitDetail" 내의
	[0] "SimpleHeroLevelBar",0
		[0] visual bar
		[1] The Exp-Tooltipbox << 표시 위치를 정하여야 함. "SimpleHeroLevelBar_1" 으로는 안잡힘.
    */
    
    /* 유닛 정보 프레임 */
    call RemoveFrame(DzSimpleFrameFindByName("SimpleInfoPanelUnitDetail", 0))
    
    /* 유닛 그룹 선택창 */
    call RemoveFrame(DzFrameGetParent(DzSimpleFrameFindByName("SimpleInfoPanelUnitDetail", 0)))
    
    call RemoveFrame(DzFrameGetPortrait()) /* 이동이 아닌 삭제시 갱신 안되는 오류 있지만 커스텀 HP/MP Text를 사용하니 무방 */

    /* toc 파일 임포트 /* 단축키 등록 프레임 */ */
    call DzLoadToc("ui\\command_ui.toc")
    
    /* 보류 /*리포지드 전용*/ 포트레잇 아래 HP, MP 텍스트 */
    //call DzFrameSetAbsolutePoint(BlzGetOriginFrame(ORIGIN_FRAME_PORTRAIT_HP_TEXT, 0), JN_FRAMEPOINT_TOPRIGHT, 0, 0) - DzSimpleFrameFindByName("ConsoleUI", 0)에 귀속됨.
    //call DzFrameSetAbsolutePoint(BlzGetOriginFrame(ORIGIN_FRAME_PORTRAIT_MANA_TEXT, 0), JN_FRAMEPOINT_TOPRIGHT, 0, 0)
    /* 버프 프레임 /*크기 조정이 안되는 이슈*/ */
    //set Relative = DzSimpleFrameFindByName("SimpleInfoPanelUnitDetail", 0)
    //call DzFrameClearAllPoints(Relative)
    //call DzFrameSetAbsolutePoint(Relative, JN_FRAMEPOINT_CENTER, 0.12, 0.55)
    /* 공격력 아이콘 /*직접 만들어서 활용 않음 */ */
    //call DzFrameClearAllPoints(DzSimpleFontStringFindByName("InfoPanelIconValue", 0))
    //call DzFrameSetAbsolutePoint(DzSimpleFontStringFindByName("InfoPanelIconValue", 0), JN_FRAMEPOINT_LEFT, .33, .0775)
    /* 아이콘 및 텍스트 */
    //call DzFrameSetPoint(DzCreateFrame("SI_Template", Frame_Main, 0), JN_FRAMEPOINT_CENTER, Relative, JN_FRAMEPOINT_CENTER, -0.085, -0.025)
    //call DzFrameSetTexture(DzFrameFindByName("SI_Template", 0), "ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp", 0)
    /* 툴팁 좌표 변경 /* 툴팁 사용 안함 */ */
    //call JNMemorySetReal(JNMemoryGetInteger(DzFrameGetTooltip() + 0x28) + 0x10, 0.134)
  
    set trg = CreateTrigger()
    call TriggerRegisterTimerEvent(trg, 0., false)
    call TriggerAddAction(trg, function NoSaveNoTime)
  
    set trg = CreateTrigger()
    call TriggerRegisterGameEvent(trg, EVENT_GAME_SAVE)
    call TriggerAddAction(trg, function StopSave)
    
    set trg = CreateTrigger()
    call TriggerRegisterGameEvent(trg, EVENT_GAME_LOADED)
    call TriggerAddAction(trg, function StopLoad)
  
   set trg = null
  endfunction
  
endscope//===========================================================================
// Trigger: MainSubFrame
//===========================================================================
scope MainFrame initializer Init
  globals
    integer Frame_Main
    integer Frame_Sub
  endglobals
  private function Init takes nothing returns nothing
   local integer i = 0
    /* 메인 프레임 생성 */
    set Frame_Main = DzCreateFrameByTagName("SPRITE", "", DzGetGameUI(), "", 0)
    call DzFrameSetAbsolutePoint(Frame_Main, JN_FRAMEPOINT_TOPRIGHT, 0., 0.)
    set Frame_Sub = DzCreateFrameByTagName("SPRITE", "", DzGetGameUI(), "", 0)
    call DzFrameSetAbsolutePoint(Frame_Sub, JN_FRAMEPOINT_TOPRIGHT, 0., 0.)
    
    /* 플레이어 이름 */
    set i = DzCreateFrameByTagName("TEXT", "", Frame_Sub, "", 0)
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_CENTER , .25, .07)
    call DzFrameSetText(i, GetPlayerName(GetLocalPlayer()))
    
    /* 경험치바 */
    set i = StartSetting_Get(DzSimpleFrameFindByName("SimpleHeroLevelBar", 0))
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_BOTTOMLEFT, .3, .001)
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_TOPRIGHT, .62, .017)
    
    /* 영웅 이명 - 카샨 */
    set i = StartSetting_Get(DzSimpleFontStringFindByName("SimpleNameValue", 0))
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_CENTER, .25, .055)
    
    /* 유닛 이름 - 피전트  */
    set i = StartSetting_Get(DzSimpleFontStringFindByName("SimpleClassValue", 0))
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_CENTER, .25, .040)
    
    /* 레벨 1 마운틴킹 */
    set i = StartSetting_Get(DzSimpleFrameFindByName("SimpleProgressIndicator", 0))
    call DzFrameSetAbsolutePoint(i, JN_FRAMEPOINT_CENTER, .25, .035)
    
    call DzFrameShow(Frame_Main, false)
  endfunction
endscope//===========================================================================
// Trigger: SkillTrees
//
// UI\Widgets\EscMenu\Human\radiobutton-background.blp
// 동그라미 골드버튼 하이라이트
//===========================================================================
scope SkillTree initializer Init
  globals
    private integer SkillTreeNow
    private integer array SkillTreeButton
    public integer array SkillTreeBackdrop
    private integer array SkillTreeText
    private integer array SkillTreePopup
    
    private integer array SkillTree2Button
    private integer array SkillTree2Backdrop
    private integer array SkillTree2Text
    private integer array SkillTree2Popup
    
    public integer array Info
  endglobals

  private constant function SkillData takes integer i1, integer i2 returns string
    if ( i1 == 1 ) then
      if ( i2 == 1 ) then
        return "세로베기"
      elseif ( i2 == 2 ) then
        return "가로베기"
      elseif ( i2 == 3 ) then
        return "공열섬"
      elseif ( i2 == 4 ) then
        return "찌르기"
      elseif ( i2 == 5 ) then
        return "월아천충"
      elseif ( i2 == 6 ) then
        return "천쇄참월"
      elseif ( i2 == 7 ) then
        return "월아십자충"
      elseif ( i2 == 8 ) then
        return "검은 월아천충"
      elseif ( i2 == 9 ) then
        return "무쌍의 일섬"
      elseif ( i2 == 10 ) then
        return "흑류아돌"
      elseif ( i2 == 11 ) then
        return "무월"
      endif
    endif
    return ""
  endfunction
  private constant function SkillorInfo takes integer no, integer arr returns integer
    if ( no == 1 ) then
      return SkillTreeBackdrop[arr]
    elseif ( no == 2 ) then
      return SkillTree2Backdrop[arr]
    else
      return Info[arr]
    endif
  endfunction
  public function MakeLineX takes integer i, real x, real y, real size, integer no returns nothing
    if ( no == 1 ) then
      set SkillTreeBackdrop[i] = DzCreateFrameByTagName("BACKDROP", "", SkillorInfo(no, 0), "", 0)
    elseif ( no == 2 ) then
      set SkillTree2Backdrop[i] = DzCreateFrameByTagName("BACKDROP", "", SkillorInfo(no, 0), "", 0)
    else
      set Info[i] = DzCreateFrameByTagName("BACKDROP", "", SkillorInfo(no, 0), "", 0)
    endif
    call DzFrameSetTexture(SkillorInfo(no,i), "ReplaceableTextures\\TeamColor\\TeamColor04.blp", 0)
    call DzFrameSetPoint(SkillorInfo(no,i), JN_FRAMEPOINT_LEFT, SkillorInfo(no, 0), JN_FRAMEPOINT_TOPLEFT, x, y)
    call DzFrameSetSize(SkillorInfo(no,i), size, 0.0005)
  endfunction
  public function MakeLineY takes integer i, real x, real y, real size, integer no returns nothing
    if ( no == 1 ) then
      set SkillTreeBackdrop[i] = DzCreateFrameByTagName("BACKDROP", "", SkillorInfo(no, 0), "", 0)
    elseif ( no == 2 ) then
      set SkillTree2Backdrop[i] = DzCreateFrameByTagName("BACKDROP", "", SkillorInfo(no, 0), "", 0)
    else
      set Info[i] = DzCreateFrameByTagName("BACKDROP", "", SkillorInfo(no, 0), "", 0)
    endif
    call DzFrameSetTexture(SkillorInfo(no,i), "ReplaceableTextures\\TeamColor\\TeamColor04.blp", 0)
    call DzFrameSetPoint(SkillorInfo(no,i), JN_FRAMEPOINT_TOP, SkillorInfo(no, 0), JN_FRAMEPOINT_TOPLEFT, x, y)
    call DzFrameSetSize(SkillorInfo(no,i), 0.0005, size)
  endfunction
  private function MakeText takes integer i, real x, real y, string contents, real size, boolean center returns nothing
    set SkillTreeText[i] = DzCreateFrameByTagName("TEXT", "", SkillTreeNow, "", 0)
    if ( center ) then
      call DzFrameSetPoint(SkillTreeText[i], JN_FRAMEPOINT_CENTER, SkillTreeNow, JN_FRAMEPOINT_TOPLEFT, x, y)
    else
      call DzFrameSetPoint(SkillTreeText[i], JN_FRAMEPOINT_LEFT, SkillTreeNow, JN_FRAMEPOINT_TOPLEFT, x, y)
    endif
    if ( size != 0. ) then
      call DzFrameSetFont(SkillTreeText[i], "Fonts\\DFHeiMd.ttf", size, 0)
    endif
    call DzFrameSetText(SkillTreeText[i], contents)
    //! Text를 Font 이후에 설정해야 한줄로 잘 표시됨.
  endfunction
  private function MakeLink takes integer i, real x, real y, real size, string contents returns nothing
    set SkillTreeBackdrop[i] = DzCreateFrameByTagName("BACKDROP", "", SkillTreeNow, "", 0)
    call DzFrameSetTexture(SkillTreeBackdrop[i], contents, 0)
    call DzFrameSetPoint(SkillTreeBackdrop[i], JN_FRAMEPOINT_BOTTOM, SkillTreeNow, JN_FRAMEPOINT_TOPLEFT, x, y-0.005)
    call DzFrameSetSize(SkillTreeBackdrop[i], .005, size+0.01)
  endfunction
  private function MakeLinkX takes integer i, real x, real y, real size, string contents returns nothing
    set SkillTreeBackdrop[i] = DzCreateFrameByTagName("BACKDROP", "", SkillTreeNow, "", 0)
    call DzFrameSetTexture(SkillTreeBackdrop[i], contents, 0)
    call DzFrameSetPoint(SkillTreeBackdrop[i], JN_FRAMEPOINT_LEFT, SkillTreeNow, JN_FRAMEPOINT_TOPLEFT, x, y)
    call DzFrameSetSize(SkillTreeBackdrop[i], size+.02, 0.005)
  endfunction
  private function ButtonClick takes nothing returns nothing
    //local integer f = DzGetTriggerUIEventFrame()
    call BJDebugMsg("Clicked Player: " + GetPlayerName(DzGetTriggerUIEventPlayer()))
    /*
    if ( F2It(f) == FRAME_TYPE_CHARACTER ) then
      set NowSelect[GetPlayerId(DzGetTriggerUIEventPlayer())+1] = F2In(f)
    endif
    if ( GetLocalPlayer() == DzGetTriggerUIEventPlayer() ) then
      if ( F2It(f) == FRAME_TYPE_MENU ) then
        call StopSound(gg_snd_BigButtonClick, false, false)
          call StartSound(gg_snd_BigButtonClick)
          */
  endfunction
  /*private function ButtonJustUp takes nothing returns nothing
      local integer f = DzGetTriggerUIEventFrame()
      if ( GetLocalPlayer() == DzGetTriggerUIEventPlayer() ) then
        //call BJDebugMsg("Mouse Up: " + I2S(F2In(f)) + "번째 " + FI2S(F2It(f)))
        
        set f = 12+3*F2In(f)
        call DzFrameSetText(Frame_SelectText[21], JNStringSplit(SelectText(NowSelect[GetPlayerId(DzGetTriggerUIEventPlayer())+1]),"'",f))
        call DzFrameSetText(Frame_SelectText[22], JNStringSplit(SelectText(NowSelect[GetPlayerId(DzGetTriggerUIEventPlayer())+1]),"'",f+1))
        call DzFrameSetText(Frame_SelectText[23], JNStringSplit(SelectText(NowSelect[GetPlayerId(DzGetTriggerUIEventPlayer())+1]),"'",f+2))
        
        call DzFrameShow(Frame_SelectBack[15], true)
        
        //call DzFrameShow(Frame_SelectBack[1], true)
      endif
    endfunction
    private function ButtonJustDown takes nothing returns nothing
      local integer f = DzGetTriggerUIEventFrame()
      if ( GetLocalPlayer() == DzGetTriggerUIEventPlayer() ) then
        call DzFrameShow(Frame_SelectBack[15], false)
      endif
    endfunction*/
  private constant function f2I takes integer f returns integer
    if ( f == SkillTreeButton[1] ) then
      return 1
    elseif ( f == SkillTreeButton[2] ) then
      return 2
    elseif ( f == SkillTreeButton[3] ) then
      return 3
    elseif ( f == SkillTreeButton[4] ) then
      return 4
    elseif ( f == SkillTreeButton[5] ) then
      return 5
    elseif ( f == SkillTreeButton[6] ) then
      return 6
    elseif ( f == SkillTreeButton[7] ) then
      return 7
    elseif ( f == SkillTreeButton[8] ) then
      return 8
    elseif ( f == SkillTreeButton[9] ) then
      return 9
    elseif ( f == SkillTreeButton[10] ) then
      return 10
    elseif ( f == SkillTreeButton[11] ) then
      return 11
    else
      return 0
    endif
  endfunction
  native JNStringCount takes string str, string sub returns integer
  native DzFrameGetText takes integer frame returns string
  native DzFrameGetHeight takes integer frame returns real
  private constant function MaxRow2 takes integer i1, integer space returns real
    return .0272 + i1*.0068 - space *0.006
  endfunction
  private function MaxRow takes real title, string s, integer i2 returns real
    local string temp_s
    local real return_x = 0.07
    loop
      exitwhen i2 <= 0
      set temp_s = JNStringSplit(s, " - ", i2)
      set return_x = RMaxBJ(return_x, MaxRow2(JNStringLength(temp_s), JNStringCount(temp_s, " ")))
      set i2 = i2 - 1
    endloop
    set temp_s = null
    return RMaxBJ(title, return_x)
  endfunction
  private constant function MaxHeight takes integer count returns real
    return count*.01
  endfunction
  private function ButtonJustUp takes nothing returns nothing
   local integer f = DzGetTriggerUIEventFrame()
   local string s = SkillData(1, f2I(f))
   local integer need = JNStringCount(DzFrameGetText(SkillTreePopup[2])," - ")
   call DzFrameSetAbsolutePoint(SkillTree2Popup[0], JN_FRAMEPOINT_BOTTOMLEFT, GetFrameMouseX(), GetFrameMouseY())
   call DzFrameShow(SkillTree2Popup[0], true)
   
    if ( GetLocalPlayer() == DzGetTriggerUIEventPlayer() ) then
      call DzFrameSetText(SkillTreePopup[1], "|cffffcc00" + s)
      call DzFrameSetAbsolutePoint(SkillTreePopup[0], JN_FRAMEPOINT_BOTTOMLEFT, GetFrameMouseX(), GetFrameMouseY())
      if ( need == 0 ) then
        call DzFrameSetSize(SkillTreePopup[0], RMaxBJ(.07, .015+JNStringLength(s)*.012-JNStringCount(s, " ")*.008), .06)
      else
        call DzFrameSetSize(SkillTreePopup[0], MaxRow(.015+JNStringLength(s)*.012-JNStringCount(s, " ")*.008, DzFrameGetText(SkillTreePopup[2]), need), .06+MaxHeight(need))
        call DzFrameSetPoint(SkillTreePopup[3], JN_FRAMEPOINT_TOPLEFT, SkillTreePopup[0], JN_FRAMEPOINT_TOPLEFT, .01, -DzFrameGetHeight(SkillTreePopup[0])+.015)
      endif
      call DzFrameShow(SkillTreePopup[0], true)
    endif
  endfunction
  private function ButtonJustDown takes nothing returns nothing
    if ( GetLocalPlayer() == DzGetTriggerUIEventPlayer() ) then
      call DzFrameShow(SkillTreePopup[0], false)
      call DzFrameShow(SkillTree2Popup[0], false)
    endif
  endfunction
  private function MakeIcon takes integer i, real x, real y, real size, integer addButton, string texture returns nothing
    set SkillTreeBackdrop[i] = DzCreateFrameByTagName("BACKDROP", "", SkillTreeNow, "", 0)
    call DzFrameSetPoint(SkillTreeBackdrop[i], JN_FRAMEPOINT_CENTER, SkillTreeNow, JN_FRAMEPOINT_TOPLEFT, x, y)
    call DzFrameSetTexture(SkillTreeBackdrop[i], texture, 0)
    call DzFrameSetSize(SkillTreeBackdrop[i], size, size)
    if ( addButton >= 23 ) then
      set SkillTreeButton[addButton] = DzCreateFrameByTagName("BUTTON", "", SkillTreeBackdrop[i], "", 0)
      call DzFrameSetAllPoints(SkillTreeButton[addButton], SkillTreeBackdrop[i])
      call DzFrameSetScriptByCode(SkillTreeButton[addButton], JN_FRAMEEVENT_MOUSE_UP, function ButtonClick, false)
      call DzFrameSetScriptByCode(SkillTreeButton[addButton], JN_FRAMEEVENT_MOUSE_ENTER, function ButtonJustUp, false)
      call DzFrameSetScriptByCode(SkillTreeButton[addButton], JN_FRAMEEVENT_MOUSE_LEAVE, function ButtonJustDown, false)
    elseif ( addButton > 0 ) then
      set SkillTreeButton[addButton] = DzCreateFrameByTagName("BUTTON", "", SkillTreeBackdrop[i], "", 0)
      call DzFrameSetAllPoints(SkillTreeButton[addButton], SkillTreeBackdrop[i])
      call DzFrameSetScriptByCode(SkillTreeButton[addButton], JN_FRAMEEVENT_MOUSE_UP, function ButtonClick, false)
      call DzFrameSetScriptByCode(SkillTreeButton[addButton], JN_FRAMEEVENT_MOUSE_ENTER, function ButtonJustUp, false)
      call DzFrameSetScriptByCode(SkillTreeButton[addButton], JN_FRAMEEVENT_MOUSE_LEAVE, function ButtonJustDown, false)
    endif
  endfunction

  private function MakeTextPopup takes integer i, real x, real y, string contents, real size returns nothing
    set SkillTreePopup[i] = DzCreateFrameByTagName("TEXT", "", SkillTreePopup[0], "", 0)
    call DzFrameSetPoint(SkillTreePopup[i], JN_FRAMEPOINT_TOPLEFT, SkillTreePopup[0], JN_FRAMEPOINT_TOPLEFT, x, y)
    call DzFrameSetText(SkillTreePopup[i], contents)
    if ( size != 0. ) then
      call DzFrameSetFont(SkillTreePopup[i], "Fonts\\DFHeiMd.ttf", size, 0)
    endif
  endfunction
  private function CreateSkillTreePopup takes nothing returns nothing
    if ( false ) then /*요구조건 충족*/
      set SkillTreePopup[0] = DzCreateFrameByTagName("BACKDROP", "", SkillTreeBackdrop[1], "QuestButtonBaseTemplate", 0)
      call DzFrameSetAbsolutePoint(SkillTreePopup[0], JN_FRAMEPOINT_BOTTOMLEFT, 0.14, 0.55)
      call MakeTextPopup(1, .01, -.010, "|cffffcc00세로베기|r", 0.015)
      call MakeTextPopup(2, .01, -.025, "Lv: 10|cff00ff00+2|r/10", 0.010)
      call MakeTextPopup(3, .01, -.045, "|c000080c0자세히.. (클릭)|r", 0.010)
    else
      set SkillTreePopup[0] = DzCreateFrameByTagName("BACKDROP", "", SkillTreeBackdrop[1], "QuestButtonBaseTemplate", 0)
      call DzFrameSetAbsolutePoint(SkillTreePopup[0], JN_FRAMEPOINT_BOTTOMLEFT, 0.14, 0.55)
      call DzFrameSetSize(SkillTreePopup[0], .07, .06)
      call MakeTextPopup(1, .01, -.010, "|cffffcc00세로베기|r", 0.015)
      call MakeTextPopup(2, .01, -.025, "|cffff3315필요 스킬:
 - 찌르기 Lv1
 - 월아천충 Lv1
 - 검은 월아천충 Lv1", 0.010)
      call MakeTextPopup(3, .01, -.075, "|c000080c0자세히.. (클릭)|r", 0.010)
    endif
    call DzFrameShow(SkillTreePopup[0], false)
  endfunction
  private function CreateSkillTree takes nothing returns nothing
    set SkillTreeBackdrop[0] = DzCreateFrameByTagName("BACKDROP", "", DzGetGameUI(), "QuestButtonBaseTemplate", 0)
    call DzFrameSetAbsolutePoint(SkillTreeBackdrop[0], JN_FRAMEPOINT_TOPLEFT, 0.14, 0.55)
    call DzFrameSetSize(SkillTreeBackdrop[0], .22, .45)
    call DzFrameSetAlpha(SkillTreeBackdrop[0], 128)
    set SkillTreeNow = SkillTreeBackdrop[0]
    call MakeLineY(2, .06, -.01, .43, 1)
    call MakeLineX(3, .06, -.04, .15, 1)
    call MakeLineX(4, .01, -.06, .20, 1)
    call MakeLineY(5, .11, -.04, .02, 1)
    call MakeLineY(6, .16, -.04, .02, 1)
    
    set SkillTreeBackdrop[1] = DzCreateFrameByTagName("BACKDROP", "", SkillTreeNow, "", 0)
    call DzFrameSetAllPoints(SkillTreeBackdrop[1], SkillTreeNow)
    call DzFrameSetTexture(SkillTreeBackdrop[1], "SkillTree_Transparency.blp", 0)
    call DzFrameSetAlpha(SkillTreeBackdrop[1], 204)
    set SkillTreeNow = SkillTreeBackdrop[1]

    call MakeText(1, .035, -.03, "이치고", .015, true)
    call MakeText(2, .135, -.02, "스킬트리", .020, true)
    call MakeText(3, .085, -.05, "[기본]", 0., true)
    call MakeText(4, .135, -.05, "[핵심]", 0., true)
    call MakeText(5, .185, -.05, "[변신]", 0., true)
    
    call MakeText(6, .035, -.07, "필요 변신", .01, true)
    call MakeText(7, .085, -.07, "종베기", .01, true)
    call MakeText(8, .135, -.07, "횡베기", .01, true)
    call MakeText(9, .185, -.07, "찌르기", .01, true)
    
    call MakeText(10, .035, -.10, "기본", 0., true)
    call MakeText(11, .035, -.14, "1단계", 0., true)
    call MakeText(12, .035, -.18, "2단계", 0., true)
    call MakeText(13, .035, -.22, "3단계", 0., true)
    call MakeText(14, .035, -.26, "4단계", 0., true)
    call MakeText(15, .035, -.30, "5단계", 0., true)
    call MakeText(16, .035, -.34, "6단계", 0., true)
    call MakeText(17, .035, -.38, "7단계", 0., true)
    call MakeText(18, .035, -.42, "8단계", 0., true)
    //call MakeText(19, .035, -.46, "9단계", 0., true)
    
    call MakeIcon(19, .085, -.10, .03, 1, "SkillTree_ichi_01.blp")
    call MakeIcon(20, .135, -.10, .03, 2, "SkillTree_ichi_02.blp")
    call MakeIcon(21, .135, -.14, .03, 3, "SkillTree_ichi_03.blp")
    call MakeIcon(22, .185, -.14, .03, 4, "SkillTree_ichi_04.blp")
    call MakeIcon(23, .085, -.18, .03, 5, "SkillTree_ichi_05.blp")
    call MakeIcon(24, .135, -.22, .03, 6, "SkillTree_ichi_06.blp")
    call MakeIcon(25, .085, -.26, .03, 7, "SkillTree_ichi_07_DIS.blp")
    call MakeIcon(26, .135, -.34, .03, 8, "SkillTree_ichi_08_DIS.blp")
    call MakeIcon(27, .085, -.38, .03, 9, "SkillTree_ichi_09_DIS.blp")
    call MakeIcon(28, .185, -.38, .03, 10, "SkillTree_ichi_10_DIS.blp")
    call MakeIcon(29, .135, -.42, .03, 11, "SkillTree_ichi_11_DIS.blp")
    
    call MakeLink(30, .135, -.12, 0., "SkillTree_ActiveLink_Red.blp")
    call MakeLink(31, .085, -.16, .04, "SkillTree_ActiveLink_Red.blp")
    call MakeLink(32, .135, -.20, .04, "SkillTree_ActiveLink_Red.blp")
    call MakeLink(33, .085, -.24, .04, "UI\\Widgets\\Console\\Human\\human-inventory-slotfiller.blp")
    call MakeLink(34, .135, -.32, .08, "UI\\Widgets\\Console\\Human\\human-inventory-slotfiller.blp")
    call MakeLink(35, .085, -.36, .08, "UI\\Widgets\\Console\\Human\\human-inventory-slotfiller.blp")
    call MakeLink(36, .185, -.36, .20, "UI\\Widgets\\Console\\Human\\human-inventory-slotfiller.blp")
    call MakeLinkX(37,.100, -.38, .05, "UI\\Widgets\\Console\\Human\\human-inventory-slotfiller.blp")
    call MakeLink(38, .135, -.40, .04, "UI\\Widgets\\Console\\Human\\human-inventory-slotfiller.blp")
  endfunction
  private function CreateSkillTree2 takes nothing returns nothing
    set SkillTree2Backdrop[0] = DzCreateFrameByTagName("BACKDROP", "", SkillTreeBackdrop[0], "QuestButtonBaseTemplate", 0)
    call DzFrameSetAbsolutePoint(SkillTree2Backdrop[0], JN_FRAMEPOINT_TOPLEFT, 0.45, 0.55)
    call DzFrameSetSize(SkillTree2Backdrop[0], .2, .31)
    call DzFrameSetAlpha(SkillTree2Backdrop[0], 128)
    
    set SkillTreeNow = SkillTree2Backdrop[0]
    call MakeLineY(39, .06, -.01, .09, 2)
    call MakeLineX(40, .06, -.035, .13, 2)
    call MakeLineX(41, .06, -.065, .13, 2)
    call MakeLineX(42, .01, -.10, .18, 2)
    
    set SkillTree2Backdrop[1] = DzCreateFrameByTagName("BACKDROP", "", SkillTreeNow, "", 0)
    call DzFrameSetAllPoints(SkillTree2Backdrop[1], SkillTreeNow)
    call DzFrameSetTexture(SkillTree2Backdrop[1], "SkillTree_Transparency.blp", 0)
    call DzFrameSetAlpha(SkillTree2Backdrop[1], 204)
    set SkillTreeNow = SkillTree2Backdrop[1]
    call MakeIcon(43, .035, -.035, .05, 0, "SkillTree_ichi_01.blp")
    call MakeIcon(44, .025, -.070, .02, 21, "SkillTree_PlusMinus02.blp")
    call MakeIcon(45, .045, -.070, .02, 22, "SkillTree_PlusMinus01.blp")
    call MakeText(46, .035, -.088, "Lv 12/10", .010, true)
    
    call MakeText(47, .125, -.020, "세로베기", .020, true)
    
    call MakeText(48, .065, -.050, "전방을 세로로 베어 처음으로
맞는 적에게 데미지를 줍니다.", .010, false)

    call MakeText(49, .065, -.075, "데미지: 50 (40 + 공격력 10%)", .010, false)
    call MakeText(50, .065, -.090, "다음레벨: 65 (50 + 공격력 15%)", .010, false)
    
    call MakeText(51, .100, -.110, "|cff3ca03c강화", .015, true)
    call MakeIcon(52, .100, -.135, .03, 0, "SkillTree_AddFire_0.blp")
    call MakeIcon(53, .085, -.150, .015, 23, "SkillTree_PlusMinus04.blp")
    call MakeIcon(54, .115, -.150, .015, 24, "SkillTree_PlusMinus01.blp")
    call MakeText(55, .100, -.155, "|cff3ca03c0/5", .008, true)
    
    call MakeText(56, .070, -.180, "|cffed393e진화Ａ", .015, true)
    call MakeIcon(57, .070, -.205, .03, 0, "SkillTree_AddFire_2_1.blp")
    call MakeIcon(58, .055, -.220, .015, 23, "SkillTree_PlusMinus02.blp")
    call MakeIcon(59, .085, -.220, .015, 24, "SkillTree_PlusMinus01.blp")
    call MakeText(60, .070, -.225, "|cffed393e2/3", .008, true)
    call MakeText(61, .130, -.180, "|cff3681eb진화Ｂ", .015, true)
    call MakeIcon(62, .130, -.205, .03, 0, "SkillTree_AddFire_2_2.blp")
    call MakeIcon(63, .115, -.220, .015, 23, "SkillTree_PlusMinus02.blp")
    call MakeIcon(64, .145, -.220, .015, 24, "SkillTree_PlusMinus03.blp")
    call MakeText(65, .130, -.225, "|cff3681eb3/3", .008, true)
    
    call MakeText(66, .070, -.250, "|cffeb8dd0개화Ａ", .015, true)
    call MakeIcon(67, .070, -.275, .03, 0, "SkillTree_AddFire_3_1.blp")
    call MakeIcon(68, .055, -.290, .015, 23, "SkillTree_PlusMinus04.blp")
    call MakeIcon(69, .085, -.290, .015, 24, "SkillTree_PlusMinus01.blp")
    call MakeText(70, .070, -.295, "|cffeb8dd00/1", .008, true)
    call MakeText(71, .130, -.250, "|cfffeff79개화Ｂ", .015, true)
    call MakeIcon(72, .130, -.275, .03, 0, "SkillTree_AddFire_3_2.blp")
    call MakeIcon(73, .115, -.290, .015, 23, "SkillTree_PlusMinus02.blp")
    call MakeIcon(74, .145, -.290, .015, 24, "SkillTree_PlusMinus03.blp")
    call MakeText(75, .130, -.295, "|cfffeff791/1", .008, true)
  endfunction
  private function MakeText2Popup takes integer i, real x, real y, string contents, real size returns nothing
    set SkillTree2Popup[i] = DzCreateFrameByTagName("TEXT", "", SkillTreeNow, "", 0)
    call DzFrameSetPoint(SkillTree2Popup[i], JN_FRAMEPOINT_TOPLEFT, SkillTree2Popup[0], JN_FRAMEPOINT_TOPLEFT, x, y)
    call DzFrameSetText(SkillTree2Popup[i], contents)
    if ( size != 0. ) then
      call DzFrameSetFont(SkillTree2Popup[i], "Fonts\\DFHeiMd.ttf", size, 0)
    endif
  endfunction
  private function CreateSkillTree2Popup takes nothing returns nothing
    set SkillTree2Popup[0] = DzCreateFrameByTagName("BACKDROP", "", SkillTreeNow, "QuestButtonBaseTemplate", 0)
    set SkillTreeNow = SkillTree2Popup[0]
    if ( false ) then
      if ( false ) then /*Plus*/
        call DzFrameSetAbsolutePoint(SkillTree2Popup[0], JN_FRAMEPOINT_BOTTOMLEFT, 0.14, 0.55)
        call DzFrameSetSize(SkillTree2Popup[0], .07, .055)
        call MakeText2Popup(1, .01, -.010, "|cffffcc00추가개방", 0.)
        call MakeText2Popup(3, .01, -.035, "|c000080c0클릭하여 개방|r", 0.010)
      else
        call DzFrameSetAbsolutePoint(SkillTree2Popup[0], JN_FRAMEPOINT_BOTTOMLEFT, 0.14, 0.55)
        call DzFrameSetSize(SkillTree2Popup[0], .095, .105)
        call MakeText2Popup(1, .01, -.010, "|cffffcc00추가개방", 0.015)
        call MakeText2Popup(2, .01, -.035, "|cffff3315필요사항:
 - 스킬레벨 4 이상
 - 스킬포인트 1 이상
 - 최대 레벨 도달", 0.010)
        call MakeText2Popup(3, .01, -.085, "|c000080c0조건 후 클릭하여 개방|r", 0.010)
      endif
    else
      if ( false ) then
        call DzFrameSetAbsolutePoint(SkillTree2Popup[0], JN_FRAMEPOINT_BOTTOMLEFT, 0.14, 0.55)
        call DzFrameSetSize(SkillTree2Popup[0], .085, .055)
        call MakeText2Popup(1, .01, -.010, "|cffffcc00개방제한", 0.)
        call MakeText2Popup(3, .01, -.035, "|c000080c0클릭하여 개방제한|r", 0.010)
      else
        call DzFrameSetAbsolutePoint(SkillTree2Popup[0], JN_FRAMEPOINT_BOTTOMLEFT, 0.14, 0.55)
        call DzFrameSetSize(SkillTree2Popup[0], .100, .105)
        call MakeText2Popup(1, .01, -.010, "|cffffcc00개방제한", 0.015)
        call MakeText2Popup(2, .01, -.035, "|cffff3315필요사항:
 - 상위 스킬 우선 제한
 - 골드 1,000 이상
 - 최소 레벨 도달", 0.010)
        call MakeText2Popup(3, .01, -.085, "|c000080c0조건 후 클릭하여 제한|r", 0.010)
      endif
    endif
    
    call DzFrameShow(SkillTree2Popup[0], false)
  endfunction
  
  private function Init takes nothing returns nothing
    call CreateSkillTree()
    call DzFrameShow(SkillTreeBackdrop[0], false)
    call CreateSkillTreePopup()
    call CreateSkillTree2()
    call DzFrameShow(SkillTree2Backdrop[0], false)
    call CreateSkillTree2Popup()
  endfunction
endscope//===========================================================================
// Trigger: Select
//
// CreateSelectIcon 5+i*2
// Frame_SelectBack
// MakeSelectText 16~18 +i *3
// Frame_SelectText
//===========================================================================
scope Select initializer Init
  globals
    private boolean array PreLoad
    public integer array NowSelect

    private unit array SelectedUnit
    private boolean array SelectBol
    private integer array SelectCount
    
    private integer array Frame_SelectStars
    private integer array Frame_SelectSkills
    
    private integer array SlotLv
    private integer array SlotPlayTime

    public constant string DEFAULT_DATA = "0'0/1_0'1.2500/2_0'0/3_0'0/4_0'0/5_0'0/6_0'0/"
                                         //Last Slot
                                           //플탐All
                                             //1번슬롯_
                                                //_플탐
                                                 //Lv.
                                                   //.경험치
    public real startXX = -9696.
    public real startYY = 4288.
  endglobals

  private constant function F2In takes integer frame returns integer
  //아이템/스킬/메뉴의 n번째 값인지 반환
    if ( frame == Frame_Buttons[1] or frame == Frame_Buttons[8] or frame == Frame_Buttons[16] or frame == Frame_SelectSkills[1] or frame == Frame_SelectBack[8] ) then
      return 1
    elseif ( frame == Frame_Buttons[2] or frame == Frame_Buttons[9] or frame == Frame_Buttons[17] or frame == Frame_SelectSkills[3] or frame == Frame_SelectBack[10] ) then
      return 2
    elseif ( frame == Frame_Buttons[3] or frame == Frame_Buttons[10] or frame == Frame_Buttons[18] or frame == Frame_SelectSkills[5] or frame == Frame_SelectBack[12] ) then
      return 3
    elseif ( frame == Frame_Buttons[4] or frame == Frame_Buttons[11] or frame == Frame_Buttons[19] or frame == Frame_SelectSkills[7] or frame == Frame_SelectBack[14] ) then
      return 4
    elseif ( frame == Frame_Buttons[5] or frame == Frame_Buttons[12] or frame == Frame_Buttons[20]                                  or frame == Frame_SelectBack[16]  ) then
      return 5
    elseif ( frame == Frame_Buttons[6] or frame == Frame_Buttons[13] or frame == Frame_Buttons[21]                                  or frame == Frame_SelectBack[18]  ) then
      return 6
    elseif ( frame == Frame_Buttons[7] or frame == Frame_Buttons[14] or frame == Frame_Buttons[22] ) then
      return 7
    elseif (                              frame == Frame_Buttons[15] or frame == Frame_Buttons[23] ) then
      return 8
    endif
   return 0
  endfunction
  private constant function F2It takes integer frame returns integer
  //아이템/스킬/메뉴인지 반환(1=FRAME_TYPE_ITEM/2=FRAME_TYPE_SKILL/3=FRAME_TYPE_MENU)
    if ( frame == Frame_Buttons[1] or frame == Frame_Buttons[2] or frame == Frame_Buttons[3] or frame == Frame_Buttons[4] or frame == Frame_Buttons[5] or frame == Frame_Buttons[6] or frame == Frame_Buttons[7] ) then
      return FRAME_TYPE_ITEM
    elseif ( frame == Frame_Buttons[8] or frame == Frame_Buttons[9] or frame == Frame_Buttons[10] or frame == Frame_Buttons[11] or frame == Frame_Buttons[12] or frame == Frame_Buttons[13] or frame == Frame_Buttons[14] or frame == Frame_Buttons[15] ) then
      return FRAME_TYPE_SKILL
    elseif ( frame == Frame_Buttons[16] or frame == Frame_Buttons[17] or frame == Frame_Buttons[18] or frame == Frame_Buttons[19] or frame == Frame_Buttons[20] or frame == Frame_Buttons[21] or frame == Frame_Buttons[22] or frame == Frame_Buttons[23] ) then
      return FRAME_TYPE_MENU
    elseif ( frame == Frame_SelectSkills[1] or frame == Frame_SelectSkills[3] or frame == Frame_SelectSkills[5] or frame == Frame_SelectSkills[7] ) then
      return FRAME_TYPE_PRESKILL
    elseif ( frame == Frame_SelectBack[8] or frame == Frame_SelectBack[10] or frame == Frame_SelectBack[12] or frame == Frame_SelectBack[14] or frame == Frame_SelectBack[16] or frame == Frame_SelectBack[18] ) then
      return FRAME_TYPE_CHARACTER
    endif
   return 0
  endfunction

  public constant function I2U takes integer i returns integer
    if ( i == 1 ) then
      return 'H000'
    elseif ( i == 2 ) then
      return 'H001'
    elseif ( i == 3 ) then
      return 'H002'
    elseif ( i == 4 ) then
      return 'H003'
    elseif ( i == 5 ) then
      return 'H005'
    elseif ( i == 6 ) then
      return 'H004'
    else
      return 0
    endif
  endfunction
  // 유닛 선택 해제 시 갱신 함수
  private function Deselected takes nothing returns nothing
    if GetLocalPlayer() == GetTriggerPlayer() then
      call DzFrameShow(Frame_Sub, false)
    endif
    set SelectedUnit[GetPlayerId(GetTriggerPlayer()) + 1] = null
  endfunction
  public function Data_Select takes integer i returns string
    if ( i == 1 ) then
      return "쿠로사키 이치고'Ichigo Kurosaki'주인공. 유령을 보는 고교생.'카라쿠라 마을의 사신대행.'4'2'2'3'2'|cffff8000근접 물리 |cffd5d500[힘]'참백도(참월)'SkillTree_ichi_00.blp'SkillTree_ichi_05.blp'SkillTree_ichi_06.blp'SkillTree_ichi_11.blp'특성 스킬'검압 - 스킬 추가데미지'블루트베네 - 피격데미지 감소'월아천충'참격의 순간에 자신의 영압을 방출해 참격을 거대화.'강화시 데미지&범위 증가'천쇄참월'호로의 힘으로 월아천충을 쏘아낸다.'강화시 대상 출혈'무월'잠재능력을 모두 해방시켜 참격을 발사합니다.'강화시 출혈효과 폭발 추가데미지"
    elseif ( i == 2 ) then
      return "쿠치키 루키아'Rukia Kuchiki'더블 주인공이자 여주인공.'학교 성적은 국어 빼고 최하위.'3'3'3'5'4'|cff0080c0근접 마법 |cffd5d500[기술]'귀도, 참백도(수백설)'SkillTree_rukia_00.blp'SkillTree_rukia_02.blp'SkillTree_rukia_03.blp'SkillTree_rukia_04.blp'특성 스킬'영하 18도 - 주변 적을 베고 빙결'변신류 - 적 공속 감소, 아군 공속 증가'시작의 춤, 월백'주변을 속박시키고 표식을 생성합니다.'표식을 생성하고, 다른 스킬로 추가효과 가능'다음의 춤, 백련'춤을 추고, 주변 방해효과 폭발시켜 데미지를 가함.'강화시 표식을 폭발시켜 추가데미지'세번째 춤, 백도'상대를 관통시켜 얼립니다.'일직선상으로 냉기를 뿜어내, 적에게 데미지를 가함.'강화시 오한에 걸린 적 관통"
    elseif ( i == 3 ) then
      return "이시다 우류'Uryu Ishida'이치고와 같은 학교, 전교 석차 1위.'호로를 멸하는 퀸시의 후예.'5'0'1'2'3'|cffff8000원거리 물리 |cffd5d500[속도]'영자병장(은령호작)'SkillTree_Uryu_01.blp'SkillTree_Uryu_02.blp'SkillTree_Uryu_06.blp'SkillTree_Uryu_13.blp'특성스킬'은통 - 저장된 은통으로 마나회복 혹은 스킬사용 함.'산령수투 - 공격시 영압 소모해 추가데미지'하일리히 프파일'퀸시의 영자병장, 빛의 화살로 데미지를 가함.'강화시 추가데미지'리히트레겐'넓은 범위에 화살을 쏘아서 광역 공격을 함.'강화시 광역 대상 추가데미지'슈프렝거'퀸시 크로스 진에 농축 영자를 폭발시켜 속박&데미지.'강화시 속박대신 스턴"
    elseif ( i == 4 ) then
      return "이노우에 오리히메'Orihime Inoue'히로인, 기계치이자 돌머리.'머리핀(순순육화)을 항상 착용하고 다님.'2'5'5'2'5'|cff0080c0원거리 마법 |cffd5d500[마음]'머리핀(순순육화)'SkillTree_Inooue_21.blp'SkillTree_Inooue_01.blp'SkillTree_Inooue_12.blp'SkillTree_Inooue_13.blp'특성스킬'사상의거절 - 주변 쿨다운 감소 10%'더블캐스팅 - 스킬이 콤보로 변경되어, 추가효과 적용.'츠바키(고천참순)'츠바키를 날려 최대체력에 비례한 데미지를 가함.'강화시 출혈 및 최대체력 추가데미지'쌍천귀순'슌오우(벚꽃)+아야메(붓꽃), 퀵슬롯 등록해 사용.'매 초마다 주변의 잃은 체력을 회복합니다.'삼천결순'히나기쿠+바이곤+리리, 퀵슬롯에 등록해 사용.'삼각형 방패로 외부 공격 거절, 의지에 따라 방어력 상승."
    elseif ( i == 5 ) then
      return "아바라이 렌지'Renji Abarai'호정 13대의 6번대 부대장.'루키아와 소꿉친구이며 이치고와 대립.'4'2'1'4'4'|cffff8000근접 물리 |cffd5d500[기술]'참백도(사미환)'SkillTree_Renji_01.blp'SkillTree_Renji_03.blp'SkillTree_Renji_05.blp'SkillTree_Renji_07.blp'특성스킬'슌센벤, 박치기 등 추가스킬'변신류 - 이동속도와 데미지 증가'사미환'전방을 향해 검을 휘두르고, 조각을 남깁니다.'강화시 출혈효과 및 범위 증가'비아절교'주변 조각을 쏘아붙여 공격합니다. 조각당 데미지 증가'강화시 마비(누적시 스턴) 추가'비골대포'영압덩어리를 발사해 상대를 밀어냅니다.'강화시 화상적용, 상위스킬 시아철포"
    elseif ( i == 6 ) then
      return "사도 야스토라'Yasutora Sado'별명 차드, 멕시코 혼혈, 전교 11등.'우수한 성적과 상냥한 마음씨를 가짐.'3'4'4'3'2'|cffff8000근접 물리 |cffd5d500[힘]'오른팔과 왼팔'SkillTree_Sado_00.blp'SkillTree_Sado_01.blp'SkillTree_Sado_03.blp'SkillTree_Sado_02.blp'특성 스킬'대쉬 - 브링거 라이트'변신류 - 적 방어 감소, 본인 방어 증가'엘디렉토'전방에 주먹으로 영압을 발사해 데미지를 가함.'강화시 범위 증가 및 쿨다운 감소'슬래머'지면을 강타해 지진으로 적들을 둔화시킴.'강화시 범위 증가 및 넉백 적용'방어'방어 자세를 취해, 일정시간 피해를 감소시킵니다.'강화시 자동시전"
    endif
    return ""
  endfunction
  private constant function U2I takes unit u returns integer
    if ( u == gg_unit_H000_0011 ) then
      return 1
    elseif ( u == gg_unit_H001_0010 ) then
      return 2
    elseif ( u == gg_unit_H002_0009 ) then
      return 3
    elseif ( u == gg_unit_H003_0008 ) then
      return 4
    elseif ( u == gg_unit_H005_0003 ) then
      return 5
    elseif ( u == gg_unit_H004_0007 ) then
      return 6
    else
      return 0
    endif
  endfunction
  private function SetStars takes integer startnum, integer val, string texture returns nothing
   local integer i = 0
    loop
      if ( val > i ) then
        call DzFrameSetTexture(Frame_SelectStars[startnum+i], texture, 0)
      else
        call DzFrameSetTexture(Frame_SelectStars[startnum+i], "Select_stars0.tga", 0)
      endif
      exitwhen i >= 4
      set i = i + 1
    endloop
  endfunction
  private function ViewInfo takes string s, boolean Continue returns nothing
    //이름 영어 설명x2
    call DzFrameSetText(Frame_SelectText[2], JNStringSplit(s,"'",0))
    call DzFrameSetText(Frame_SelectText[3], JNStringSplit(s,"'",1))
    call DzFrameSetText(Frame_SelectText[4], JNStringSplit(s,"'",2))
    call DzFrameSetText(Frame_SelectText[5], JNStringSplit(s,"'",3))
    //별표
    call SetStars(1, S2I(JNStringSplit(s,"'",4)), "Select_stars1.tga")
    call SetStars(6, S2I(JNStringSplit(s,"'",5)), "Select_stars1.tga")
    call SetStars(11, S2I(JNStringSplit(s,"'",6)), "Select_stars1.tga")
    call SetStars(16, S2I(JNStringSplit(s,"'",7)), "Select_stars1.tga")
    call SetStars(21, S2I(JNStringSplit(s,"'",8)), "Select_stars2.tga")
        
    //피해, 무기, 스킬아이콘
    if ( SubString(JNStringSplit(s,"'",9),0,10) == "|cffff8000" ) then
      call DzFrameSetTexture(Frame_SelectBack[3], "Select_BackRed.blp", 0)
      call DzFrameSetTexture(Frame_SelectBack[4], "Select_BackRedRed.blp", 0)
      if ( Continue ) then
        call DzFrameSetTexture(Frame_SelectBack[6], "Select_ContinueRed.blp", 0)
      else
        call DzFrameSetTexture(Frame_SelectBack[6], "Select_StartRed.blp", 0)
      endif
    else
      call DzFrameSetTexture(Frame_SelectBack[3], "Select_BackBlue.blp", 0)
      call DzFrameSetTexture(Frame_SelectBack[4], "Select_BackBlueBlue.blp", 0)
      if ( Continue ) then
        call DzFrameSetTexture(Frame_SelectBack[6], "Select_ContinueBlue.blp", 0)
      else
        call DzFrameSetTexture(Frame_SelectBack[6], "Select_StartBlue.blp", 0)
      endif
    endif
    call DzFrameSetText(Frame_SelectText[12], JNStringSplit(s,"'",9))
    call DzFrameSetText(Frame_SelectText[14], JNStringSplit(s,"'",10))

    call DzFrameSetTexture(Frame_SelectSkills[2], JNStringSplit(s,"'",11), 0)
    call DzFrameSetTexture(Frame_SelectSkills[4], JNStringSplit(s,"'",12), 0)
    call DzFrameSetTexture(Frame_SelectSkills[6], JNStringSplit(s,"'",13), 0)
    call DzFrameSetTexture(Frame_SelectSkills[8], JNStringSplit(s,"'",14), 0)
        
    call DzFrameShow(Frame_SelectBack[1], true)
    call DzFrameShow(Frame_SelectText[16], false)
  endfunction
  // 유닛 선택수 초기화 함수
  private function Selected_Inter takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local integer tid = GetHandleId(t)
    local integer pid = LoadInteger(hash, tid, StringHash("pid"))
    set SelectBol[pid] = false
    set SelectCount[pid] = 0
    call FlushChildHashtable(hash, tid)
    call DestroyTimer(t)
    set t = null
  endfunction
  // 유닛 선택 시 갱신 함수
  private function Selected takes nothing returns nothing
    local player p = GetTriggerPlayer()
    local integer pid = GetPlayerId(p) + 1
    local unit u = GetTriggerUnit()
    local timer t
    if ( PreLoad[pid] ) then /* 시작하기 전 선택창 */
      if ( U2I(u) > 0 ) then
        set NowSelect[pid] = U2I(u)
        if ( GetLocalPlayer() == p ) then
        
          call ViewInfo(Data_Select(U2I(u)), ( S2I(JNStringSplit(JNStringSplit(LoadStr(hash, pid, StringHash("Data")),"/",U2I(u)),"'",1)) > 0 ))
          call ClearSelection()
        endif
      endif
    else
      set SelectCount[pid] = SelectCount[pid] + 1
      if ( SelectCount[pid] > 1 ) then /* 한 번에 여러명 선택 시 메인 프레임 숨기기 */
        if ( GetLocalPlayer() == p ) then
          call DzFrameShow(Frame_Sub, false)
        endif
      elseif ( SelectedUnit[pid] != null and SelectedUnit[pid] != u ) then
        if ( GetLocalPlayer() == p ) then
          call DzFrameShow(Frame_Sub, false)
        endif
      else /* 표시, 일반유닛도 표시 */
        if GetLocalPlayer() == GetTriggerPlayer() then
          call DzFrameShow(Frame_Sub, true)
        endif
      endif
      if not SelectBol[pid] then
        set SelectBol[pid] = true
        set t = CreateTimer()
        call SaveInteger(hash, GetHandleId(t), StringHash("pid"), pid)
        call TimerStart(t, 0, false, function Selected_Inter)
      endif
      set SelectedUnit[pid] = u
    endif
   set u = null
   set t = null
  endfunction
  public function ButtonClick takes nothing returns nothing
    local integer f = DzGetTriggerUIEventFrame()
    //debug call BJDebugMsg("Clicked : " + I2S(F2In(f)) + "번째 " + FI2S(F2It(f)))
    if ( F2It(f) == FRAME_TYPE_CHARACTER ) then
      set NowSelect[GetPlayerId(DzGetTriggerUIEventPlayer())+1] = F2In(f)
    endif
    if ( GetLocalPlayer() == DzGetTriggerUIEventPlayer() ) then
      if ( F2It(f) == FRAME_TYPE_MENU ) then
        call PushKey_MenuClick(F2In(f))
      else
        call StopSound(gg_snd_MouseClick1, false, false)
        call StartSound(gg_snd_MouseClick1)
      endif
      
      if ( F2It(f) == FRAME_TYPE_CHARACTER ) then
        call ViewInfo(Data_Select(F2In(f)), ( S2I(JNStringSplit(JNStringSplit(LoadStr(hash, GetPlayerId(DzGetTriggerUIEventPlayer())+1, StringHash("Data")),"/",F2In(f)),"'",1)) > 0 ))
      endif
    endif
  endfunction
    
  private function ButtonJustUp takes nothing returns nothing
    local integer f = DzGetTriggerUIEventFrame()
    if ( GetLocalPlayer() == DzGetTriggerUIEventPlayer() ) then
      //call BJDebugMsg("Mouse Up: " + I2S(F2In(f)) + "번째 " + FI2S(F2It(f)) +"="+JNStringSplit(Data_Select(NowSelect[GetPlayerId(DzGetTriggerUIEventPlayer())+1]),"'",12+3*F2In(f)))
      set f = 12+3*F2In(f)
      call DzFrameSetText(Frame_SelectText[16], "|cffd5d500"+JNStringSplit(Data_Select(NowSelect[GetPlayerId(DzGetTriggerUIEventPlayer())+1]),"'",f))
      call DzFrameSetText(Frame_SelectText[17], JNStringSplit(Data_Select(NowSelect[GetPlayerId(DzGetTriggerUIEventPlayer())+1]),"'",f+1))
      call DzFrameSetText(Frame_SelectText[18], JNStringSplit(Data_Select(NowSelect[GetPlayerId(DzGetTriggerUIEventPlayer())+1]),"'",f+2))
      
      call DzFrameShow(Frame_SelectText[16], true)
    endif
  endfunction
  private function ButtonJustDown takes nothing returns nothing
    local integer f = DzGetTriggerUIEventFrame()
    if ( GetLocalPlayer() == DzGetTriggerUIEventPlayer() ) then
      call DzFrameShow(Frame_SelectText[16], false)
    endif
  endfunction
  function Msg takes player p, string msg returns nothing
    call DisplayTimedTextToPlayer(p,0,0,6.,msg)
  endfunction
  
  private function DataSync2 takes nothing returns nothing
    //To CreateUnit
    set GetServerPlayer = DzGetTriggerSyncPlayer()
    set NowSelect[GetPlayerId(DzGetTriggerSyncPlayer())+1] = S2I(DzGetTriggerSyncData())
    call TriggerExecute(gg_trg_Load_End)
  endfunction
  
  private function ButtonStart takes nothing returns nothing
    local integer f = GetPlayerId(DzGetTriggerUIEventPlayer())+1
    set PreLoad[f] = false
    if ( I2U(NowSelect[f]) == 0 ) then
      set PreLoad[f] = true
      call Msg(DzGetTriggerUIEventPlayer(), "올바른 캐릭터를 선택 후, 시작하기를 눌러주세요")
    else
      if ( GetLocalPlayer() == DzGetTriggerUIEventPlayer() ) then
        call DzSyncData("Select", I2S(NowSelect[f]))
        call DzFrameShow(Frame_SelectBack[0], false)
        call DzFrameShow(Frame_SelectBack[1], false)
        call DzFrameShow(Frame_Info[0], false)
        call ResetToGameCamera(0.)
        call SetCameraBoundsToRect(bj_mapInitialPlayableArea)
        call PanCameraTo(startXX, startYY)
        call EnablePreSelect(true, true)
        call DzFrameShow(DzFrameGetMinimap(), true)
      endif
    endif
  endfunction
  private function CameraBounds takes real x, real y returns nothing
    call SetCameraBounds(x, y, x, y, x, y, x, y)
  endfunction
  private function MakeSelect takes integer no, integer point, real x, real y, real xx, real yy, string texture returns integer
    set Frame_SelectBack[no] = DzCreateFrameByTagName("BACKDROP", "", Frame_SelectBack[1], "", no)
    call DzFrameSetAbsolutePoint(Frame_SelectBack[no], point, x, y)
    call DzFrameSetSize(Frame_SelectBack[no], xx, yy)
    call DzFrameSetTexture(Frame_SelectBack[no], texture, 0)
    return no + 1
  endfunction
  private function MakeStars takes integer no, integer parent, integer point, integer point2, real x, real y, real size, string texture returns integer
    set Frame_SelectStars[no] = DzCreateFrameByTagName("BACKDROP", "", parent, "", no)
    call DzFrameSetPoint(Frame_SelectStars[no], point, parent, point2, x, y)
    call DzFrameSetSize(Frame_SelectStars[no], size, size)
    call DzFrameSetTexture(Frame_SelectStars[no], texture, 0)
    return no + 1
  endfunction
  private function MakeSelectText takes integer no, integer parent, integer point, integer point2, real x, real y, real size, string text returns integer
    set Frame_SelectText[no] = DzCreateFrameByTagName("TEXT", "", parent, "", no)
    if ( size != 0. ) then
      call DzFrameSetFont(Frame_SelectText[no], "Fonts\\DFHeiMd.ttf", size, 0)
    endif
    call DzFrameSetPoint(Frame_SelectText[no], point, parent, point2, x, y)
    call DzFrameSetText(Frame_SelectText[no], text)
    return no+1
  endfunction
    

  private function CreateSelectIcon takes integer types, real x, real y, real w, real h, string IconTexture returns nothing
      set Frame_SelectBack[types]=DzCreateFrameByTagName("BACKDROP", "", Frame_SelectBack[0], "", 0)
      call DzFrameSetAbsolutePoint(Frame_SelectBack[types], JN_FRAMEPOINT_CENTER, x, y)
      call DzFrameSetSize(Frame_SelectBack[types], w, h)
      call DzFrameSetTexture(Frame_SelectBack[types], IconTexture, 0)
  endfunction
  private function CreateSelectButton takes integer types returns nothing
    set Frame_SelectBack[types]=DzCreateFrameByTagName("BUTTON", "", Frame_SelectBack[types-1], "ScoreScreenTabButtonTemplate", 0)
    call DzFrameSetAllPoints(Frame_SelectBack[types], Frame_SelectBack[types-1])
    call DzFrameSetScriptByCode(Frame_SelectBack[types], JN_FRAMEEVENT_MOUSE_UP, function ButtonClick, false)
  endfunction
  
  private function CreateSelectIcon2 takes integer types, integer parent, integer point, integer point2, real x, real y, real size, string IconTexture returns integer
    set Frame_SelectSkills[types]=DzCreateFrameByTagName("BUTTON", "", Frame_SelectBack[1], "ScoreScreenTabButtonTemplate", 0)
    call DzFrameSetScriptByCode(Frame_SelectSkills[types], JN_FRAMEEVENT_MOUSE_ENTER, function ButtonJustUp, false)
    call DzFrameSetScriptByCode(Frame_SelectSkills[types], JN_FRAMEEVENT_MOUSE_LEAVE, function ButtonJustDown, false)
    call DzFrameSetPoint(Frame_SelectSkills[types], point, parent, point2, x, y)
    call DzFrameSetSize(Frame_SelectSkills[types], size, size)
      
    set types = types + 1
    //배경
    set Frame_SelectSkills[types]=DzCreateFrameByTagName("BACKDROP", "", Frame_SelectSkills[types-1], "", 0)
    call DzFrameSetAllPoints(Frame_SelectSkills[types], Frame_SelectSkills[types-1])
    call DzFrameSetTexture(Frame_SelectSkills[types], IconTexture, 0)
    return types + 1
  endfunction
  private function CreateSelect takes nothing returns nothing
   local integer Text = 1
     
    call SetCameraField(CAMERA_FIELD_ROTATION, 90., 0.)
    call SetCameraField(CAMERA_FIELD_ANGLE_OF_ATTACK, 325., 0.)
    call SetCameraField(CAMERA_FIELD_TARGET_DISTANCE, 1024, 0.)
    call SetCameraField(CAMERA_FIELD_FIELD_OF_VIEW, 70., 0.)
    call SetCameraField(CAMERA_FIELD_FARZ, 5000., 0.)
    call CameraBounds(-9664., 5440.)
       
    //체력바
    call EnablePreSelect(false, false)
    set Frame_SelectBack[0] = DzCreateFrameByTagName("TEXT", "", DzGetGameUI(), "", 0)
    call DzFrameSetFont(Frame_SelectBack[0], "Fonts\\MoonEpi2.ttf", .030, 1)
    call DzFrameSetAbsolutePoint(Frame_SelectBack[0], JN_FRAMEPOINT_CENTER, .4, .55)
    if ( GetRandomReal(0.,99.) <= 33. ) then
      call DzFrameSetText(Frame_SelectBack[0], "|cffFF7CBFThe Only My Own RPG")
    elseif ( GetRandomReal(0.,66.) <= 33. ) then
      call DzFrameSetText(Frame_SelectBack[0], "|cff28FF0DThe Only My Own RPG")
    else
      call DzFrameSetText(Frame_SelectBack[0], "|cff0085FFThe Only My Own RPG")
    endif
    set Text = MakeSelectText(1, Frame_SelectBack[0], JN_FRAMEPOINT_TOPRIGHT, JN_FRAMEPOINT_BOTTOMRIGHT, 0., 0., 0., "나만의 알피지")
    call DzFrameSetFont(Frame_SelectText[1], "Fonts\\MoonEpi2.ttf", .0136, 0)
    
    set Frame_SelectBack[1] = DzCreateFrameByTagName("TEXT", "", DzGetGameUI(), "", 0)
     
    //call DzFrameSetTexture(Frame_SelectBack[0], "ui\\Title-R.blp", 0)
    call MakeSelect(2, JN_FRAMEPOINT_TOPLEFT, .05, .45, .18, .25, "Select_Back.blp")
    set Text = MakeSelectText(Text, Frame_SelectBack[2], JN_FRAMEPOINT_TOP, JN_FRAMEPOINT_TOP, 0., -.013, .015, "T"+I2S(Text)+"DarkElf Mage")
    set Text = MakeSelectText(Text, Frame_SelectBack[2], JN_FRAMEPOINT_TOPRIGHT, JN_FRAMEPOINT_TOPRIGHT, -.020, -.035, .010, "T"+I2S(Text)+"다크엘프 마법사")
    
    set Text = MakeSelectText(Text, Frame_SelectBack[2], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_TOPLEFT, .020, -.050, .008, "T"+I2S(Text)+"마법사는 강력한 마법 공격과 디버프를 사용해")
    set Text = MakeSelectText(Text, Frame_SelectText[Text-1], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., 0., .008, "T"+I2S(Text)+"적을 괴롭히고 다대다 전투에 강한 직업입니다.")
    
    set Text = MakeSelectText(Text, Frame_SelectBack[2], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_TOPLEFT, .020, -.080, .012, "공격")
    call MakeStars(1, Frame_SelectText[Text-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .040, 0., .020, "Select_stars1.tga")
    call MakeStars(2, Frame_SelectStars[1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars1.tga")
    call MakeStars(3, Frame_SelectStars[2], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars1.tga")
    call MakeStars(4, Frame_SelectStars[3], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars1.tga")
    call MakeStars(5, Frame_SelectStars[4], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars1.tga")
    set Text = MakeSelectText(Text, Frame_SelectText[Text-1], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -.02, .012, "방어")
    call MakeStars(6, Frame_SelectText[Text-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .040, 0., .020, "Select_stars1.tga")
    call MakeStars(7, Frame_SelectStars[6], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars1.tga")
    call MakeStars(8, Frame_SelectStars[7], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars1.tga")
    call MakeStars(9, Frame_SelectStars[8], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars1.tga")
    call MakeStars(10, Frame_SelectStars[9], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars0.tga")
    set Text = MakeSelectText(Text, Frame_SelectText[Text-1], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -.02, .012, "보조")
    call MakeStars(11, Frame_SelectText[Text-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .040, 0., .020, "Select_stars1.tga")
    call MakeStars(12, Frame_SelectStars[11], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars1.tga")
    call MakeStars(13, Frame_SelectStars[12], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars1.tga")
    call MakeStars(14, Frame_SelectStars[13], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars0.tga")
    call MakeStars(15, Frame_SelectStars[14], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars0.tga")
    set Text = MakeSelectText(Text, Frame_SelectText[Text-1], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -.02, .012, "방해")
    call MakeStars(16, Frame_SelectText[Text-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .040, 0., .020, "Select_stars1.tga")
    call MakeStars(17, Frame_SelectStars[16], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars1.tga")
    call MakeStars(18, Frame_SelectStars[17], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars0.tga")
    call MakeStars(19, Frame_SelectStars[18], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars0.tga")
    call MakeStars(20, Frame_SelectStars[19], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars0.tga")
    set Text = MakeSelectText(Text, Frame_SelectText[Text-1], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -.02, .012, "난이도")
    call MakeStars(21, Frame_SelectText[Text-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .040, 0., .020, "Select_stars2.tga")
    call MakeStars(22, Frame_SelectStars[21], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars0.tga")
    call MakeStars(23, Frame_SelectStars[22], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars0.tga")
    call MakeStars(24, Frame_SelectStars[23], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars0.tga")
    call MakeStars(25, Frame_SelectStars[24], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., .020, "Select_stars0.tga")
      
    call MakeSelect(3, JN_FRAMEPOINT_TOPLEFT, .6, .4, .20, .23, "Select_BackRed.blp")
    set Text = MakeSelectText(Text, Frame_SelectBack[3], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_TOPLEFT, .02, -.02, .010, "|cff8f8f8f피해 유형")
    set Text = MakeSelectText(Text, Frame_SelectText[Text-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .07, 0., .015, "T"+I2S(Text)+"|cff0080c0마법 데미지")
    set Text = MakeSelectText(Text, Frame_SelectBack[3], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_TOPLEFT, .02, -.04, .010, "|cff8f8f8f사용(전용)무기")
    set Text = MakeSelectText(Text, Frame_SelectText[Text-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .07, 0., .012, "T"+I2S(Text)+"[완드] [지팡이]")
      
    call MakeSelect(4, JN_FRAMEPOINT_TOPLEFT, .62, .34, .16, .12, "Select_BackRedRed.blp")
    set Text = MakeSelectText(Text, Frame_SelectBack[4], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_TOPLEFT, .01, -.01, .010, "|cff8f8f8f주요 스킬 보기")
    call CreateSelectIcon2(1, Frame_SelectBack[4], JN_FRAMEPOINT_TOP, JN_FRAMEPOINT_TOPLEFT, .024, -.03, .0275, "war3mapImported\\frame_kakao.blp")
    call CreateSelectIcon2(3, Frame_SelectBack[4], JN_FRAMEPOINT_TOP, JN_FRAMEPOINT_TOPLEFT, .061, -.03, .0275, "war3mapImported\\frame_kakao.blp")
    call CreateSelectIcon2(5, Frame_SelectBack[4], JN_FRAMEPOINT_TOP, JN_FRAMEPOINT_TOPLEFT, .099, -.03, .0275, "war3mapImported\\frame_kakao.blp")
    call CreateSelectIcon2(7, Frame_SelectBack[4], JN_FRAMEPOINT_TOP, JN_FRAMEPOINT_TOPLEFT, .136, -.03, .0275, "war3mapImported\\frame_kakao.blp")
      
    set Text = MakeSelectText(Text, Frame_SelectBack[4], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_TOPLEFT, .01, -.08, .012, "T"+I2S(Text)+"|cffd5d500분노의 소용돌이 |cffff8000Lv.1")
    
    set Text = MakeSelectText(Text, Frame_SelectText[Text-1], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -.005, .008, "T"+I2S(Text)+"창을 크게 휘둘러 주위의 적들에게 공격력의")
    set Text = MakeSelectText(Text, Frame_SelectText[Text-1], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., 0., .008, "T"+I2S(Text)+"|cffff800060%|r만큼 마법피해를 최대 |cffff80003|r회 입힙니다.")

    set Frame_SelectBack[5]=DzCreateFrameByTagName("BUTTON", "", Frame_SelectBack[1], "ScoreScreenTabButtonTemplate", 0)
    call DzFrameSetPoint(Frame_SelectBack[5], JN_FRAMEPOINT_TOP, Frame_SelectBack[4], JN_FRAMEPOINT_BOTTOM, 0., -.005)
    call DzFrameSetSize(Frame_SelectBack[5], .11, .03)
    call DzFrameSetScriptByCode(Frame_SelectBack[5], JN_FRAMEEVENT_MOUSE_UP, function ButtonStart, true)
    
    //시작하기
    set Frame_SelectBack[6]=DzCreateFrameByTagName("BACKDROP", "", Frame_SelectBack[5], "", 0)
    call DzFrameSetAllPoints(Frame_SelectBack[6], Frame_SelectBack[5])
    call DzFrameSetTexture(Frame_SelectBack[6], "Select_StartRed.blp", 0)
  endfunction
  public function I2T takes integer i returns string
    if ( i <= 0 ) then
      return ""
    elseif ( i < 100 ) then
      return I2S(i) + "분"
    elseif ( i < 600 ) then /* 10시간 */
      return R2SW(i/60.,1,2) + "시간"
    else/* if ( i < 6000 ) then /* 100시간 */ */
      return R2SW(i/60.,2,1) + "시간"
    /*elseif ( i < 14400 ) then /* 10일 */
      return I2S(i/1440)+"D"+I2S(ModuloInteger(i,1440)/60)+"H"
    else
      return R2SW(i/1440.,2,2) + "D"*/
    endif
  endfunction
  private function CreateSelectBottom takes nothing returns nothing
   local integer i = 1
    //아래쪽
    loop
      call CreateSelectIcon(5+i*2, i*.12, .1, .1, .04, "Select_SlotBack75.blp")
      call MakeSelectText(16+i*3, Frame_SelectBack[5+i*2], JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_TOPLEFT, .005, -.005, .010, JNStringSplit(JNStringSplit(Data_Select(i),"'",0)," ",1)+" Lv00")
      call MakeSelectText(17+i*3, Frame_SelectBack[5+i*2], JN_FRAMEPOINT_TOPRIGHT, JN_FRAMEPOINT_TOPRIGHT, -.005, -.005, .009, " ")
      call MakeSelectText(18+i*3, Frame_SelectBack[5+i*2], JN_FRAMEPOINT_BOTTOMRIGHT, JN_FRAMEPOINT_BOTTOMRIGHT, -.01, .008, .013, "이어하기")
      
      call CreateSelectButton(6+i*2)
      exitwhen i >= Save_MAX_CHARACTER
      set i = i + 1
    endloop
  endfunction
  private function CreateSelectBottom2 takes player p, string Input returns nothing
   local string s
   local integer i = 1
    //아래쪽
    loop
      set s = JNStringSplit(Input,"/",i)
      if ( S2I(JNStringSplit(JNStringSplit(s,"'",1),".",0)) > 0 ) then
        if ( GetLocalPlayer() == p ) then
          call DzFrameSetTexture(Frame_SelectBack[5+i*2], "Select_SlotBack75.blp", 0)
          call DzFrameSetFont(Frame_SelectText[16+i*3], "Fonts\\DFHeiMd.ttf", .010, 0)
          call DzFrameSetText(Frame_SelectText[16+i*3], JNStringSplit(JNStringSplit(Data_Select(i),"'",0)," ",1)+" Lv"+JNStringSplit(JNStringSplit(s,"'",1),".",0))
          call DzFrameSetFont(Frame_SelectText[17+i*3], "Fonts\\DFHeiMd.ttf", .009, 0)
          call DzFrameSetText(Frame_SelectText[17+i*3], I2T(S2I(JNStringSplit(JNStringSplit(s,"'",0),"_",1))))
          call DzFrameSetFont(Frame_SelectText[18+i*3], "Fonts\\DFHeiMd.ttf", .013, 0)
          call DzFrameSetText(Frame_SelectText[18+i*3], "이어하기")
        endif
      else
        if ( GetLocalPlayer() == p ) then
          call DzFrameSetTexture(Frame_SelectBack[5+i*2], "Select_SlotBack50.blp", 0)
          call DzFrameSetFont(Frame_SelectText[16+i*3], "Fonts\\DFHeiMd.ttf", .009, 0)
          call DzFrameSetText(Frame_SelectText[16+i*3], JNStringSplit(Data_Select(i),"'",0) + " (신규)")
          call DzFrameSetText(Frame_SelectText[17+i*3], "")
          call DzFrameSetFont(Frame_SelectText[18+i*3], "Fonts\\DFHeiMd.ttf", .008, 0)
          call DzFrameSetText(Frame_SelectText[18+i*3], "미리보기")
        endif
      endif
      
      exitwhen i >= Save_MAX_CHARACTER
      set i = i + 1
    endloop
  endfunction
  constant function IsEmpty takes string s returns boolean
    return ( s == "" ) or ( s == null )
  endfunction
  public function GetSaveData takes player p, string Input returns nothing
    if ( IsEmpty(Input) ) then
      set Input = DEFAULT_DATA
    endif
    call SaveStr(hash, GetPlayerId(p)+1, StringHash("Data"), Input)
    call CreateSelectBottom2(p, Input)
   /* 1_시간'레벨.경험치  / 2_시간'레벨.경험치 ... */
  endfunction
    
  private function Init takes nothing returns nothing
   local integer i = 0
   local trigger trg
    call CreateSelect()
    call CreateSelectBottom()
    
    call DzFrameShow(Frame_SelectBack[1], false) /* 전체 선택 프레임 without 최상단 나만의 알피지 txt */
    call DzFrameShow(Frame_SelectText[16], false) /* 스킬 설명부분 */
    
    set i = bj_MAX_PLAYERS-1
    set trg = CreateTrigger()
    loop
      call TriggerRegisterPlayerUnitEvent(trg, Player(i), EVENT_PLAYER_UNIT_DESELECTED, null)
      set PreLoad[i+1] = true
      exitwhen i <= 0
      set i = i - 1
    endloop
    call TriggerAddAction(trg, function Deselected)
  
    set i = bj_MAX_PLAYERS-1
    set trg = CreateTrigger()
    loop
      call TriggerRegisterPlayerUnitEvent(trg, Player(i), EVENT_PLAYER_UNIT_SELECTED, null)
      exitwhen i <= 0
      set i = i - 1
    endloop
    call TriggerAddAction(trg, function Selected)
    
    set trg = CreateTrigger()
    call DzTriggerRegisterSyncData(trg, "Select", false)
    call TriggerAddAction(trg, function DataSync2)
    
    set trg = null
  endfunction
endscope//===========================================================================
// Trigger: MenuQuickSlot
//===========================================================================
scope MenuQuickSlot initializer Init

public function AddReg takes integer P, integer MenuNo, integer Hotkey returns nothing
  local string s = ""
  local integer i = 0
  if ( PushKey_I2H(Hotkey) == "" ) then
    call DisplayTimedTextToPlayer(Player(P-1),0,0,4.,"등록할 수 없는 단축키입니다. -" +I2S(Hotkey) + "=" + PushKey_I2H(Hotkey))
  else
    set s = I2S(F2IN(MenuNo)) + "번째 " + FI2S(F2IT(MenuNo)) + " 단축키: "
    
    //기존 단축키 검사
    set i = LoadInteger(hash, P, MenuNo)
    if ( i != 0 ) then
      call SaveInteger(hash, P, MenuNo, 0)
      set s = s + PushKey_I2H(i) +"→"+ PushKey_I2H(Hotkey) + " 변경 (기존 " + PushKey_I2H(i) + "단축키 삭제"
      set i = LoadInteger(hash, P, Hotkey)
      if ( i != 0 ) then
        set s = s + ", 기존 " + PushKey_I2H(Hotkey) + "단축키 " + I2S(F2IN(i)) + "번째 " + FI2S(F2IT(i)) + " 삭제)"
        call SaveInteger(hash, P, Hotkey, 0)
      else
        set s = s + ")"
      endif
    //변경
    else
    //등록
      set s = s + PushKey_I2H(Hotkey) + " 등록"
      set i = LoadInteger(hash, P, Hotkey)
      if ( i != 0 ) then
        set s = s + " (기존 " + PushKey_I2H(Hotkey) + "단축키 " + I2S(F2IN(i)) + "번째 " + FI2S(F2IT(i)) + " 삭제)"
        call SaveInteger(hash, P, Hotkey, 0)
      endif
    endif
    call SaveInteger(hash, P, MenuNo, Hotkey)
    call SaveInteger(hash, P, Hotkey, MenuNo)
    if ( GetLocalPlayer() == Player(P-1) ) then
      call DzFrameSetText(LoadInteger(hash, LoadInteger(hash, 0, MenuNo), StringHash("FUI_HotKey")), PushKey_I2H(Hotkey))
    endif
    call DisplayTimedTextToPlayer(Player(P-1),0,0,7.,s)
  endif
  
  /*1번째 아이템 단축키: D→T 변경 (기존 D단축키 삭제)
  1번째 아이템 단축키: D→T 변경 (기존 D단축키 삭제, 기존 T단축키 3번째 메뉴삭제)
  1번째 아이템 단축키: T 등록 (기존 T단축키 3번째 메뉴삭제)
  1번째 아이템 단축키: T 등록*/
  
  
  /*hotkey에서 MenuNo 반환되어야함
  MenuNo에서 hotKey 반환되어야함 (기존거 삭제)*/
  
endfunction
    public constant function BaseHotKey takes integer MenuNo returns string
      if ( MenuNo == 1 ) then
        return "1"
      elseif ( MenuNo == 2 ) then
        return "2"
      elseif ( MenuNo == 3 ) then
        return "3"
      elseif ( MenuNo == 4 ) then
        return "4"
      elseif ( MenuNo == 5 ) then
        return "5"
      elseif ( MenuNo == 6 ) then
        return "6"
      elseif ( MenuNo == 7 ) then
        return "7"
      elseif ( MenuNo == 8 ) then
        return "Q"
      elseif ( MenuNo == 9 ) then
        return "W"
      elseif ( MenuNo == 10 ) then
        return "E"
      elseif ( MenuNo == 11 ) then
        return "R"
      elseif ( MenuNo == 12 ) then
        return "T"
      elseif ( MenuNo == 13 ) then
        return "D"
      elseif ( MenuNo == 14 ) then
        return "F"
      elseif ( MenuNo == 15 ) then
        return "G"
      elseif ( MenuNo == 16 ) then
        return "F8"
      elseif ( MenuNo == 17 ) then
        return "F7"
      elseif ( MenuNo == 18 ) then
        return "F6"
      elseif ( MenuNo == 19 ) then
        return "F5"
      elseif ( MenuNo == 20 ) then
        return "I"
      elseif ( MenuNo == 21 ) then
        return "S"
      elseif ( MenuNo == 22 ) then
        return "T"
      elseif ( MenuNo == 23 ) then
        return "V"
      else
        return ""
      endif
    endfunction
    private function MakeHotKey takes integer frame, integer MenuNo returns nothing
      local integer HotFrame = DzCreateFrame("CommandButtonHotKeyBackDrop", frame, MenuNo)
      local integer HotFrameTxt = DzCreateFrame("CommandButtonHotKeyText", HotFrame, MenuNo)
      call DzFrameSetTexture(HotFrame, "ui\\widgets\\console\\human\\commandbutton\\human-button-lvls-overlay.blp", 0)
      call DzFrameSetPoint(HotFrame, JN_FRAMEPOINT_TOPLEFT, frame, JN_FRAMEPOINT_TOPLEFT, -.001, .001)
      call DzFrameSetPoint(HotFrameTxt, JN_FRAMEPOINT_CENTER, HotFrame, JN_FRAMEPOINT_CENTER, 0., 0.)
      //call DzFrameSetText(HotFrameTxt, BaseHotKey(MenuNo))
      call SaveInteger(hash, 0, MenuNo, frame)
      call SaveInteger(hash, frame, StringHash("FUI_HotKey"), HotFrameTxt)
      //call AddReg(P, MenuNo, Hotkey)
      //call BJDebugMsg("no"+I2S(MenuNo)+"="+I2S(frame))
    endfunction
    private function CreateSkillFrameButton takes integer types, real x, real y, string IconTexture returns nothing
        set Frame_Buttons[types]=DzCreateFrameByTagName("BUTTON", "", Frame_Main, "ScoreScreenTabButtonTemplate", 0)
        
        //call SaveInteger(hash, types, )
        //xx번째 메뉴 - yy번째 (스킬/메뉴/아이템) / 클릭한 플레이어 id - 클릭/누를시 받아옴.
        
        //BUTTON(버튼) 타입의 버튼을 ScoreScreenTabButtonTemplate스타일(마우스를 대면 빛이나는 스타일)로 생성
        //부모 프레임은 Frame_Main로 설정
        call DzFrameSetAbsolutePoint(Frame_Buttons[types], JN_FRAMEPOINT_BOTTOMLEFT, x, y)
        //왼쪽 아래 정렬로 x, y축으로 이동
        call DzFrameSetSize(Frame_Buttons[types], 0.025, 0.025)
        
        set Frame_ButtonsBackDrop[types]=DzCreateFrameByTagName("BACKDROP", "", Frame_Buttons[types], "", 0)
        //버튼에 표시할 아이콘을 BACKDROP(배경 이미지) 타입으로 생성
        //부모 프레임은 아까 생성한 버튼으로 설정
        call DzFrameSetAllPoints(Frame_ButtonsBackDrop[types], Frame_Buttons[types])
        //아이콘의 위치, 크기를 아까 생성한 버튼과 같게 함.
        call DzFrameSetTexture(Frame_ButtonsBackDrop[types], IconTexture, 0)
        //아이콘 텍스처 설정
        
        call DzFrameSetScriptByCode(Frame_Buttons[types], JN_FRAMEEVENT_MOUSE_UP, function Select_ButtonClick, false)
        //버튼을 클릭하면 function ClickItemButton 함수 실행
        //false는 비동기화.
        call MakeHotKey(Frame_Buttons[types], types)
    endfunction
    private function CreateItemFrameButton takes integer types, real x, real y returns nothing
        set Frame_Buttons[types]=DzCreateFrameByTagName("BUTTON", "", Frame_Main, "ScoreScreenTabButtonTemplate", 0)
        call DzFrameSetAbsolutePoint(Frame_Buttons[types], JN_FRAMEPOINT_BOTTOMLEFT, x, y)
        call DzFrameSetSize(Frame_Buttons[types], 0.0235, 0.0235)
        
        set Frame_ButtonsBackDrop[types]=DzCreateFrameByTagName("BACKDROP", "", Frame_Buttons[types], "", 0)
        call DzFrameSetAllPoints(Frame_ButtonsBackDrop[types], Frame_Buttons[types])
        call DzFrameSetTexture(Frame_ButtonsBackDrop[types], "Inven_Empty.blp", 0)
        
        call DzFrameSetScriptByCode(Frame_Buttons[types], JN_FRAMEEVENT_MOUSE_UP, function Select_ButtonClick, false)
        call MakeHotKey(Frame_Buttons[types], types)
    endfunction
    //call AddReg(P, MenuNo, Hotkey)
    private function CreateMenuFrameButton takes integer types, real x, real y, real w, real h, string IconTexture returns nothing
        set Frame_Buttons[types]=DzCreateFrameByTagName("BUTTON", "", Frame_Main, "ScoreScreenTabButtonTemplate", 0)
        //set Frame_Buttons[types] = DzCreateFrameByTagName("GLUETEXTBUTTON", "", Frame_Main, "ScoreScreenTabButtonTemplate", 0)
        call DzFrameSetAbsolutePoint(Frame_Buttons[types], JN_FRAMEPOINT_BOTTOMLEFT, x, y)
        //call DzFrameSetText(Frame_Buttons[types], text)
        call DzFrameSetSize(Frame_Buttons[types], w, h)
//call BJDebugMsg(I2S(types) + " // " + IconTexture)
        call DzFrameSetScriptByCode(Frame_Buttons[types], JN_FRAMEEVENT_MOUSE_UP, function Select_ButtonClick, false)
        
        //배경
        set Frame_ButtonsBackDrop[types]=DzCreateFrameByTagName("BACKDROP", "", Frame_Buttons[types], "", 0)
        call DzFrameSetAllPoints(Frame_ButtonsBackDrop[types], Frame_Buttons[types])
        call DzFrameSetTexture(Frame_ButtonsBackDrop[types], IconTexture, 0)
        call MakeHotKey(Frame_Buttons[types], types)
    endfunction
  private function Init takes nothing returns nothing
   local integer i = 1
    /* 퀵슬롯 of 아이템 */
    loop
      call CreateItemFrameButton(i, .4215+(i*.025), .03)
      exitwhen i >= 7
      set i = i + 1
    endloop
    
    /* 퀵슬롯 of 스킬 */
    call CreateSkillFrameButton(8, .3, .03, "ReplaceableTextures\\CommandButtons\\BTNThoriumMelee.blp")
    call CreateSkillFrameButton(9, .33, .03, "ReplaceableTextures\\CommandButtons\\BTNHumanArmorUpOne.blp")
    call CreateSkillFrameButton(10, .36, .03, "ReplaceableTextures\\CommandButtons\\BTNHumanArmorUpTwo.blp")
    call CreateSkillFrameButton(11, .39, .03, "ReplaceableTextures\\CommandButtons\\BTNHumanArmorUpThree.blp")
    call CreateSkillFrameButton(12, .3, .06, "ReplaceableTextures\\CommandButtons\\BTNOrbOfFire.blp")
    call CreateSkillFrameButton(13, .33, .06, "ReplaceableTextures\\CommandButtons\\BTNOrbOfVenom.blp")
    call CreateSkillFrameButton(14, .36, .06, "ReplaceableTextures\\CommandButtons\\BTNOrbOfFrost.blp")
    call CreateSkillFrameButton(15, .39, .06, "ReplaceableTextures\\CommandButtons\\BTNDaggerOfEscape.blp")
    
    /* 퀵슬롯 of 메뉴 */
    call CreateMenuFrameButton(16, .78, 0.58, .02, .02, "war3mapImported\\frame_setting.blp")   /* 설정 */
    call CreateMenuFrameButton(17, .76, 0.58, .02, .02, "war3mapImported\\frame_discord.blp")   /* 디코 */
    call CreateMenuFrameButton(18, .74, 0.58, .02, .02, "war3mapImported\\frame_kakao.blp")     /* 카톡 */
    call CreateMenuFrameButton(19, .63, .01, .03, .03, "war3mapImported\\frame_combat.blp")     /* 자동사냥 */

    call CreateMenuFrameButton(20, .67, 0., .03, .03, "Inven_Empty.blp")                        /* 인벤 */
    call CreateMenuFrameButton(21, .7, 0., .03, .03, "war3mapImported\\frame_stats.blp")        /* 능력치 */
    call CreateMenuFrameButton(22, .73, 0., .03, .03, "war3mapImported\\frame_stats2.blp")      /* 스킬 */
    call CreateMenuFrameButton(23, .76, 0., .03, .03, "war3mapImported\\frame_skills.blp")      /* 스킬 */
  endfunction
endscope//===========================================================================
// Trigger: Option
//===========================================================================
scope Option initializer Init
  globals
    private integer array Frame_Setting
    public integer array Frame_SettingBackdrop
  endglobals

    private function Setting takes integer no, string text, real size, real x, real y returns integer
      set Frame_Setting[no] = DzCreateFrameByTagName("TEXT", "", Frame_SettingBackdrop[1], "", no)
      if ( size != 0. ) then
        call DzFrameSetFont(Frame_Setting[no], "Fonts\\DFHeiMd.ttf", size, 1)
      endif
      call DzFrameSetPoint(Frame_Setting[no], JN_FRAMEPOINT_LEFT, Frame_SettingBackdrop[0], JN_FRAMEPOINT_TOPLEFT, .02+x, -.015-.025 * y)
      call DzFrameSetText(Frame_Setting[no], text)
//call BJDebugMsg(I2S(no) + "=" + text)
      return no+1
    endfunction
    private function SettingButton takes integer i, integer frame2, string text, code funcHandle returns integer
      set Frame_Setting[i] = DzCreateFrameByTagName("GLUETEXTBUTTON", "", Frame_SettingBackdrop[1], "ScriptDialogButton", 0)
      call DzFrameSetSize(Frame_Setting[i], .085, 0.03)
      call DzFrameSetPoint(Frame_Setting[i], JN_FRAMEPOINT_LEFT, frame2, JN_FRAMEPOINT_LEFT, .1, 0.)
      call DzFrameSetText(Frame_Setting[i], text)
      call DzFrameSetScriptByCode(Frame_Setting[i], JN_FRAMEEVENT_MOUSE_UP, funcHandle, false)
      return i + 1
    endfunction
    private function SettingClick takes nothing returns nothing
      local integer f = DzGetTriggerUIEventFrame()
      local player p = DzGetTriggerUIEventPlayer()
      call BJDebugMsg("player: " + GetPlayerName(p) + " clicked Setting")
    endfunction
    private function SettingSave takes nothing returns nothing
      local integer f = DzGetTriggerUIEventFrame()
      local player p = DzGetTriggerUIEventPlayer()
      call BJDebugMsg("player: " + GetPlayerName(p) + " click save server")
    endfunction
    private function SettingClose takes nothing returns nothing
      if ( GetLocalPlayer() == DzGetTriggerUIEventPlayer() ) then
        call DzFrameShow(Frame_SettingBackdrop[0], false)
      endif
    endfunction
    private function SettingHotKey takes integer i, integer frame, real x, real y, string text, code funcHandle returns integer
      set Frame_Setting[i] = DzCreateFrameByTagName("GLUETEXTBUTTON", "", Frame_SettingBackdrop[1], "ScriptDialogButton", 0)
      call DzFrameSetSize(Frame_Setting[i], .02667, .02667)
      call DzFrameSetPoint(Frame_Setting[i], JN_FRAMEPOINT_LEFT, frame, JN_FRAMEPOINT_LEFT, .1 + x, y)
      call DzFrameSetText(Frame_Setting[i], text)
      return i+1
    endfunction
    private function SettingHotKeyClick takes nothing returns nothing
      local integer f = DzGetTriggerUIEventFrame()
      local player p = DzGetTriggerUIEventPlayer()
      call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,7.,"player: " + GetPlayerName(p) + " clicked HotKey Setting - " + I2S(f))
    endfunction

  private function CreateSetting takes nothing returns nothing
   local integer i = 0
    //미니정보창 배경
    set Frame_SettingBackdrop[i]=DzCreateFrameByTagName("BACKDROP", "", DzGetGameUI(), "QuestButtonBaseTemplate", 0)
    call DzFrameSetAbsolutePoint(Frame_SettingBackdrop[0], JN_FRAMEPOINT_CENTER, .4, .3)
    call DzFrameSetSize(Frame_SettingBackdrop[i], 0.22, 0.4)
    call DzFrameSetAlpha(Frame_SettingBackdrop[i], 128)
    set i = i + 1
    
    set Frame_SettingBackdrop[i]=DzCreateFrameByTagName("BACKDROP", "", Frame_SettingBackdrop[0], "QuestButtonBaseTemplate", 0)
    call DzFrameSetPoint(Frame_SettingBackdrop[i], JN_FRAMEPOINT_CENTER, Frame_SettingBackdrop[0], JN_FRAMEPOINT_TOP, 0., -0.015)
    call DzFrameSetSize(Frame_SettingBackdrop[i], 0.05, 0.04)
    call DzFrameSetAlpha(Frame_SettingBackdrop[i], 196)
    set i = i + 1
    
    set Frame_Setting[0]=DzCreateFrameByTagName("TEXT", "", Frame_SettingBackdrop[1], "", 0)
    call DzFrameSetPoint(Frame_Setting[0], JN_FRAMEPOINT_CENTER, Frame_SettingBackdrop[1] , JN_FRAMEPOINT_CENTER, 0., 0.)
    call DzFrameSetText(Frame_Setting[0], "|cfffed312설정")
    call DzFrameSetFont(Frame_Setting[0], "Fonts\\DFHeiMd.ttf", .020, 1)
    
    set i = Setting(1 , "미니 정보창", .016, 0., 1.)
    set i = Setting(i, "이펙트(개인)", .016, 0., 2.)
    set i = Setting(i, "이펙트(방장)", .016, 0., 3.)
    set i = Setting(i, "시야 설정", .016, 0., 4.)
    set i = Setting(i, "시야 고정", .016, 0., 5.)
    set i = Setting(i, "단축키 표시", .016, 0., 6.)
    
    set i = Setting(i, "|cfffed312단축키 설정", 0.015, -.01, 7.)
    set i = Setting(i, "스킬1~8", .024, 0., 8.)
    set i = Setting(i, "핫슬롯1~7", .024, 0., 9.75)
    set i = Setting(i, "카톡/디코/설정", 0., 0., 11.25)
    set i = Setting(i, "자동공격/인벤토리", 0., 0., 12.25)
    set i = Setting(i, "상태창/스킬/임시", 0., 0., 13.25)
    
    set Frame_Setting[i] = DzCreateFrameByTagName("GLUETEXTBUTTON", "", Frame_SettingBackdrop[1], "ScriptDialogButton", 0)
    call DzFrameSetPoint(Frame_Setting[i], JN_FRAMEPOINT_LEFT, Frame_SettingBackdrop[0], JN_FRAMEPOINT_BOTTOMLEFT, 0.01, .02)
    call DzFrameSetSize(Frame_Setting[i], .14, 0.03)
    call DzFrameSetText(Frame_Setting[i], "적용&서버저장(0/2)")
    call DzFrameSetScriptByCode(Frame_Setting[i], JN_FRAMEEVENT_MOUSE_UP, function SettingSave, false)
    set i = i + 1
  
    set Frame_Setting[i] = DzCreateFrameByTagName("GLUETEXTBUTTON", "", Frame_SettingBackdrop[1], "ScriptDialogButton", 0)
    call DzFrameSetPoint(Frame_Setting[i], JN_FRAMEPOINT_RIGHT, Frame_SettingBackdrop[0], JN_FRAMEPOINT_BOTTOMRIGHT, -0.01, .02)
    call DzFrameSetSize(Frame_Setting[i], .05, 0.03)
    call DzFrameSetText(Frame_Setting[i], "닫기")
    call DzFrameSetScriptByCode(Frame_Setting[i], JN_FRAMEEVENT_MOUSE_UP, function SettingClose, false)
    set i = i + 1
    
    set i = SettingButton(i, Frame_Setting[1], "|cfffed312ON |cffffffff/ |c004f4f4fOFF", function SettingClick)
    set i = SettingButton(i, Frame_Setting[2], "|cfffed312기본 |cffffffff/ |c004f4f4f최소화", function SettingClick)
    set i = SettingButton(i, Frame_Setting[3], "|c004f4f4fON |cffffffff/ |cfffed312OFF", function SettingClick)
    set i = SettingButton(i, Frame_Setting[4], "|cfffed312150", function SettingClick)
    set i = SettingButton(i, Frame_Setting[5], "|c004f4f4fON |cffffffff/ |cfffed312OFF", function SettingClick)
    set i = SettingButton(i, Frame_Setting[6], "|cfffed312ON |cffffffff/ |c004f4f4fOFF", function SettingClick)
    
    set i = SettingHotKey(i, Frame_Setting[8], 0., 0.01, MenuQuickSlot_BaseHotKey(8), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[8], 0.02, 0.01, MenuQuickSlot_BaseHotKey(9), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[8], 0.04, 0.01, MenuQuickSlot_BaseHotKey(10), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[8], 0.06, 0.01, MenuQuickSlot_BaseHotKey(11), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[8], 0., -0.01, MenuQuickSlot_BaseHotKey(12), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[8], 0.02, -0.01, MenuQuickSlot_BaseHotKey(13), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[8], 0.04, -0.01, MenuQuickSlot_BaseHotKey(14), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[8], 0.06, -0.01, MenuQuickSlot_BaseHotKey(15), function SettingHotKeyClick)

    set i = SettingHotKey(i, Frame_Setting[9], 0., 0.01, MenuQuickSlot_BaseHotKey(1), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[9], 0.02, 0.01, MenuQuickSlot_BaseHotKey(2), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[9], 0.04, 0.01, MenuQuickSlot_BaseHotKey(3), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[9], 0.06, 0.01, MenuQuickSlot_BaseHotKey(4), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[9], 0.01, -0.01, MenuQuickSlot_BaseHotKey(5), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[9], 0.03, -0.01, MenuQuickSlot_BaseHotKey(6), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[9], 0.05, -0.01, MenuQuickSlot_BaseHotKey(7), function SettingHotKeyClick)
    
    set i = SettingHotKey(i, Frame_Setting[10], 0., 0., MenuQuickSlot_BaseHotKey(18), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[10], .03, 0., MenuQuickSlot_BaseHotKey(17), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[10], .06, 0., MenuQuickSlot_BaseHotKey(16), function SettingHotKeyClick)
    
    set i = SettingHotKey(i, Frame_Setting[11], 0.01, 0., MenuQuickSlot_BaseHotKey(19), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[11], 0.04, 0., MenuQuickSlot_BaseHotKey(20), function SettingHotKeyClick)
    
    set i = SettingHotKey(i, Frame_Setting[12], 0., 0., MenuQuickSlot_BaseHotKey(21), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[12], .03, 0., MenuQuickSlot_BaseHotKey(22), function SettingHotKeyClick)
    set i = SettingHotKey(i, Frame_Setting[12], .06, 0., MenuQuickSlot_BaseHotKey(23), function SettingHotKeyClick)
    
    call DzFrameShow(Frame_SettingBackdrop[0], false)
  endfunction
  private function Init takes nothing returns nothing
    call CreateSetting()
  endfunction
endscope//===========================================================================
// Trigger: Inventory Equip
//
// I_Change"
//     call DzSyncData("MouseVar", I2S(LoadInteger(hash, DzGetTriggerUIEventFrame(), StringHash("FrameID"))))
//   endfunction
//   public function MouseOut takes nothing returns nothing
//     call DzSyncData("MouseVar", "")
//===========================================================================
scope Equip initializer Init
  globals
    private constant real EQUIPSPACEGAP = 0.040  /* 인벤토리 한칸 간격(갭 포함) */
    private constant real EQUIPEDGEGAP =  0.003  /* 인벤토리 칸과 칸 사이 간격 */
    
    private integer array Equip
    public integer array EquipBackdrop
    
    constant integer JN_FRAMEEVENT_MOUSE_DOUBLECLICK = 12
    private boolean array AllowRightClick
    private integer array OnButtonNumber
    
    /* Inventory */
    public constant real EDGEGAP =  0.0015 /* 인벤토리 칸과 칸 사이 간격 */
    public constant real SPACEGAP = 0.025  /* 인벤토리 한칸 간격(갭 포함) */
    public constant real EDGEGAP2 = 0.008  /* 뼈대와 인벤토리 사이 간격 */
    
    constant integer ITEM_TOOLTIP_MAXIMUM = 25
    constant integer ITEM_TOOLTIP_HIDE = 8
    
    private integer array Frame_InvenInfo
    private integer array Frame_EquipInfo
    private integer array Frame_Equip2Info
    private string array InvenInfo
    
    integer array Frame_InvenButtons
    integer array Frame_InvenButtonsBackDrop
    
    private integer array ClickNow
    
    private integer ClickView = 0
    
    private constant real GRADE_BONUS = 1.08
    
    private string array STATS_ALL
    
    private integer FrameMouseXOffset
    private integer FrameMouseYOffset
  endglobals
  private constant function CS2II takes integer i returns integer
    if ( i == 6 ) then
      return 8
    elseif ( i == 13 ) then
      return 14
    else
      return 0
    endif
  endfunction
  public constant function CS2I takes string s returns integer
    if ( s == "무기(검)" ) then
      return 1
    elseif ( s == "투구" or s == "써클릿" ) then
      return 2
    elseif ( s == "판금갑옷" or s == "로브" ) then
      return 3
    elseif ( s == "건틀릿" or s == "글러브" ) then
      return 4
    elseif ( s == "브로치" ) then
      return 5
    elseif ( s == "귀걸이" ) then
      return 6
    elseif ( s == "보조장갑" ) then
      return 7
    elseif ( s == "보조갑옷" ) then
      return 9
    elseif ( s == "목걸이" ) then
      return 10
    elseif ( s == "벨트" ) then
      return 11
    elseif ( s == "방패" or s == "단검" or s == "수리검" ) then
      return 12
    elseif ( s == "반지" ) then
      return 13
    elseif ( s == "망토" ) then
      return 15
    elseif ( s == "신발" ) then
      return 16
    else
      return 0
    endif
  endfunction
  public constant function I2CS takes integer i returns string
    if ( i == 1 ) then
      return "무기"
    elseif ( i == 2 ) then
      return "머리"
    elseif ( i == 3 ) then
      return "몸통"
    elseif ( i == 4 ) then
      return "장갑"
    elseif ( i == 5 ) then
      return "어깨장식"
    elseif ( i == 6 ) or ( i == 8 ) then
      return "귀걸이"
    elseif ( i == 7 ) then
      return "손목"
    elseif ( i == 9 ) then
      return "각반"
    elseif ( i == 10 ) then
      return "목걸이"
    elseif ( i == 11 ) then
      return "벨트"
    elseif ( i == 12 ) then
      return "보조무기"
    elseif ( i == 13 ) or ( i == 14 ) then
      return "반지"
    elseif ( i == 15 ) then
      return "망토"
    elseif ( i == 16 ) then
      return "신발"
    else
      return ""
    endif
  endfunction
  public constant function I2BE takes integer i returns string
  /* 장비번호→장비아이콘 변환 */
    if ( i == 1 ) then
      return "Equip_BaseICon_01.blp"
    elseif ( i == 2 ) then
      return "Equip_BaseICon_02.blp"
    elseif ( i == 3 ) then
      return "Equip_BaseICon_03.blp"
    elseif ( i == 4 ) then
      return "Equip_BaseICon_04.blp"
    elseif ( i == 5 ) then
      return "Equip_BaseICon_05.blp"
    elseif ( i == 6 ) or ( i == 8 ) then /* 귀걸이 */
      return "Equip_BaseICon_06.blp"
    elseif ( i == 7 ) then
      return "Equip_BaseICon_07.blp"
    elseif ( i == 9 ) then
      return "Equip_BaseICon_09.blp"
    elseif ( i == 10 ) then
      return "Equip_BaseICon_10.blp"
    elseif ( i == 11 ) then
      return "Equip_BaseICon_11.blp"
    elseif ( i == 12 ) then
      return "Equip_BaseICon_12.blp"
    elseif ( i == 13 ) or ( i == 14 ) then /* 반지 */
      return "Equip_BaseICon_13.blp"
    elseif ( i == 15 ) then
      return "Equip_BaseICon_15.blp"
    elseif ( i == 16 ) then
      return "Equip_BaseICon_16.blp"
    else
      return ""
    endif
  endfunction
  private function DoubleClick takes nothing returns nothing
    if ( AllowRightClick[GetPlayerId(DzGetTriggerKeyPlayer())+1] ) then
      call DzSyncData("I_Equip", I2S(OnButtonNumber[GetPlayerId(DzGetTriggerKeyPlayer())+1]))
      set AllowRightClick[GetPlayerId(DzGetTriggerKeyPlayer())+1] = false
    endif
  endfunction
  private function RightClick takes nothing returns nothing
    if ( AllowRightClick[GetPlayerId(DzGetTriggerKeyPlayer())+1] ) then
      call DzSyncData("I_Equip", I2S(OnButtonNumber[GetPlayerId(DzGetTriggerKeyPlayer())+1]))
      set AllowRightClick[GetPlayerId(DzGetTriggerKeyPlayer())+1] = false
    endif
  endfunction
  private function MouseVariable takes nothing returns nothing
    local string s = DzGetTriggerSyncData()
    local integer P = GetPlayerId(DzGetTriggerSyncPlayer())+1
    if ( s == "" ) then
      set AllowRightClick[P] = false
    else
      set AllowRightClick[P] = true
      set OnButtonNumber[P] = S2I(DzGetTriggerSyncData())
    endif
    set s = null
  endfunction
  
  private constant function S2Oadd takes string s returns string
    if ( s == "cp" ) then
      return "%"
    elseif ( s == "cx" ) then
      return "x"
    elseif ( s == "m1" ) then
      return "%"
    elseif ( s == "bs" ) then
      return "%"
    elseif ( s == "as" ) then
      return "%"
    elseif ( s == "p1" ) then
      return "%"
    elseif ( s == "p2" ) then
      return "%"
    elseif ( s == "p3" ) then
      return "%"
    elseif ( s == "sd" ) then
      return "%"
    elseif ( s == "md" ) then
      return "%"
    elseif ( s == "c1" ) then
      return "%"
    elseif ( s == "c2" ) then
      return "%"
    else
      return ""
    endif
  endfunction
  private constant function S2O takes string s returns string
    if ( s == "s1" ) then
      return "파워"
    elseif ( s == "s2" ) then
      return "집중"
    elseif ( s == "s3" ) then
      return "활력"
    elseif ( s == "d1" ) then
      return "공격력"
    elseif ( s == "d2" ) then
      return "추가공격력"
    elseif ( s == "a1" ) then
      return "물방"
    elseif ( s == "a2" ) then
      return "마방"
    elseif ( s == "l1" ) then
      return "물리피해감소"
    elseif ( s == "l2" ) then
      return "마법피해감소"
    elseif ( s == "ed" ) then
      return "강인함"
    elseif ( s == "cp" ) then
      return "치명타 확률"
    elseif ( s == "cx" ) then
      return "치명 배율"
    elseif ( s == "m1" ) then
      return "회피율"
    elseif ( s == "m2" ) then
      return "마법무시"
    elseif ( s == "m3" ) then
      return "상태이상방어"
    elseif ( s == "bs" ) then
      return "피흡"
    elseif ( s == "as" ) then
      return "공격속도"
    elseif ( s == "ms" ) then
      return "이동속도"
    elseif ( s == "g1" ) then
      return "체력 회복"
    elseif ( s == "g2" ) then
      return "마나 회복"
    elseif ( s == "p1" ) then
      return "골드 보너스"
    elseif ( s == "p2" ) then
      return "드랍 보너스"
    elseif ( s == "p3" ) then
      return "경험 보너스"
    elseif ( s == "sd" ) then
      return "스킬 데미지"
    elseif ( s == "sl" ) then
      return "스킬 레벨"
    elseif ( s == "md" ) then
      return "마법 데미지"
    elseif ( s == "c1" ) then
      return "선딜레이 감소"
    elseif ( s == "c2" ) then
      return "쿨감소"
     elseif ( s == "tt" ) then
      return "획득정보"
    elseif ( s == "o1" ) then
      return "|cffb5e61d추가옵션"
    elseif ( s == "o2" ) then
      return "|cffb5e61d추가옵션2"
    elseif ( s == "o3" ) then
      return "|cffb5e61d추가옵션3"
    elseif ( s == "r1" ) then
      return "|cffefe4b0랜덤옵션"
    elseif ( s == "r2" ) then
      return "|cffefe4b0랜덤옵션2"
    elseif ( s == "r3" ) then
      return "|cffefe4b0랜덤옵션3"
    elseif ( s == "k0" ) then
      return "소켓 수"
    elseif ( s == "k1" ) then
      return "|cff99d9ea소켓옵션"
    elseif ( s == "k2" ) then
      return "|cff99d9ea소켓옵션2"
    elseif ( s == "k3" ) then
      return "|cff99d9ea소켓옵션3"
    else
      return ""
    endif
  endfunction
  private constant function SkipStr takes string s returns integer
    if ( s == "tp" ) then       /* 설명 */
      return 1
    elseif ( s == "cs" ) then   /* 종류 */
      return 2
    elseif ( s == "lv" ) then   /* 렙제 */
      return 3
    elseif ( s == "ra" ) then   /* 희귀등급 */
      return 4
    elseif ( s == "tt" ) then   /* 획득정보 */
      return 5
    elseif ( s == "qo" ) then   /* 품질등급 */
      return 6
    elseif ( s == "ec" ) then   /* 강화수치 */
      return 7
    elseif ( s == "k0" ) then   /* 소켓 숫자 */
      return ITEM_TOOLTIP_HIDE    /* 마지막 */
    elseif ( s == "o1" or s == "o2" or s == "o3" or s == "r1" or s == "r2" or s == "r3" or s == "k1" or s == "k2" or s == "k3" ) then
      return -1 /* 한번 더 옵션 가져옴 */
    else
      return 0
    endif
  endfunction
  
  private function AddReal takes integer P, string s, real var, boolean msg returns nothing
    call SaveReal(hash, P, StringHash("STAT_"+s), LoadReal(hash, P, StringHash("STAT_"+s)) + var)
    if ( JNStringContains(STATS_ALL[P], s) ) then
      set STATS_ALL[0] = JNStringSplit(JNStringSplit(STATS_ALL[P],s+"_",1),"'",0)
      if ( S2R(STATS_ALL[0])+var == 0. ) then
        set STATS_ALL[P] = JNStringReplace(STATS_ALL[P], s+"_"+STATS_ALL[0]+"'","")
      else
        set STATS_ALL[P] = s+"_"+R2S(S2R(STATS_ALL[0])+var)+"'" + JNStringReplace(STATS_ALL[P], s+"_"+STATS_ALL[0]+"'","")
      endif
      
    else
      set STATS_ALL[P] = STATS_ALL[P] + s + "_" + R2S(var) + "'"
    endif
    return /* 메시지 필요없는듯 */
    if ( msg ) then
      if ( var > 0. ) then
        call DisplayTimedTextToPlayer(Player(P-1), 0, 0, 6., S2O(s) + " +" + R2SW(var,1,2) + S2Oadd(s) + " (총 " + R2SW(LoadReal(hash, P, StringHash("STAT_"+s)),1,2) +S2Oadd(s) + ")")
      else
        call DisplayTimedTextToPlayer(Player(P-1), 0, 0, 6., S2O(s) + " " + R2SW(var,1,2) + S2Oadd(s) + " (총 " + R2SW(LoadReal(hash, P, StringHash("STAT_"+s)),1,2) +S2Oadd(s) + ")")
      endif
    endif
  endfunction
  private function AddInteger takes integer P, string s, integer var, boolean msg returns nothing
    call SaveInteger(hash, P, StringHash("STAT_"+s), LoadInteger(hash, P, StringHash("STAT_"+s)) + var)
    if ( JNStringContains(STATS_ALL[P], s) ) then
      set STATS_ALL[0] = JNStringSplit(JNStringSplit(STATS_ALL[P],s+"_",1),"'",0)
      if ( S2I(STATS_ALL[0])+var == 0 ) then
        set STATS_ALL[P] =  JNStringReplace(STATS_ALL[P], s+"_"+STATS_ALL[0]+"'","")
      else
        set STATS_ALL[P] = s+"_"+I2S(S2I(STATS_ALL[0])+var)+"'" + JNStringReplace(STATS_ALL[P], s+"_"+STATS_ALL[0]+"'","")
      endif
    else
      set STATS_ALL[P] = STATS_ALL[P] + s + "_" + I2S(var) + "'"
    endif
    return /* 메시지 필요없는듯 */
    if ( msg ) then
      if ( var > 0 ) then
        call DisplayTimedTextToPlayer(Player(P-1), 0, 0, 6., S2O(s) + " +" + I2S(var) + S2Oadd(s) + " (총 " + I2S(LoadInteger(hash, P, StringHash("STAT_"+s))) +S2Oadd(s) + ")")
      else
        call DisplayTimedTextToPlayer(Player(P-1), 0, 0, 6., S2O(s) + " " + I2S(var) + S2Oadd(s) + " (총 " + I2S(LoadInteger(hash, P, StringHash("STAT_"+s))) +S2Oadd(s) + ")")
      endif
    endif
  endfunction
  private function AddStat takes integer P, string s, string var, integer x, boolean Isreal, boolean msg returns nothing
    if ( Isreal ) then
      if ( x > 0 ) and ( S2R(var)*Pow(GRADE_BONUS,x) > .01 ) then
        call AddReal(P, s, S2R(var)*Pow(GRADE_BONUS,x), msg)
      else
        call AddReal(P, s, S2R(var), msg)
      endif
    else
      call AddInteger(P, s, R2I(S2R(var)*Pow(GRADE_BONUS,x)), msg)
    endif
  endfunction
  private function MinusStat takes integer P, string s, string var, integer x, boolean Isreal, boolean msg returns nothing
    if ( Isreal ) then
      if ( x > 0 ) and ( S2R(var)*Pow(GRADE_BONUS,x) > .01 ) then
        call AddReal(P, s, -(S2R(var)*Pow(GRADE_BONUS,x)), msg)
      else
        call AddReal(P, s, -S2R(var), msg)
      endif
    else
      call AddInteger(P, s, -R2I(S2R(var)*Pow(GRADE_BONUS,x)), msg)
    endif
  endfunction
  private function ReflectItemStats takes integer P returns nothing
    local string ss = ""
    local string return_s = ""
    local integer loopA = 0
    if ( STATS_ALL[P] == "" or STATS_ALL[P] == null ) then
      if ( GetLocalPlayer() == Player(P-1) ) then
        call DzFrameSetText(Equip[18], "")
      endif
    else
      loop
        set ss = JNStringSplit(STATS_ALL[P], "'", loopA)
        exitwhen ss == "" or ss == null
        if ( JNStringContains(ss, "-") ) then
          set return_s = return_s + "\n" + S2O(SubString(ss,0,2)) + " " + SubString(ss,3,StringLength(ss)) + S2Oadd(SubString(ss,0,2))
        else
          set return_s = return_s + "\n" + S2O(SubString(ss,0,2)) + " +" + SubString(ss,3,StringLength(ss)) + S2Oadd(SubString(ss,0,2))
        endif
        set loopA = loopA + 1
      endloop
      if ( GetLocalPlayer() == Player(P-1) ) then
        call DzFrameSetText(Equip[18], SubString(return_s,1,StringLength(return_s)))
      endif
    endif
  endfunction
  
  public function Process takes string s, integer P returns nothing
  /* P0; view용, +P: Plus, -P: Minus */
    local integer loopA = 0
    local integer length = 0
    local boolean first = true
    if ( s == "'" ) then
      return
    endif
    if ( P == 0 ) then /* 능력치 표시 */
      set InvenInfo[7] = ""
      loop
        set InvenInfo[0] = JNStringSplit(s,"'",loopA)
        exitwhen ( InvenInfo[0] == "" ) or ( InvenInfo[0] == null )
        if ( SkipStr(SubString(InvenInfo[0],0,2)) > 0 ) then
          //call BJDebugMsg(InvenInfo[0] + " = 1_InvenInfo[" + I2S(SkipStr(SubString(InvenInfo[0],0,2))) +"] = " + SubString(InvenInfo[0],3,StringLength(InvenInfo[0])))
          set InvenInfo[SkipStr(SubString(InvenInfo[0],0,2))] = SubString(InvenInfo[0],3,StringLength(InvenInfo[0]))
        elseif ( SkipStr(SubString(InvenInfo[0],0,2)) == -1 ) then
          if ( first ) then
            set first = false
            set length = length + 1
            set InvenInfo[ITEM_TOOLTIP_HIDE+length] = " "
          endif
          set length = length + 1
          set InvenInfo[ITEM_TOOLTIP_HIDE+length] = S2O(SubString(InvenInfo[0],0,2)) + " - " + S2O(SubString(InvenInfo[0],3,5)) + " +" + SubString(InvenInfo[0],6,StringLength(InvenInfo[0]))
        else
          set length = length + 1
          set InvenInfo[ITEM_TOOLTIP_HIDE+length] = S2O(SubString(InvenInfo[0],0,2)) + " +" + SubString(InvenInfo[0],3,StringLength(InvenInfo[0]))
        endif
      
        set loopA = loopA + 1
      endloop
      
      set InvenInfo[0] = R2S(0.005+(0.01*JNStringCount(InvenInfo[1],"\n")) + (ITEM_TOOLTIP_HIDE+length)*.012) /* 팝업창 높이 설정 */
      loop
        set length = length + 1
        exitwhen length >= ITEM_TOOLTIP_MAXIMUM
        set InvenInfo[ITEM_TOOLTIP_HIDE+length] = ""
      endloop
    elseif ( P > 0 ) then /* 능력치 증가 */
      if ( JNStringContains(s, "ec_") ) then /* 강화수치 */
        set InvenInfo[1] = JNStringSplit(JNStringSplit(s,"ec_",1),"'",0)
        if ( S2I(InvenInfo[1]) == 0 ) then
          set InvenInfo[1] = ""
        endif
      else
        set InvenInfo[1] = ""
      endif
      loop
        set InvenInfo[0] = JNStringSplit(s,"'",loopA)
        exitwhen ( InvenInfo[0] == "" ) or ( InvenInfo[0] == null )
        if ( SkipStr(SubString(InvenInfo[0],0,2)) <= 0 ) then
          if ( SkipStr(SubString(InvenInfo[0],0,2)) == -1 ) then /* 랜덤 및 추가 및 소켓 옵션 */
            call AddStat(P, SubString(InvenInfo[0],3,5), SubString(InvenInfo[0],6,StringLength(InvenInfo[0])), S2I(InvenInfo[1]), JNStringContains(InvenInfo[0], "."), true)
          else
            call AddStat(P, SubString(InvenInfo[0],0,2), SubString(InvenInfo[0],3,StringLength(InvenInfo[0])), S2I(InvenInfo[1]), JNStringContains(InvenInfo[0], "."), true)
          endif
        endif
        set loopA = loopA + 1
      endloop
      call ReflectItemStats(P)
    else                  /* 능력치 감소 */
      if ( JNStringContains(s, "ec_") ) then /* 강화수치 */
        set InvenInfo[1] = JNStringSplit(JNStringSplit(s,"ec_",1),"'",0)
        if ( S2I(InvenInfo[1]) == 0 ) then
          set InvenInfo[1] = ""
        endif
      else
        set InvenInfo[1] = ""
      endif
      loop
        set InvenInfo[0] = JNStringSplit(s,"'",loopA)
        exitwhen ( InvenInfo[0] == "" ) or ( InvenInfo[0] == null )
        if ( SkipStr(SubString(InvenInfo[0],0,2)) <= 0 ) then
          if ( SkipStr(SubString(InvenInfo[0],0,2)) == -1 ) then /* 랜덤 및 추가 및 소켓 옵션 */
            call MinusStat(-P, SubString(InvenInfo[0],3,5), SubString(InvenInfo[0],6,StringLength(InvenInfo[0])), S2I(InvenInfo[1]), JNStringContains(InvenInfo[0], "."), true)
          else
            call MinusStat(-P, SubString(InvenInfo[0],0,2), SubString(InvenInfo[0],3,StringLength(InvenInfo[0])), S2I(InvenInfo[1]), JNStringContains(InvenInfo[0], "."), true)
          endif
        endif
        set loopA = loopA + 1
      endloop
      call ReflectItemStats(-P)
    endif
  endfunction
  
  private constant function xxx takes real r, real x returns real
    if ( x > 0. ) then
      return r*x
    else
      return r
    endif
  endfunction
  private function ProcessEnchating takes string s, integer start, integer length, real x returns string
    local string ss = JNStringSub(s, length-1, 1)
    if ( ss != "%" and ss != "x" ) then
      set ss = ""
    endif
    if ( JNStringContains(s, ".") ) then
      if ( S2R(JNStringSub(s, start, length-start))*x > 0.01 ) then
        return " |cffa349a4+" + R2SW(S2R(JNStringSub(s, start, length-start))*x,1,2) + ss
      else
        return ""
      endif
    else
      set start = R2I(S2R(JNStringSub(s, start, length-start))*x)
      if ( start > 0 ) then
        return " |cffa349a4+" + I2S(start) + ss
      else
        return ""
      endif
    endif
  endfunction
  private function ProcessEnchat takes real r returns nothing
    local integer loopA = ITEM_TOOLTIP_HIDE+1
    loop
      exitwhen loopA >= ITEM_TOOLTIP_MAXIMUM
      set InvenInfo[loopA] = InvenInfo[loopA] + ProcessEnchating(InvenInfo[loopA], JNStringPos(InvenInfo[loopA], "+"), JNStringLength(InvenInfo[loopA]), r)
      set loopA = loopA + 1
    endloop
  endfunction
  private function NameSize takes integer frame, string s returns real
    local real etc = JNStringCount(s, " ")+2.
    set s = s + "(" + InvenInfo[4] +")"
    call DzFrameSetText(frame, s)
    if ( JNStringLength(s) >= 17 ) then
      call DzFrameSetFont(frame, "Fonts\\DFHeiMd.ttf", 0.010, 1)
      return 0.075 + etc * 0.0028 + (JNStringLength(s)-etc) * 0.007
    elseif ( JNStringLength(s) >= 13 ) then
      call DzFrameSetFont(frame, "Fonts\\DFHeiMd.ttf", 0.012, 1)
      return 0.075 + etc * 0.0034 + (JNStringLength(s)-etc) * 0.0086
    else
      call DzFrameSetFont(frame, "Fonts\\DFHeiMd.ttf", 0.014, 1)
      return 0.075 + etc * 0.004 + (JNStringLength(s)-etc) * 0.01
    endif
  endfunction
  private function TypeSize takes integer frame, string s, string s6, string name returns real
    local real etc = JNStringLength(s)
    local real kor = (StringLength(s)-etc)/2. + StringLength(s6)
    return RMaxBJ(NameSize(frame, name), 0.07 + (etc-kor) * 0.004 + kor * 0.01)
  endfunction
  //TypeSize(DzFrameGetText(Frame_InvenInfo[3]), DzFrameGetText(Frame_InvenInfo[6]))
  
  private function GetFrameMouseX takes nothing returns real
    return JNMemoryGetReal(FrameMouseXOffset) /* 0. ~ 0.8 */
  endfunction
  private function GetFrameMouseY takes nothing returns real
    return JNMemoryGetReal(FrameMouseYOffset) /* 0. ~ 0.6 */
  endfunction
  private constant function Swap takes boolean one, integer arr returns integer
    if ( one ) then
      return Frame_EquipInfo[arr]
    else
      return Frame_Equip2Info[arr]
    endif
  endfunction
  private constant function CalHeight takes real r0, real r1, real r2 returns real
    if ( r0 > r1 ) then
      return 0.
    elseif ( r1 > r2 ) then
      return r1 - r2
    else
      return 0.
    endif
  endfunction
  private function EquipUp takes item t, boolean one returns nothing
    local integer f = 7
    local integer last = 0
    call Process(EXGetItemDataString(GetItemTypeId(t), 3) + "'" + LoadStr(hash, GetHandleId(t), StringHash("ItemAddData")), 0)
    
    call DzFrameSetTexture(Swap(one, 1), EXGetItemDataString(GetItemTypeId(t), 1), 0)
    call DzFrameSetText(Swap(one, 3), "종류: " + InvenInfo[6] + "등급 " + InvenInfo[2])
    call DzFrameSetText(Swap(one, 4), "레벨 제한: " + InvenInfo[3])
    call DzFrameSetText(Swap(one, 5), InvenInfo[1])
    if ( InvenInfo[7] != "" ) then
      call ProcessEnchat(Pow(GRADE_BONUS,S2R(InvenInfo[7]))-1.)
    endif
    loop
      exitwhen f >= ITEM_TOOLTIP_MAXIMUM+2
      if ( InvenInfo[f+2] == "" ) then
        call DzFrameSetText(Swap(one, f-1), "")
        set last = f-2
      else
        call DzFrameSetText(Swap(one, f-1), InvenInfo[f+2])
      endif
      set f = f + 1
    endloop
    
    if ( InvenInfo[7] != "" ) then
      call DzFrameSetText(Swap(one, last), " ")
      call DzFrameSetText(Swap(one, last+1), "|cffa349a4강화 +" + InvenInfo[7] + " / 옵션증폭 +" + I2S(R2I((Pow(GRADE_BONUS,S2R(InvenInfo[7]))-1.)*100.)) + "%")
      call DzFrameSetSize(Swap(one, 0), TypeSize(Swap(one, 2), DzFrameGetText(Swap(one, 3)), InvenInfo[6], GetItemName(t)), S2R(InvenInfo[0])+.014)
    else
      call DzFrameSetSize(Swap(one, 0), TypeSize(Swap(one, 2), DzFrameGetText(Swap(one, 3)), InvenInfo[6], GetItemName(t)), S2R(InvenInfo[0])-.010)
    endif
    call DzFrameClearAllPoints(Swap(one, 0))
    if ( one ) then
      call DzFrameSetPoint(Swap(one, 0), JN_FRAMEPOINT_TOPRIGHT, Frame_InvenInfo[0], JN_FRAMEPOINT_TOPLEFT, 0., CalHeight(DzFrameGetHeight(Frame_InvenInfo[0]), DzFrameGetHeight(Swap(one, 0)), GetFrameMouseY()))
    else
      call DzFrameSetPoint(Swap(one, 0), JN_FRAMEPOINT_TOPRIGHT, Swap(true, 0), JN_FRAMEPOINT_TOPLEFT, 0., CalHeight(DzFrameGetHeight(Swap(true, 0)), DzFrameGetHeight(Swap(one, 0)), GetFrameMouseY()))
    endif
    call DzFrameShow(Swap(one, 0), true)
  endfunction
  private function InventoryUp takes nothing returns nothing
    local integer f = DzGetTriggerUIEventFrame()
    local integer P = GetPlayerId(DzGetTriggerUIEventPlayer())+1
    local integer Slot = LoadInteger(hash, f, StringHash("FrameID"))
    local item t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(Slot)))
    local integer last = 0
    
    call Process(EXGetItemDataString(GetItemTypeId(t), 3) + "'" + LoadStr(hash, GetHandleId(t), StringHash("ItemAddData")), 0)
      if ( t != null ) then 
        call DzSyncData("MouseVar", I2S(Slot)) /* 현재 칸 저장(우클릭 위한) */
        
        call DzFrameSetTexture(Frame_InvenInfo[1], EXGetItemDataString(GetItemTypeId(t), 1), 0)
        call DzFrameSetText(Frame_InvenInfo[3], "종류: " + InvenInfo[6] + "등급 " + InvenInfo[2])
        call DzFrameSetText(Frame_InvenInfo[4], "레벨 제한: " + InvenInfo[3])
        call DzFrameSetText(Frame_InvenInfo[5], InvenInfo[1])
        set f = 7
        if ( InvenInfo[7] != "" ) then
          call ProcessEnchat(Pow(GRADE_BONUS,S2R(InvenInfo[7]))-1.)
        endif
        loop
          exitwhen f >= ITEM_TOOLTIP_MAXIMUM+2
          if ( InvenInfo[f+2] == "" ) then
            call DzFrameSetText(Frame_InvenInfo[f-1], "")
            set last = f-2
          else
            call DzFrameSetText(Frame_InvenInfo[f-1], InvenInfo[f+2])
          endif
          set f = f + 1
        endloop

        if ( InvenInfo[7] != "" ) then
          call DzFrameSetText(Frame_InvenInfo[last], " ")
          call DzFrameSetText(Frame_InvenInfo[last+1], "|cffa349a4강화 +" + InvenInfo[7] + " / 옵션증폭 +" + I2S(R2I((Pow(GRADE_BONUS,S2R(InvenInfo[7]))-1.)*100.)) + "%")
          call DzFrameSetSize(Frame_InvenInfo[0], TypeSize(Frame_InvenInfo[2], DzFrameGetText(Frame_InvenInfo[3]), InvenInfo[6], GetItemName(t)), S2R(InvenInfo[0])+.014)
        else
          call DzFrameSetSize(Frame_InvenInfo[0], TypeSize(Frame_InvenInfo[2], DzFrameGetText(Frame_InvenInfo[3]), InvenInfo[6], GetItemName(t)), S2R(InvenInfo[0])-.010)
        endif
        call DzFrameClearAllPoints(Frame_InvenInfo[0])
        if ( GetFrameMouseY() > DzFrameGetHeight(Frame_InvenInfo[0]) ) then
          call DzFrameSetAbsolutePoint(Frame_InvenInfo[0], JN_FRAMEPOINT_TOPRIGHT, GetFrameMouseX(), GetFrameMouseY())
        else
          call DzFrameSetAbsolutePoint(Frame_InvenInfo[0], JN_FRAMEPOINT_BOTTOMRIGHT, GetFrameMouseX(), 0.)
        endif
        call DzFrameShow(Frame_InvenInfo[0], true)
        
        if ( Slot > 0 ) then /* 인벤토리 대상, 장비 동시 표시 */
          set Slot = CS2I(InvenInfo[2])
          if ( HaveSavedHandle(hash, P, StringHash("ItemData"+I2S(-Slot))) ) then /* 인벤토리 + 장비 */
            call EquipUp(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(-Slot))), true)
            set Slot = CS2II(Slot)
            if ( Slot > 0 ) and ( HaveSavedHandle(hash, P, StringHash("ItemData"+I2S(-Slot))) ) then /* 인벤토리 + 장비 + 장비2(귀걸이, 반지) */
              call EquipUp(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(-Slot))), false)
            endif
          elseif ( CS2II(Slot) > 0 ) and ( HaveSavedHandle(hash, P, StringHash("ItemData"+I2S(-CS2II(Slot)))) ) then /* 인벤토리 + 장비2 */
            call EquipUp(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(-CS2II(Slot)))), true)
          endif
        endif
      endif
      
      set t = null
  endfunction
  private function InventoryDown takes nothing returns nothing
    call DzFrameShow(Frame_InvenInfo[0], false)
    call DzFrameShow(Swap(true, 0), false)
    call DzFrameShow(Swap(false, 0), false)
    call DzSyncData("MouseVar", "")
  endfunction
  private function CreateEquip takes nothing returns nothing
    local integer loopA = 1
    local integer loopB = 1
    local integer loopC = 1
    set EquipBackdrop[0]=DzCreateFrameByTagName("BACKDROP", "", Frame_InvenButtonsBackDrop[0], "", 0)
    //StandardDecoratedEditBoxBackdropTemplate
    call DzFrameSetSize(EquipBackdrop[0], EQUIPSPACEGAP*5.+EQUIPEDGEGAP*2., EQUIPSPACEGAP*5.+EQUIPEDGEGAP*2.)
    call DzFrameSetPoint(EquipBackdrop[0], JN_FRAMEPOINT_BOTTOMRIGHT, Frame_InvenButtonsBackDrop[0], JN_FRAMEPOINT_TOPRIGHT, 0., Equip_SPACEGAP*.5 + Equip_EDGEGAP*2)
    call DzFrameSetTexture(EquipBackdrop[0], "Equip_Back.blp", 0)
    
    loop
      if ( loopA == 1 ) or ( loopA == 5 ) or ( loopB == 1 ) or ( loopB == 5 ) then
        set EquipBackdrop[loopC]=DzCreateFrameByTagName("BACKDROP", "", EquipBackdrop[0], "", 0)
        call DzFrameSetTexture(EquipBackdrop[loopC], I2BE(loopC), 0)
        call DzFrameSetPoint(EquipBackdrop[loopC], JN_FRAMEPOINT_TOPLEFT, EquipBackdrop[0], JN_FRAMEPOINT_TOPLEFT, EQUIPEDGEGAP+EQUIPSPACEGAP*(loopA-1), -EQUIPEDGEGAP-EQUIPSPACEGAP*(loopB-1))
        call DzFrameSetSize(EquipBackdrop[loopC], EQUIPSPACEGAP-EQUIPEDGEGAP, EQUIPSPACEGAP-EQUIPEDGEGAP)
        
        set Equip[loopC] = DzCreateFrameByTagName("BUTTON", "", EquipBackdrop[loopC], "ScoreScreenTabButtonTemplate", 0)
        call DzFrameSetAllPoints(Equip[loopC], EquipBackdrop[loopC])
        call SaveInteger(hash, Equip[loopC], StringHash("FrameID"), -loopC)
        call DzFrameSetScriptByCode(Equip[loopC], JN_FRAMEEVENT_MOUSE_ENTER, function InventoryUp, false)
        call DzFrameSetScriptByCode(Equip[loopC], JN_FRAMEEVENT_MOUSE_LEAVE, function InventoryDown, false)
        
        call DzFrameSetScriptByCode(Equip[loopC], JN_FRAMEEVENT_MOUSE_DOUBLECLICK, function DoubleClick, true) /* 더블클릭 */

        set loopC = loopC + 1
      endif
      set loopA = loopA + 1
      if ( loopA >= 6 ) then
        set loopA = 1
        set loopB = loopB + 1
      endif
      exitwhen loopB >= 6
    endloop
    set Equip[loopC]=DzCreateFrameByTagName("TEXT", "", EquipBackdrop[0], "", 0)
    call DzFrameSetPoint(Equip[loopC], JN_FRAMEPOINT_TOP, EquipBackdrop[0], JN_FRAMEPOINT_TOP, 0., -EQUIPSPACEGAP-EQUIPEDGEGAP)
    call DzFrameSetText(Equip[loopC], "아이템 상승치")
    call DzFrameSetFont(Equip[loopC], "Fonts\\DFHeiMd.ttf", 0.012, 0)
    
    set loopC = 18
    set Equip[loopC]=DzCreateFrameByTagName("TEXTAREA", "", EquipBackdrop[0], "EscMenuTextAreaTemplate", 0)
    call DzFrameClearAllPoints(Equip[loopC])
    call DzFrameSetPoint(Equip[loopC], JN_FRAMEPOINT_TOP, Equip[loopC-1], JN_FRAMEPOINT_BOTTOM, 0., 0.)
    call DzFrameSetSize(Equip[loopC], .12, .11)
    call DzFrameSetFont(Equip[loopC], "Fonts\\DFHeiMd.ttf", 0.010, 0)
    call DzFrameSetText(Equip[loopC], "")
    //스크롤바 클릭 가능하면: 0.72, 0.43
  endfunction
  private function ItemDrop takes nothing returns nothing
  /* "23" -> 동기화 플레이어 23번아이템 드랍 */
    local integer P = GetPlayerId(DzGetTriggerSyncPlayer())+1
    local integer Slot = S2I(DzGetTriggerSyncData())
    local item t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(Slot)))
    local integer NextSlot = LoadInteger(hash, P, StringHash("ItemData0"))
    
    if ( GetLocalPlayer() == Player(P-1) ) then
      call StartSound(gg_snd_HeroDropItem1)
    endif
    if ( Slot == -99 ) then  /* 전체버리기 */
      set Slot = Save_MAX_INVENTORY
      loop
        if ( HaveSavedHandle(hash, P, StringHash("ItemData"+I2S(Slot))) ) then
          set t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(Slot)))
          call SetItemPosition(t, GetWidgetX(udg_hero[P]), GetWidgetY(udg_hero[P]))
          call RemoveSavedHandle(hash, P, StringHash("ItemData"+I2S(Slot))) /* 제거 */
          if ( GetLocalPlayer() == Player(P-1) ) then
            call DzFrameSetTexture(Frame_InvenButtonsBackDrop[Slot], "Inven_Empty.blp", 0)
          endif
        endif
        exitwhen Slot == 1
        set Slot = Slot - 1
      endloop
      call DisplayTimedTextToPlayer(Player(P-1), 0, 0, 4., "아이템을 모두 버렸습니다.")
      call SaveInteger(hash, P, StringHash("ItemData0"), Slot)
    else
      if ( NextSlot == 0 ) then /* 다음에 먹을 슬롯칸 저장 */
        call SaveInteger(hash, P, StringHash("ItemData0"), IMinBJ(Slot, NextSlot))
      else
        call SaveInteger(hash, P, StringHash("ItemData0"), Slot)
      endif
      call SetItemPosition(t, GetWidgetX(udg_hero[P]), GetWidgetY(udg_hero[P]))
      call RemoveSavedHandle(hash, P, StringHash("ItemData"+I2S(Slot))) /* 제거 */
      call DisplayTimedTextToPlayer(Player(P-1), 0, 0, 4., GetItemName(t) + "을(를) 버렸습니다.")
    endif
    set t = null
  endfunction
  private function ItemChange takes nothing returns nothing
  /* "23'24" -> 23번을 24번으로 이동or교체 */
    local integer P = GetPlayerId(DzGetTriggerSyncPlayer())+1
    local string s = DzGetTriggerSyncData()
    local integer OriSlot = S2I(JNStringSplit(s,"'",0))
    local integer NewSlot = S2I(JNStringSplit(s,"'",1))
    local item t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(NewSlot)))
    
    call SaveItemHandle(hash, P, StringHash("ItemData"+I2S(NewSlot)), LoadItemHandle(hash, P, StringHash("ItemData"+I2S(OriSlot))))
    
    if ( t == null ) then
      call RemoveSavedHandle(hash, P, StringHash("ItemData"+I2S(OriSlot))) /* 제거 */
      call SaveInteger(hash, P, StringHash("ItemData0"), IMinBJ(OriSlot, LoadInteger(hash, P, StringHash("ItemData0"))))
    else
      call SaveItemHandle(hash, P, StringHash("ItemData"+I2S(OriSlot)), t)
    endif
    //call DisplayTimedTextToPlayer(Player(P-1), 0, 0, 4., GetItemName(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(NewSlot)))) + "와 "+GetItemName(t)+"을(를) 바꿨습니다.")
    set t = null
  endfunction
  public function GetEmpty takes integer P returns integer
  //다음에 먹을 빈 공간 찾기
   local integer loopA = 1
    loop
      if not ( HaveSavedHandle(hash, P, StringHash("ItemData"+I2S(loopA))) ) then
        call SaveInteger(hash, P, StringHash("ItemData0"), loopA)
        return loopA
      endif
      exitwhen loopA >= Save_MAX_INVENTORY
      set loopA = loopA + 1
    endloop
    return 0
  endfunction
  private function ItemEquip2 takes item t, integer P, integer Slot, integer Num returns nothing
    if ( GetLocalPlayer() == Player(P-1) ) then
      call DzFrameSetTexture(EquipBackdrop[Slot], EXGetItemDataString(GetItemTypeId(t), 1), 0)
      call DzFrameSetTexture(Frame_InvenButtonsBackDrop[Num], "Inven_Empty.blp", 0)
    endif
    call SaveItemHandle(hash, P, StringHash("ItemData"+I2S(-Slot)), t)
    call RemoveSavedHandle(hash, P, StringHash("ItemData"+I2S(Num))) /* 제거 */
    
    call SaveInteger(hash, P, StringHash("ItemData0"), IMinBJ(Num, LoadInteger(hash, P, StringHash("ItemData0"))))
    
    call Process(EXGetItemDataString(GetItemTypeId(t), 3) + "'" + LoadStr(hash, GetHandleId(t), StringHash("ItemAddData")), P)
  endfunction
  private function ItemEquip takes nothing returns nothing
    local integer P = GetPlayerId(DzGetTriggerSyncPlayer())+1
    local integer Num = S2I(DzGetTriggerSyncData())
    local integer Slot = 0
    local item t
    if ( Num < 0 ) then /* -12 -> 12번째 장비칸을 탈착 */
      set t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(Num)))
      set Slot = LoadInteger(hash, P, StringHash("ItemData0"))
      if ( GetLocalPlayer() == Player(P-1) ) then
        call DzFrameSetTexture(EquipBackdrop[-Num], I2BE(-Num), 0)
        call DzFrameSetTexture(Frame_InvenButtonsBackDrop[Slot], EXGetItemDataString(GetItemTypeId(t), 1), 0)
      endif
      call SaveItemHandle(hash, P, StringHash("ItemData"+I2S(Slot)), t)
      call RemoveSavedHandle(hash, P, StringHash("ItemData"+I2S(Num)))
      call GetEmpty(P)
      
      /* P의 실제 능력치 감소 */
      call Process(EXGetItemDataString(GetItemTypeId(t), 3) + "'" + LoadStr(hash, GetHandleId(t), StringHash("ItemAddData")), -P)
    else                /* 23 -> 23번아이템을 장착 */
      set t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(Num)))
      call Process(EXGetItemDataString(GetItemTypeId(t), 3) + "'" + LoadStr(hash, GetHandleId(t), StringHash("ItemAddData")), 0)
      set Slot = CS2I(InvenInfo[2]) /* 무기(검) → 1 */
      
      if ( GetHeroLevel(udg_hero[P]) < S2I(InvenInfo[3]) ) then /* 레벨제한 */
        call DisplayTimedTextToPlayer(Player(P-1), 0, 0, 4., GetItemName(t) + "의 착용레벨은 " +InvenInfo[3]+ " 입니다.")
      elseif ( HaveSavedHandle(hash, P, StringHash("ItemData"+I2S(-Slot))) ) then /* 중첩제한 */
        if ( CS2II(Slot) == 0 ) or ( HaveSavedHandle(hash, P, StringHash("ItemData"+I2S(-CS2II(Slot)))) ) then
          call DisplayTimedTextToPlayer(Player(P-1), 0, 0, 4., I2CS(Slot) + "에 장착된 " + GetItemName(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(-Slot)))) + "을(를) 먼저 장착 해제해주세요.")
        else    /* 귀걸이, 반지 특별허용 */
          call ItemEquip2(t, P, CS2II(Slot), Num)
        endif
      else
        call ItemEquip2(t, P, Slot, Num)
      endif
    endif
  endfunction
  private function InventoryClick takes nothing returns nothing
    local integer f = DzGetTriggerUIEventFrame()
    local integer P = GetPlayerId(DzGetTriggerUIEventPlayer())+1
    local integer fno = LoadInteger(hash, f, StringHash("FrameID"))
    local item t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(fno)))
    if ( ClickNow[P] == 0 ) then /* 첫번째 클릭 */
      if ( fno == -99 ) then /* 버리기 */
        call DzFrameSetModel(ClickView, "Equip_Clicking2.mdx", 0, 0) /* 반짝이 효과 big _버리기 */
      elseif ( t != null ) then
        call DzFrameSetModel(ClickView, "Equip_Clicking1.mdx", 0, 0) /* 반짝이 효과 small _일반 */
      else
        return
      endif
      set ClickNow[P] = fno
      call DzFrameClearAllPoints(ClickView)
      call DzFrameSetAllPoints(ClickView, f)
      call DzFrameShow(ClickView, true)
      set t = null
    elseif ( t != null ) then               /* to 아이템 */
      if ( ClickNow[P] == -99 ) then           /* 버리기 to 아이템 (버리기) */
        call DzFrameSetTexture(Frame_InvenButtonsBackDrop[fno], "Inven_Empty.blp", 0)
        call DzSyncData("ItemDrop",I2S(fno))
      elseif ( fno == ClickNow[P] ) then      /* 아이템 to 아이템 (더블클릭-즉시장착) */
        call DzSyncData("I_Equip", I2S(fno))
      else                                    /* 아이템 to 아이템 (위치변경) */
        call DzSyncData("I_Change",I2S(ClickNow[P])+"'"+I2S(fno))
        call DzFrameSetTexture(Frame_InvenButtonsBackDrop[ClickNow[P]], EXGetItemDataString(GetItemTypeId(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(fno)))), 1), 0)
        call DzFrameSetTexture(Frame_InvenButtonsBackDrop[fno], EXGetItemDataString(GetItemTypeId(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(ClickNow[P])))), 1), 0)
        
        call DzSyncData("MouseVar", I2S(fno)) /* 현재 칸 번호 저장 */
      endif
      set t = null
      set ClickNow[P] = 0
      call DzFrameShow(ClickView, false)
    elseif ( fno != 0 ) then
      call DzFrameSetTexture(Frame_InvenButtonsBackDrop[ClickNow[P]], "Inven_Empty.blp", 0)
      if ( fno == -99 ) then             /* 아이템 to 버리기 */
        call DzSyncData("ItemDrop",I2S(ClickNow[P]))
      elseif ( ClickNow[P] != -99 ) then /* without 버리기 to 빈공간 ( 아이템 to 빈공간 ) */
        call DzSyncData("I_Change",I2S(ClickNow[P])+"'"+I2S(fno))
        call DzFrameSetTexture(Frame_InvenButtonsBackDrop[fno], EXGetItemDataString(GetItemTypeId(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(ClickNow[P])))), 1), 0)
        call DzFrameSetTexture(Frame_InvenButtonsBackDrop[ClickNow[P]], "Inven_Empty.blp", 0)
        
        call DzSyncData("MouseVar", I2S(fno)) /* 현재 칸 번호 저장 */
      endif
      set ClickNow[P] = 0
      call DzFrameShow(ClickView, false)
    endif
    
    //call BJDebugMsg(EXGetItemDataString(GetItemTypeId(t), 3) + "'" + LoadStr(hash, GetHandleId(t), StringHash("ItemAddData")))
  endfunction
  private function InventoryToolTip takes nothing returns nothing
    local integer int = 0
    set Frame_InvenInfo[int] = DzCreateFrameByTagName("BACKDROP", "", Frame_InvenButtonsBackDrop[0], "QuestButtonBaseTemplate", 0)
    call DzFrameSetSize(Frame_InvenInfo[int], .25, .25)
    call DzFrameSetAbsolutePoint(Frame_InvenInfo[int], JN_FRAMEPOINT_TOPLEFT, .4, .3)
    //call DzFrameSetTexture(Frame_InvenInfo[int], "QuestButtonBaseTemplate", 0)
    
    set int = int + 1
    set Frame_InvenInfo[int] = DzCreateFrameByTagName("BACKDROP", "", Frame_InvenInfo[0], "", 0)
    call DzFrameSetSize(Frame_InvenInfo[int], .05, .05)
    call DzFrameSetPoint(Frame_InvenInfo[int], JN_FRAMEPOINT_TOPLEFT, Frame_InvenInfo[0], JN_FRAMEPOINT_TOPLEFT, .01, -.01)
    call DzFrameSetTexture(Frame_InvenInfo[int], "Inven_Empty.blp", 0)
    
    set int = int + 1
    set Frame_InvenInfo[int] = DzCreateFrameByTagName("TEXT", "", Frame_InvenInfo[0], "", 0)
    call DzFrameSetPoint(Frame_InvenInfo[int], JN_FRAMEPOINT_BOTTOMLEFT, Frame_InvenInfo[int-1], JN_FRAMEPOINT_TOPRIGHT, .01, -.015)
    call DzFrameSetText(Frame_InvenInfo[int], "바이탈리티 페리앱트 (에픽)")
    
    set int = int + 1
    set Frame_InvenInfo[int] = DzCreateFrameByTagName("TEXT", "", Frame_InvenInfo[0], "", 0)
    call DzFrameSetPoint(Frame_InvenInfo[int], JN_FRAMEPOINT_TOPLEFT, Frame_InvenInfo[int-1], JN_FRAMEPOINT_BOTTOMLEFT, 0., -.005)
    call DzFrameSetText(Frame_InvenInfo[int], "종류: S등급 반지")
    
    set int = int + 1
    set Frame_InvenInfo[int] = DzCreateFrameByTagName("TEXT", "", Frame_InvenInfo[0], "", 0)
    call DzFrameSetPoint(Frame_InvenInfo[int], JN_FRAMEPOINT_TOPLEFT, Frame_InvenInfo[int-1], JN_FRAMEPOINT_BOTTOMLEFT, 0., -.005)
    call DzFrameSetText(Frame_InvenInfo[int], "착용 레벨: 40")
    
    set int = int + 1
    set Frame_InvenInfo[int] = DzCreateFrameByTagName("TEXT", "", Frame_InvenInfo[0], "", 0)
    call DzFrameSetPoint(Frame_InvenInfo[int], JN_FRAMEPOINT_TOPLEFT, Frame_InvenInfo[1], JN_FRAMEPOINT_BOTTOMLEFT, 0., -.01)
    call DzFrameSetFont(Frame_InvenInfo[int], "Fonts\\DFHeiMd.ttf", 0.010, 1)
    call DzFrameSetText(Frame_InvenInfo[int], "전설에 의하면 저주에 걸린 아쥰의 영혼이
오늘 날까지도 자신의 심장을 찾고 있다고
합니다.")

    loop
      set int = int + 1
      set Frame_InvenInfo[int] = DzCreateFrameByTagName("TEXT", "", Frame_InvenInfo[0], "", 0)
      if ( int == 6 ) then
        call DzFrameSetPoint(Frame_InvenInfo[int], JN_FRAMEPOINT_TOPLEFT, Frame_InvenInfo[int-1], JN_FRAMEPOINT_BOTTOMLEFT, 0., -.01)
      else
        call DzFrameSetPoint(Frame_InvenInfo[int], JN_FRAMEPOINT_TOPLEFT, Frame_InvenInfo[int-1], JN_FRAMEPOINT_BOTTOMLEFT, 0., 0.)
      endif
      call DzFrameSetFont(Frame_InvenInfo[int], "Fonts\\DFHeiMd.ttf", 0.012, 1)
      call DzFrameSetText(Frame_InvenInfo[int], I2S(int))
      exitwhen int >= ITEM_TOOLTIP_MAXIMUM
    endloop
      
    call DzFrameShow(Frame_InvenInfo[0], false)
  endfunction
  private function SwapSet takes boolean first, integer arr, integer var returns nothing
    if ( first ) then
      set Frame_EquipInfo[arr] = var
    else
      set Frame_Equip2Info[arr] = var
    endif
  endfunction
  private function EquipToolTip takes boolean first returns nothing
    local integer int = 0
    call SwapSet(first,int,DzCreateFrameByTagName("BACKDROP", "", Frame_InvenButtonsBackDrop[0], "QuestButtonBaseTemplate", 0))
    call DzFrameSetSize(Swap(first, int), .25, .25)
    call DzFrameSetAbsolutePoint(Swap(first, int), JN_FRAMEPOINT_TOPLEFT, .4, .3)
    //call DzFrameSetTexture(Swap(first, int), "QuestButtonBaseTemplate", 0)
    
    set int = int + 1
    call SwapSet(first, int, DzCreateFrameByTagName("BACKDROP", "", Swap(first,0), "", 0))
    call DzFrameSetSize(Swap(first, int), .05, .05)
    call DzFrameSetPoint(Swap(first, int), JN_FRAMEPOINT_TOPLEFT, Swap(first,0), JN_FRAMEPOINT_TOPLEFT, .01, -.01)
    call DzFrameSetTexture(Swap(first, int), "Inven_Empty.blp", 0)
    
    set int = int + 1
    call SwapSet(first, int, DzCreateFrameByTagName("TEXT", "", Swap(first,0), "", 0))
    call DzFrameSetPoint(Swap(first, int), JN_FRAMEPOINT_BOTTOMLEFT, Swap(first, int-1), JN_FRAMEPOINT_TOPRIGHT, .01, -.015)
    call DzFrameSetText(Swap(first, int), "바이탈리티 페리앱트 (에픽)")
    
    set int = int + 1
    call SwapSet(first, int, DzCreateFrameByTagName("TEXT", "", Swap(first,0), "", 0))
    call DzFrameSetPoint(Swap(first, int), JN_FRAMEPOINT_TOPLEFT, Swap(first, int-1), JN_FRAMEPOINT_BOTTOMLEFT, 0., -.005)
    call DzFrameSetText(Swap(first, int), "종류: S등급 반지")
    
    set int = int + 1
    call SwapSet(first, int, DzCreateFrameByTagName("TEXT", "", Swap(first,0), "", 0))
    call DzFrameSetPoint(Swap(first, int), JN_FRAMEPOINT_TOPLEFT, Swap(first, int-1), JN_FRAMEPOINT_BOTTOMLEFT, 0., -.005)
    call DzFrameSetText(Swap(first, int), "착용 레벨: 40")
    
    set int = int + 1
    call SwapSet(first, int, DzCreateFrameByTagName("TEXT", "", Swap(first,0), "", 0))
    call DzFrameSetPoint(Swap(first, int), JN_FRAMEPOINT_TOPLEFT, Swap(first,1), JN_FRAMEPOINT_BOTTOMLEFT, 0., -.01)
    call DzFrameSetFont(Swap(first, int), "Fonts\\DFHeiMd.ttf", 0.010, 1)
    call DzFrameSetText(Swap(first, int), "전설에 의하면 저주에 걸린 아쥰의 영혼이
오늘 날까지도 자신의 심장을 찾고 있다고
합니다.")

    loop
      set int = int + 1
      call SwapSet(first, int, DzCreateFrameByTagName("TEXT", "", Swap(first,0), "", 0))
      if ( int == 6 ) then
        call DzFrameSetPoint(Swap(first, int), JN_FRAMEPOINT_TOPLEFT, Swap(first, int-1), JN_FRAMEPOINT_BOTTOMLEFT, 0., -.01)
      else
        call DzFrameSetPoint(Swap(first, int), JN_FRAMEPOINT_TOPLEFT, Swap(first, int-1), JN_FRAMEPOINT_BOTTOMLEFT, 0., 0.)
      endif
      call DzFrameSetFont(Swap(first, int), "Fonts\\DFHeiMd.ttf", 0.012, 1)
      call DzFrameSetText(Swap(first, int), I2S(int))
      exitwhen int >= ITEM_TOOLTIP_MAXIMUM
    endloop
      
    call DzFrameShow(Swap(first,0), false)
  endfunction
  private constant function Cal takes integer A, integer B returns integer
    return (B-1)*7+A
  endfunction
  private function CreateInventory takes nothing returns nothing
    local integer loopA = 0
    local integer loopB = 1
    set Frame_InvenButtonsBackDrop[loopA]=DzCreateFrameByTagName("BACKDROP", "", DzGetGameUI(), "", 0)
    //StandardDecoratedEditBoxBackdropTemplate
    call DzFrameSetSize(Frame_InvenButtonsBackDrop[loopA], SPACEGAP*7.+EDGEGAP*2., SPACEGAP*8.+EDGEGAP)
    call DzFrameSetAbsolutePoint(Frame_InvenButtonsBackDrop[loopA], JN_FRAMEPOINT_BOTTOMLEFT, .6, .08)
    call DzFrameSetTexture(Frame_InvenButtonsBackDrop[loopA], "Equip_Back.blp", 0)
    
    set Frame_InvenButtons[loopA]=DzCreateFrameByTagName("TEXT", "", Frame_InvenButtonsBackDrop[loopA], "", 0)
    call DzFrameSetPoint(Frame_InvenButtons[loopA], JN_FRAMEPOINT_CENTER, Frame_InvenButtonsBackDrop[loopA], JN_FRAMEPOINT_TOP, 0, -SPACEGAP*.5)
    call DzFrameSetText(Frame_InvenButtons[loopA], "I  N  V  E  N  T  O  R  Y")        
    
    loop
      set loopA = loopA + 1
      set Frame_InvenButtonsBackDrop[Cal(loopA,loopB)]=DzCreateFrameByTagName("BACKDROP", "", Frame_InvenButtonsBackDrop[0], "", 0)
      call DzFrameSetPoint(Frame_InvenButtonsBackDrop[Cal(loopA,loopB)], JN_FRAMEPOINT_TOPLEFT, Frame_InvenButtonsBackDrop[0], JN_FRAMEPOINT_TOPLEFT, EDGEGAP+SPACEGAP*(loopA-1), -EDGEGAP-SPACEGAP*loopB)
      call DzFrameSetSize(Frame_InvenButtonsBackDrop[Cal(loopA,loopB)], 0.0235, 0.0235)
      call DzFrameSetTexture(Frame_InvenButtonsBackDrop[Cal(loopA,loopB)], "Inven_Empty.blp", 0)
      
      set Frame_InvenButtons[Cal(loopA,loopB)] = DzCreateFrameByTagName("BUTTON", "", Frame_InvenButtonsBackDrop[Cal(loopA,loopB)], "ScoreScreenTabButtonTemplate", 0)
      call DzFrameSetAllPoints(Frame_InvenButtons[Cal(loopA,loopB)], Frame_InvenButtonsBackDrop[Cal(loopA,loopB)])
      call SaveInteger(hash, Frame_InvenButtons[Cal(loopA,loopB)], StringHash("FrameID"), Cal(loopA,loopB))
      call DzFrameSetScriptByCode(Frame_InvenButtons[Cal(loopA,loopB)], JN_FRAMEEVENT_MOUSE_ENTER, function InventoryUp, false)
      call DzFrameSetScriptByCode(Frame_InvenButtons[Cal(loopA,loopB)], JN_FRAMEEVENT_MOUSE_LEAVE, function InventoryDown, false)
      call DzFrameSetScriptByCode(Frame_InvenButtons[Cal(loopA,loopB)], JN_FRAMEEVENT_MOUSE_UP, function InventoryClick, false)
      
      if ( loopA >= 7 ) then
        set loopA = 0
        set loopB = loopB + 1
      endif
      exitwhen loopB >= 8
    endloop
    
    set loopA = Cal(loopA,loopB) +1
    
    /* 버리기 아이콘 */
    set loopA = loopA +1
    set Frame_InvenButtonsBackDrop[loopA]=DzCreateFrameByTagName("BACKDROP", "", Frame_InvenButtonsBackDrop[0], "", 0)
    call DzFrameSetPoint(Frame_InvenButtonsBackDrop[loopA], JN_FRAMEPOINT_BOTTOMRIGHT, Frame_InvenButtonsBackDrop[0], JN_FRAMEPOINT_BOTTOMLEFT, -EDGEGAP, 0.)
    call DzFrameSetTexture(Frame_InvenButtonsBackDrop[loopA], "Equip_Back.blp", 0)
    call DzFrameSetSize(Frame_InvenButtonsBackDrop[loopA], SPACEGAP*1.25, SPACEGAP*1.25)
    
    set loopA = loopA +1
    set Frame_InvenButtonsBackDrop[loopA]=DzCreateFrameByTagName("BACKDROP", "", Frame_InvenButtonsBackDrop[loopA-1], "", 0)
    call DzFrameSetPoint(Frame_InvenButtonsBackDrop[loopA], JN_FRAMEPOINT_CENTER, Frame_InvenButtonsBackDrop[loopA-1], JN_FRAMEPOINT_CENTER, 0., 0.)
    call DzFrameSetTexture(Frame_InvenButtonsBackDrop[loopA], "ReplaceableTextures\\CommandButtons\\BTNPickUpItem.blp", 0)
    call DzFrameSetSize(Frame_InvenButtonsBackDrop[loopA], SPACEGAP*1.1, SPACEGAP*1.1)
    
    set Frame_InvenButtons[loopA] = DzCreateFrameByTagName("BUTTON", "", Frame_InvenButtonsBackDrop[loopA], "ScoreScreenTabButtonTemplate", 0)
    call DzFrameSetAllPoints(Frame_InvenButtons[loopA], Frame_InvenButtonsBackDrop[loopA])
    call SaveInteger(hash, Frame_InvenButtons[loopA], StringHash("FrameID"), -99)
    call DzFrameSetScriptByCode(Frame_InvenButtons[loopA], JN_FRAMEEVENT_MOUSE_UP, function InventoryClick, false)
    
    set ClickView = DzCreateFrameByTagName("SPRITE", "Test2", Frame_InvenButtonsBackDrop[loopA], "", 0)
    call DzFrameSetModel(ClickView, "Equip_Clicking1.mdx", 0, 0)
    call DzFrameSetAllPoints(ClickView, Frame_InvenButtonsBackDrop[loopA])
    call DzFrameShow(ClickView, false)
    
    call DzFrameShow(Frame_InvenButtonsBackDrop[0], false)
  endfunction
  private function Init takes nothing returns nothing
    local trigger t = CreateTrigger()
    call CreateInventory()
    call CreateEquip()
    call InventoryToolTip()
    call EquipToolTip(true)
    call EquipToolTip(false)
    call DzTriggerRegisterSyncData(t, "ItemDrop", false)
    call TriggerAddAction(t, function ItemDrop)
    
    set t = CreateTrigger()
    call DzTriggerRegisterSyncData(t, "I_Change", false)
    call TriggerAddAction(t, function ItemChange)
    
    set t = CreateTrigger()
    call DzTriggerRegisterSyncData(t, "I_Equip", false)
    call TriggerAddAction(t, function ItemEquip)
    
    set t = CreateTrigger()
    call DzTriggerRegisterSyncData(t, "MouseVar", false)
    call TriggerAddAction(t, function MouseVariable)
    
    set t = CreateTrigger()
    call DzTriggerRegisterMouseEventByCode(t, JN_MOUSE_BUTTON_TYPE_RIGHT, bj_KEYEVENTTYPE_DEPRESS, true, null) /* 우클릭 누르면 작동 */
    call TriggerAddAction(t, function RightClick)
    
    set FrameMouseXOffset = JNGetModuleHandle("Game.dll")+0xCB1AF8
    set FrameMouseYOffset = JNGetModuleHandle("Game.dll")+0xCB1AFC
    
    set t = null
  endfunction
endscope//===========================================================================
// Trigger: Info
//===========================================================================
scope Info initializer Init
  
    private function Info takes integer no, integer parent, real size, integer point, integer point2, real x, real y, string text returns integer
      set Frame_Info[no] = DzCreateFrameByTagName("TEXT", "", parent, "", no)
      if ( size != 0. ) then
        call DzFrameSetFont(Frame_Info[no], "Fonts\\DFHeiMd.ttf", size, 1)
      endif
      call DzFrameSetPoint(Frame_Info[no], point, parent, point2, x, y)
      call DzFrameSetText(Frame_Info[no], text)
      return no+1
    endfunction
    /*private function InfoCase takes integer no, integer parent1, integer parent2, integer parent3 returns integer
      set Frame_Info[no] = DzCreateFrameByTagName("BACKDROP", "", Frame_Info[0], "", 0)
      call DzFrameSetPoint(Frame_Info[no], JN_FRAMEPOINT_TOPLEFT, parent1, JN_FRAMEPOINT_TOPLEFT, 0., 0.)
      call DzFrameSetPoint(Frame_Info[no], JN_FRAMEPOINT_BOTTOMRIGHT, parent2, JN_FRAMEPOINT_BOTTOMRIGHT, 0., -0.0007)
      if ( parent3 != 0 ) then
        call DzFrameSetPoint(Frame_Info[no], JN_FRAMEPOINT_TOPRIGHT, parent3, JN_FRAMEPOINT_TOPRIGHT, 0., 0.)
      endif
      call DzFrameSetTexture(Frame_Info[no], "Select_SlotBack50.blp", 0)
      return no+1
    endfunction
    */
    private function Info2 takes integer no, integer parent, integer point, integer point2, real x, real y, string text, real size, string texture, real xx, real yy returns integer
      set Frame_Info[no] = DzCreateFrameByTagName("BUTTON", "", parent, "ScoreScreenTabButtonTemplate", 0)
      call DzFrameSetPoint(Frame_Info[no], point, parent, point2, x, y)
      call DzFrameSetSize(Frame_Info[no], xx, yy)
      
      set no = no + 1
      set Frame_Info[no] = DzCreateFrameByTagName("BACKDROP", "", Frame_Info[no-1], "", 0)
      call DzFrameSetAllPoints(Frame_Info[no], Frame_Info[no-1])
      call DzFrameSetTexture(Frame_Info[no], texture, 0)
      if ( text != "" ) then
        set no = no + 1
        set Frame_Info[no] = DzCreateFrameByTagName("TEXT", "", Frame_Info[no-1], "", no)
        if ( size != 0. ) then
          call DzFrameSetFont(Frame_Info[no], "Fonts\\DFHeiMd.ttf", size, 1)
        endif
        call DzFrameSetPoint(Frame_Info[no], JN_FRAMEPOINT_CENTER, Frame_Info[no-1], JN_FRAMEPOINT_CENTER, 0., 0.)
        call DzFrameSetText(Frame_Info[no], text)
      endif
      return no+1
    endfunction
    private function Info3 takes integer no, real size, integer point, integer point2, real x, real y, string text returns nothing
      set Frame_InfoValue[no] = DzCreateFrameByTagName("TEXT", "", Frame_Info[no], "", no)
      if ( size != 0. ) then
        call DzFrameSetFont(Frame_InfoValue[no], "Fonts\\DFHeiMd.ttf", size, 1)
      endif
      call DzFrameSetPoint(Frame_InfoValue[no], point, Frame_Info[no], point2, x, y)
      call DzFrameSetText(Frame_InfoValue[no], text)
    endfunction
  private function CreateInfo takes nothing returns nothing
   local integer i = 1
    set Frame_Info[0]=DzCreateFrameByTagName("BACKDROP", "", DzGetGameUI(), "", 0)
    call DzFrameSetSize(Frame_Info[0], .12, .15)
    call DzFrameSetAbsolutePoint(Frame_Info[0], JN_FRAMEPOINT_TOPLEFT, .1, .5)
    call DzFrameSetTexture(Frame_Info[0], "Select_SlotBack75.blp", 0)
    call DzFrameSetAlpha(Frame_Info[0], 192)
    
    set i = Info2(i, Frame_Info[0], JN_FRAMEPOINT_TOPRIGHT, JN_FRAMEPOINT_TOPRIGHT, -Equip_EDGEGAP*2, -Equip_EDGEGAP*2, "", 0., "Info\\ButtonX.blp",  .01, .01)

    set i = Info(i, Frame_Info[0], .012, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.0125, "이름: ")
    set i = Info(i, Frame_Info[0], .012, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.025, "플탐: ")
    set i = Info(i, Frame_Info[0], .012, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.0375, "직업: ")
    set i = Info(i, Frame_Info[0], .012, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.05, "단계: ")
    set i = Info(i, Frame_Info[0], .012, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.0625, "공격력: ")
    set i = Info(i, Frame_Info[0], .012, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.075, "ＨＰ: ")
    set i = Info(i, Frame_Info[0], .012, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.0875, "ＭＰ: ")
    call Info3(i-7, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., GetPlayerName(GetLocalPlayer()))
    call Info3(i-6, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., I2S(GetRandomInt(0,2))+"d "+I2S(GetRandomInt(0,23)) +"h "+I2S(GetRandomInt(0,59)))
    call Info3(i-5, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., "검사")
    call Info3(i-4, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., "삼류")
    call Info3(i-3, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., I2S(GetRandomInt(100,999))+"~"+I2S(GetRandomInt(1000,9999)))
    call Info3(i-2, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., I2S(GetRandomInt(1000,2000))+"/"+I2S(GetRandomInt(2000,9999)))
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., I2S(GetRandomInt(1000,2000))+"/"+I2S(GetRandomInt(2000,9999)))
    
    set i = Info(i, Frame_Info[0], .012, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.1125, "파워: ")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., "("+I2S(GetRandomInt(100,999))+"+"+I2S(GetRandomInt(10,99))+")")
    set i = Info2(i, Frame_InfoValue[i-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, Equip_EDGEGAP, 0., "", 0., "ReplaceableTextures\\PassiveButtons\\PASBTNStatUp.blp", .011, .011)
    set i = Info2(i, Frame_Info[i-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, Equip_EDGEGAP, 0., "", 0., "Info\\StatUp3-1.blp", .011, .011)
    
    set i = Info(i, Frame_Info[0], .012, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.125, "집중: ")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., "("+I2S(GetRandomInt(100,999))+"+"+I2S(GetRandomInt(10,99))+")")
    set i = Info2(i, Frame_InfoValue[i-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, Equip_EDGEGAP, 0., "", 0., "ReplaceableTextures\\PassiveButtons\\PASBTNStatUp.blp", .011, .011)
    set i = Info2(i, Frame_Info[i-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, Equip_EDGEGAP, 0., "", 0., "Info\\StatUp3-1.blp", .011, .011)

    set i = Info(i, Frame_Info[0], .012, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.1375, "활력: ")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, 0., 0., "("+I2S(GetRandomInt(100,999))+"+"+I2S(GetRandomInt(10,99))+")")
    set i = Info2(i, Frame_InfoValue[i-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, Equip_EDGEGAP, 0., "", 0., "ReplaceableTextures\\PassiveButtons\\PASBTNStatUp.blp", .011, .011)
    set i = Info2(i, Frame_Info[i-1], JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_RIGHT, Equip_EDGEGAP, 0., "", 0., "Info\\StatUp3-2.blp", .011, .011)
    
    set i = Info2(i, Frame_Info[0], JN_FRAMEPOINT_TOPRIGHT, JN_FRAMEPOINT_BOTTOMRIGHT, 0., -Equip_EDGEGAP, "상세스텟", .011, "Select_SlotBack75.blp", .045, .015)
    
    set Frame_Info[i]=DzCreateFrameByTagName("BACKDROP", "", Frame_Info[0], "", 0)
    call DzFrameSetSize(Frame_Info[i], .12, .285)
    call DzFrameSetPoint(Frame_Info[i], JN_FRAMEPOINT_TOPRIGHT, Frame_Info[i-2], JN_FRAMEPOINT_BOTTOMRIGHT, 0., -Equip_EDGEGAP)
    call DzFrameSetTexture(Frame_Info[i], "Equip_Back.blp", 0)
    set SkillTree_Info[0] = Frame_Info[i]
    set i = i + 1
    
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_TOPLEFT, Equip_EDGEGAP2, -.005, "방어(감소율)")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "추가감소/회피")
    call Info3(i-2, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(1000,9999))+" ("+R2SW(GetRandomReal(10.,99.),2,1)+"%)")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+" / "+I2S(GetRandomInt(10,99))+"%")
    
    
    call SkillTree_MakeLineY(1, .055, -.01, .265, 3)
    call SkillTree_MakeLineX(2, .045, -.0275, .02, 3)
    call SkillTree_MakeLineX(3, .035, -.0525, .04, 3)
    call SkillTree_MakeLineX(4, .045, -.0770, .02, 3)
    call SkillTree_MakeLineX(5, .035, -.1025, .04, 3)
    call SkillTree_MakeLineX(6, .045, -.1380, .02, 3)
    call SkillTree_MakeLineX(7, .035, -.1750, .04, 3)
    call SkillTree_MakeLineX(8, .035, -.2125, .04, 3)
    call SkillTree_MakeLineX(9, .025, -.2400, .06, 3)
    //set i = InfoCase(i, Frame_Info[i-2], Frame_InfoValue[i-1], Frame_InfoValue[i-2])
    
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "마방(감소율)")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "추가감소/면역")
    call Info3(i-2, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, -Equip_EDGEGAP, I2S(GetRandomInt(1000,9999))+" ("+R2SW(GetRandomReal(10.,99.),2,1)+"%)")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, -Equip_EDGEGAP, I2S(GetRandomInt(100,999))+" / "+I2S(GetRandomInt(10,99))+"%")
    //set i = InfoCase(i, Frame_Info[i-2], Frame_InfoValue[i-1], Frame_InfoValue[i-2])
    
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -.005, "공속")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "이속")
    call Info3(i-2, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+"% ("+R2SW(GetRandomReal(0.,9.),1,1)+"/s)")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+"% ("+R2SW(GetRandomReal(0.,9.),1,1)+"/s)")
    //set i = InfoCase(i, Frame_Info[i-2], Frame_InfoValue[i-1], 0)
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "체젠")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "마젠")
    call Info3(i-2, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+" +"+R2SW(GetRandomReal(0.,9.),1,1)+"%")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+" +"+R2SW(GetRandomReal(0.,9.),1,1)+"%")
    //set i = InfoCase(i, Frame_Info[i-2], Frame_InfoValue[i-1], 0)
    
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -.005, "스킬뎀")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "스킬쿨")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "전체 능력")
    call Info3(i-3, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+"%")
    call Info3(i-2, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., "-"+I2S(GetRandomInt(10,99))+"%")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., "+"+I2S(GetRandomInt(1,9))+"레벨")
    //set i = InfoCase(i, Frame_Info[i-3], Frame_InfoValue[i-1], 0)
    
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "마법뎀")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "마법쿨")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "캐스팅")
    call Info3(i-3, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+"%")
    call Info3(i-2, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., "-"+I2S(GetRandomInt(10,99))+"%")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+"%")
    //set i = InfoCase(i, Frame_Info[i-3], Frame_InfoValue[i-1], 0)
    //call DzFrameSetPoint(Frame_Info[i], JN_FRAMEPOINT_RIGHT, Frame_InfoValue[i-2], JN_FRAMEPOINT_RIGHT, 0., 0.)
    
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -.005, "치명타")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "흡혈")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "내성")
    call Info3(i-3, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(10,99))+"% (x"+R2SW(GetRandomReal(1.,3.),1,2)+")")
    call Info3(i-2, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+" +"+R2SW(GetRandomReal(1.,3.),2,1)+"%")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(10,99))+"%")
    //set i = InfoCase(i, Frame_Info[i-3], Frame_InfoValue[i-1], Frame_InfoValue[i-3])
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -.005, "골드/드랍")
    set i = Info(i, Frame_Info[i-1], .010, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "발굴/경험치")
    call Info3(i-2, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+"% / "+I2S(GetRandomInt(100,999))+"%")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., I2S(GetRandomInt(100,999))+"% / "+I2S(GetRandomInt(100,999))+"%")
    //set i = InfoCase(i, Frame_Info[i-2], Frame_InfoValue[i-1], 0)
    
    set i = Info(i, Frame_Info[i-1], .012, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -.005, "특성1")
    set i = Info(i, Frame_Info[i-1], .012, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "특성2")
    set i = Info(i, Frame_Info[i-1], .012, JN_FRAMEPOINT_TOPLEFT, JN_FRAMEPOINT_BOTTOMLEFT, 0., -Equip_EDGEGAP, "특성3")
    call Info3(i-3, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., "근력Lv00 (공격력)")
    call Info3(i-2, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., "없음 (Lv 200)")
    call Info3(i-1, .010, JN_FRAMEPOINT_LEFT, JN_FRAMEPOINT_LEFT, .055, 0., "없음 (Lv 300)")
    //set i = InfoCase(i, Frame_Info[i-3], Frame_InfoValue[i-1], Frame_InfoValue[i-3])
    call DzFrameShow(Frame_Info[0], false)
  endfunction
  private function Init takes nothing returns nothing
    call CreateInfo()
  endfunction
endscope//===========================================================================
// Trigger: MiniInfo
//===========================================================================
scope MiniInfo initializer Init
  globals
    private integer array Frame_MiniInfoBackdrop
    private integer array Frame_MiniInfo
  endglobals
    private function MiniInfo takes integer no, string text, string IconTexture, real size returns integer
      set Frame_MiniInfo[no] = DzCreateFrameByTagName("BACKDROP", "", Frame_MiniInfoBackdrop[1], "", 0)
      call DzFrameSetAbsolutePoint(Frame_MiniInfo[no], JN_FRAMEPOINT_TOPLEFT, 0.68, 0.145-(no*0.015))
      call DzFrameSetSize(Frame_MiniInfo[no], 0.013, 0.013)
      call DzFrameSetTexture(Frame_MiniInfo[no], IconTexture, 0)
      
      set Frame_MiniInfoText[no] = DzCreateFrameByTagName("TEXT", "", Frame_MiniInfoBackdrop[1], "", no)
      call DzFrameSetFont(Frame_MiniInfoText[no], "Fonts\\DFHeiMd.ttf", size, 1)
      call DzFrameSetPoint(Frame_MiniInfoText[no], JN_FRAMEPOINT_LEFT, Frame_MiniInfo[no], JN_FRAMEPOINT_RIGHT, .002, 0.)
      call DzFrameSetText(Frame_MiniInfoText[no], text)
      return no+1
    endfunction
    private function MiniInfo2 takes integer no, string text returns nothing
      set Frame_MiniInfoText2[no] = DzCreateFrameByTagName("TEXT", "", Frame_MiniInfoBackdrop[0], "", no)
      call DzFrameSetFont(Frame_MiniInfoText2[no], "Fonts\\DFHeiMd.ttf", 0.011, 1)
      call DzFrameSetPoint(Frame_MiniInfoText2[no], JN_FRAMEPOINT_LEFT, Frame_MiniInfo[no], JN_FRAMEPOINT_LEFT, .06, 0.)
      call DzFrameSetText(Frame_MiniInfoText2[no], text)
    endfunction
    private function MiniInfo3 takes integer no, integer no2, string text, string IconTexture returns integer
      set Frame_MiniInfo[no] = DzCreateFrameByTagName("BACKDROP", "", Frame_MiniInfoBackdrop[1], "", 0)
      call DzFrameSetAbsolutePoint(Frame_MiniInfo[no], JN_FRAMEPOINT_TOPLEFT, 0.68+0.04*no2, 0.055)
      call DzFrameSetSize(Frame_MiniInfo[no], 0.013, 0.013)
      call DzFrameSetTexture(Frame_MiniInfo[no], IconTexture, 0)
      
      set Frame_MiniInfoText[no] = DzCreateFrameByTagName("TEXT", "", Frame_MiniInfoBackdrop[1], "", no)
      call DzFrameSetPoint(Frame_MiniInfoText[no], JN_FRAMEPOINT_LEFT, Frame_MiniInfo[no], JN_FRAMEPOINT_RIGHT, 0., 0.)
      call DzFrameSetFont(Frame_MiniInfoText[no], "Fonts\\DFHeiMd.ttf", 0.010, 1)
      call DzFrameSetText(Frame_MiniInfoText[no], text)
      
      return no+1
    endfunction
  private function CreateMiniInfo takes nothing returns nothing
   local integer i = 0
    //미니정보창 배경
    set Frame_MiniInfoBackdrop[0]=DzCreateFrameByTagName("BACKDROP", "", Frame_Sub, "QuestButtonBaseTemplate", 0)
    call DzFrameSetAbsolutePoint(Frame_MiniInfoBackdrop[0], JN_FRAMEPOINT_BOTTOMLEFT, 0.67, 0.03)
    call DzFrameSetSize(Frame_MiniInfoBackdrop[0], 0.13, 0.12)
    call DzFrameSetAlpha(Frame_MiniInfoBackdrop[0], 128)
    
    
    set Frame_MiniInfoBackdrop[1]=DzCreateFrameByTagName("BACKDROP", "", Frame_MiniInfoBackdrop[0], "QuestButtonBaseTemplate", 0)
    call DzFrameSetPoint(Frame_MiniInfoBackdrop[1], JN_FRAMEPOINT_CENTER, Frame_MiniInfoBackdrop[0], JN_FRAMEPOINT_TOP, 0., -0.005)
    call DzFrameSetSize(Frame_MiniInfoBackdrop[1], 0.07, 0.03)
    call DzFrameSetAlpha(Frame_MiniInfoBackdrop[0], 196)
    
    
    set Frame_MiniInfo[0]=DzCreateFrameByTagName("TEXT", "", Frame_MiniInfoBackdrop[1], "", 0)
    call DzFrameSetPoint(Frame_MiniInfo[0], JN_FRAMEPOINT_CENTER, Frame_MiniInfoBackdrop[1] , JN_FRAMEPOINT_CENTER, 0., 0.)
    call DzFrameSetText(Frame_MiniInfo[0], "몬스터 이름")
    
    //call MiniInfo
    set i = i + 1
    set i = MiniInfo(i, "체력", "ReplaceableTextures\\PassiveButtons\\PASBTNStatUp.blp", .013)
    call MiniInfo2(i-1, I2S(GetRandomInt(1000,2000))+"/"+I2S(GetRandomInt(2000,9999)))
    
    set i = MiniInfo(i, "데미지", "ReplaceableTextures\\PassiveButtons\\PASBTNStatUp.blp", .013)
    call MiniInfo2(i-1, I2S(GetRandomInt(1000,9999))+" x"+R2SW(GetRandomReal(.5,5.),1,2))
    
    set i = MiniInfo(i, "방어/마방", "ReplaceableTextures\\PassiveButtons\\PASBTNStatUp.blp", .013)
    call MiniInfo2(i-1, I2S(GetRandomInt(100,999))+" / "+I2S(GetRandomInt(100,999)))
    
    set i = MiniInfo(i, "스킬/마법뎀", "ReplaceableTextures\\PassiveButtons\\PASBTNStatUp.blp", .011)
    call MiniInfo2(i-1, I2S(GetRandomInt(100,999))+"% / "+I2S(GetRandomInt(100,999)) + "%")
    
    set i = MiniInfo(i, "치명타", "ReplaceableTextures\\PassiveButtons\\PASBTNStatUp.blp", .013)
    call MiniInfo2(i-1, I2S(GetRandomInt(10,99))+"% (x"+R2SW(GetRandomReal(1.,3.),1,2)+")")
    
    set i = MiniInfo3(i, 0, "체력많음", "ReplaceableTextures\\CommandButtons\\BTNSkillz.tga")
    set i = MiniInfo3(i, 1, "강한공격", "ReplaceableTextures\\CommandButtons\\BTNGauntletsOfOgrePower.blp")
    set i = MiniInfo3(i, 2, "마법면역", "ReplaceableTextures\\PassiveButtons\\PASBTNGenericSpellImmunity.blp")
    call DzFrameShow(Frame_Sub, false)
  endfunction
  private function Init takes nothing returns nothing
    call CreateMiniInfo()
  endfunction
endscope//===========================================================================
// Trigger: JN Object Api
//===========================================================================
native JNObjectCharacterServerConnectCheck takes nothing returns boolean

library JNObjectGui initializer init /* requires JNServer, JNString, DzAPISync */

  globals
    constant string JN_MAPID = "LoD"
    constant string JN_SECRETKEY = "9d316ce7-eb22-4637-8dd0-9d869aabfb7a"
    player GetServerPlayer
    string GetServerCode = null
    integer JN_LoaderNow = 0
  endglobals

  // JNObjectLoadSave
  function JNObjectCharacterInitG takes player p, string character returns nothing
    if GetLocalPlayer() == p then
      if udg_hero[GetPlayerId(p)+1] == null then
        call JNObjectCharacterResetCharacter(Name[GetPlayerId(p)+1])
      endif
      call JNObjectCharacterInit(JN_MAPID, Name[GetPlayerId(p)+1], JN_SECRETKEY, character)
    endif
  endfunction

  function JNObjectCharacterCreateSync takes nothing returns nothing
    set GetServerPlayer = DzGetTriggerSyncPlayer()
    call TriggerExecute(gg_trg_Load_End)
  endfunction

  // JNObjectCharacterLoad
  function JNObjectCharacterGetIntegerSync takes nothing returns nothing
    local string str = DzGetTriggerSyncData()
    call SaveInteger(hash, GetPlayerId(DzGetTriggerSyncPlayer())+1, StringHash(JNStringSplit(str, "!", 0)), S2I(JNStringSplit(str, "!", 1)))
    debug call BJDebugMsg("load/save i - " + I2S(GetPlayerId(DzGetTriggerSyncPlayer())+1) + "/" + JNStringSplit(str, "!", 0) + "/" + JNStringSplit(str, "!", 1))
  endfunction

  function JNObjectCharacterGetStringSync takes nothing returns nothing
    local string str = DzGetTriggerSyncData()
    call SaveStr(hash, GetPlayerId(DzGetTriggerSyncPlayer())+1, StringHash(JNStringSplit(str, "!", 0)), JNStringSplit(str, "!", 1))
    debug call BJDebugMsg("load/save s - " + I2S(GetPlayerId(DzGetTriggerSyncPlayer())+1) + "/" + JNStringSplit(str, "!", 0) + "/" + JNStringSplit(str, "!", 1))
  endfunction

  private function init takes nothing returns nothing
    local trigger trig = CreateTrigger()
    local integer i = 0

    call DzTriggerRegisterSyncData(trig, "JNEndSync", false)
    call TriggerAddAction(trig, function JNObjectCharacterCreateSync)

    set trig = CreateTrigger()
    call DzTriggerRegisterSyncData(trig, "JNIntSync", false)
    call TriggerAddAction(trig, function JNObjectCharacterGetIntegerSync)

    set trig = CreateTrigger()
    call DzTriggerRegisterSyncData(trig, "JNStrSync", false)
    call TriggerAddAction(trig, function JNObjectCharacterGetStringSync)

    loop
      exitwhen i == bj_MAX_PLAYERS
      set Name[i + 1] = GetPlayerName(Player(i))
      set i = i + 1
    endloop
    
    call JNUse()
    
    set trig = null
  endfunction

endlibrary//===========================================================================
// Trigger: Time
//===========================================================================
scope Time initializer Init
  globals
    public integer StopWatch = 0
    public integer array last
    public integer array Original
  endglobals
  public function Get takes nothing returns integer
    return JNStopwatchElapsedHour(StopWatch)*60+JNStopwatchElapsedMinute(StopWatch)
  endfunction
  public function FirstLoad takes player p, string Data returns nothing
    local integer loopA = 1
    if ( Data != "" and Data != null ) then
      if ( GetLocalPlayer() == p ) then
        loop
          set Original[loopA] = S2I(JNStringSplit(JNStringSplit(Data, I2S(loopA)+"_", 1), "'", 0))
          exitwhen loopA >= Save_MAX_CHARACTER
          set loopA = loopA + 1
        endloop
        set Original[0] = Original[1] + Original[2] + Original[3] + Original[4] + Original[5] + Original[6]
      endif
    endif
  endfunction
  public function Load takes player p, integer Slot returns nothing
    if ( GetLocalPlayer() == p ) then
      call Msg(p, "총 시간: " + I2S(Original[0]) + "-> " + I2S(Original[0]   +Get()-last[Slot]))
      call Msg(p, I2S(Slot)+"번 시간: " + I2S(Original[Slot]) + "-> " + I2S(Original[Slot]   +Get()-last[Slot]))
      set Original[0] =    Original[0]   +Get()-last[Slot]
      set Original[Slot] = Original[Slot]+Get()-last[Slot]
      set last[Slot] = Get()
    endif
  endfunction
  
  public function Save takes player p, integer Slot returns string
    local string Data = LoadStr(hash, GetPlayerId(p)+1, StringHash("Data"))
    local integer P = GetPlayerId(p)+1
    call Load(p, Slot)
    if ( Data == null ) or ( Data == "" ) then
      set Data = Select_DEFAULT_DATA
    endif
    /*포맷: LastSlot ' 플탐All */
    set Data = I2S(Slot)+"'"+I2S(Original[0])  +  JNStringSub(Data, JNStringPos(Data, "/"), JNStringLength(Data))
    /*포맷: Slot _ 플탐 ' 레벨 . 경험치 */
    return JNStringReplace(Data, JNStringSplit(Data, "/", Slot), I2S(Slot)+"_"+I2S(Original[Slot])+"'"+I2S(GetHeroLevel(udg_hero[P]))+"."+I2S(GetHeroXP(udg_hero[P])))
  endfunction
  private function Init takes nothing returns nothing
    set StopWatch = JNStopwatchCreate()
    call JNStopwatchStart(StopWatch)
  endfunction

endscope//===========================================================================
// Trigger: Save
//
// scope in scope가 가능하다
//===========================================================================
native JNObjectCharacterRemoveField takes string UserId, string Field returns nothing
scope Save initializer Init
  globals
    private string array InvenData
    private string array EquipData
    
    public constant integer MAX_INVENTORY = 49
    public constant integer MAX_EQUIP = 16
    public constant integer MAX_CHARACTER = 6
  endglobals
  
  private function GetEquipData takes integer P returns nothing
   local integer loopA = 1
   local item t = null
    loop
      set t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(-loopA)))
      if ( t != null ) then
        set EquipData[loopA] = I2S(GetItemTypeId(t))+"/"+LoadStr(hash, GetHandleId(t), StringHash("ItemAddData"))
      else
        set EquipData[loopA] = ""
      endif
      exitwhen loopA >= MAX_EQUIP
      set loopA = loopA + 1
    endloop
   set t = null
  endfunction
  private function GetInvenData takes integer P returns nothing
   local integer loopA = 1
   local item t = null
    loop
      set t = LoadItemHandle(hash, P, StringHash("ItemData"+I2S(loopA)))
      if ( t != null ) then
        set InvenData[loopA] = I2S(GetItemTypeId(t))+"/"+LoadStr(hash, GetHandleId(t), StringHash("ItemAddData"))
      else
        set InvenData[loopA] = ""
      endif
      exitwhen loopA >= MAX_INVENTORY
      set loopA = loopA + 1
    endloop
   set t = null
  endfunction
  private function msgCheck takes player p, string s returns nothing
    if ( s != "저장이 성공적으로 되었습니다." ) then
      call DisplayTimedTextToPlayer(p, 0., 0., 8, "데이터 저장 |cffff0000실패: |r" + s)
    endif
  endfunction
  
  function EquipItemValue takes string name, integer P, integer Slot returns nothing
    local integer loopA = 1
    local integer loopB = 1
    local string s = ""
    
    loop
      set loopA = 1
      loop
        if ( loopB == Slot ) then
          set s = EquipData[loopA]
        else
          set s = LoadStr(hash, P, StringHash(I2S(loopB)+"e"+I2S(loopA)))
        endif
        if ( IsEmpty(s) ) then
          call JNObjectCharacterRemoveField(name, I2S(loopB)+"e"+I2S(loopA))
        else
          call JNObjectCharacterSetString(name, I2S(loopB)+"e"+I2S(loopA), s)
        endif
        
        exitwhen loopA >= MAX_EQUIP
        set loopA = loopA + 1
      endloop
      exitwhen loopB >= MAX_CHARACTER
      set loopB = loopB + 1
    endloop
  endfunction
  
  
  public function Saving takes player p, integer Slot returns nothing
   local integer P = GetPlayerId(p)+1
   local unit u = udg_hero[P]
   local boolean SpecialName = GetHeroProperNameIndex(u) > 0
   local integer loopA = 1
    call GetEquipData(P)
    call GetInvenData(P)    
    if ( GetLocalPlayer() == p ) then
      //if ( first ) then
        //call JNObjectCharacterResetCharacter(name)
//        set first = false
        //call BJDebugMsg("Reset")
      //endif
      call JNObjectCharacterInit(JN_MAPID, Name[P], JN_SECRETKEY, "Save")
      
      call JNObjectCharacterSetString(Name[P], "Data", Time_Save(p, Slot))
      call BJDebugMsg("Saveing...Data: "+JNObjectCharacterGetString(Name[P], "Data"))
      if ( SpecialName ) then
        call JNObjectCharacterSetString(Name[P], I2S(loopA)+"_Name", GetHeroProperName(u))
      endif
      
      call EquipItemValue(Name[P], P, Slot)
      set loopA = 1
      loop
        if ( InvenData[loopA] != "" ) then
          call JNObjectCharacterSetString(Name[P], "i"+I2S(loopA), InvenData[loopA])
        else
          call JNObjectCharacterRemoveField(Name[P], "i"+I2S(loopA))
        endif
        exitwhen loopA >= MAX_INVENTORY
        set loopA = loopA + 1
      endloop
      call msgCheck(p, JNObjectCharacterSave(JN_MAPID, Name[P], JN_SECRETKEY, "Save"))
    endif
    set u = null
  endfunction
  private function SaveAction takes nothing returns nothing
    call Saving(GetTriggerPlayer(), Select_NowSelect[GetPlayerId(GetTriggerPlayer())+1])
  endfunction
  private function Init takes nothing returns nothing
   local integer i = 0
   local trigger trg = CreateTrigger()
    loop
      call TriggerRegisterPlayerChatEvent(trg, Player(i), "-save", false)
      exitwhen i >= bj_MAX_PLAYERS-1
      set i = i + 1
    endloop
    call TriggerAddAction(trg, function SaveAction)
   set trg = null
  endfunction
endscope//===========================================================================
// Trigger: Load5 Auto
//===========================================================================
scope LoadAuto initializer Init
  globals
    string array Name
    private integer int = 0
  endglobals
  private function msgCheck2 takes player p, integer i returns boolean
    if ( i == 0 ) then
      return true
    elseif ( i == -1 ) then
      call DisplayTimedTextToPlayer(p, 0., 0., 4, "캐릭터 로드 실패: 인증 실패")
    elseif ( i == -2 ) then
      call DisplayTimedTextToPlayer(p, 0., 0., 4, "캐릭터 파일 로드 실패: 현재 사용중(동시로드 비허용 맵)")
    elseif ( i == -3 ) then
      call DisplayTimedTextToPlayer(p, 0., 0., 4, "캐릭터 파일 로드 실패: 이미 로드됨")
      return true
    endif
   return false
  endfunction
  private function RemoveItemData takes item t returns boolean
    if ( t != null ) then
      //call RemoveSavedString(hash, GetHandleId(t), StringHash("ItemAddData"))
      call FlushChildHashtable(hash, GetHandleId(t))
      call RemoveItem(t)
      return true
    endif
    return false
  endfunction
  function ResetEquip takes integer P returns nothing
   local integer i = Save_MAX_EQUIP
    /* 장비 비우기 16~1 */
    loop
      if ( RemoveItemData(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(-i)))) ) then
        if ( GetLocalPlayer() == Player(P-1) ) then
          call DzFrameSetTexture(Equip_EquipBackdrop[-i], Equip_I2BE(-i), 0)
        endif
      endif
      exitwhen i <= 1
      set i = i - 1
    endloop
  endfunction
  function ResetInven takes integer P returns nothing
   local integer i = Save_MAX_INVENTORY
   /* 인벤 비우기 1~49 */
    call SaveInteger(hash, P, StringHash("ItemData0"), 1)
    loop
      if ( RemoveItemData(LoadItemHandle(hash, P, StringHash("ItemData"+I2S(i)))) ) then
        if ( GetLocalPlayer() == Player(P-1) ) then
          call DzFrameSetTexture(Frame_InvenButtonsBackDrop[i], "Inven_Empty.blp", 0)
        endif
      endif
      exitwhen i <= 1
      set i = i - 1
    endloop
  endfunction
  function ResetLoad takes integer P returns nothing
    call RemoveUnit(udg_hero[P])
    
    call ResetEquip(P)
    call ResetInven(P)
  endfunction
  function Loading takes player p returns nothing
   local integer P = GetPlayerId(p)+1
   local integer loopA = 1
   local integer loopB = 1
   local string s = ""
    //call Msg(p, "Loading..." + I2S(P))
    call ResetLoad(P)
    if ( GetLocalPlayer() == p ) then 
      if ( msgCheck2(p, JNObjectCharacterInit(JN_MAPID, Name[P], JN_SECRETKEY, "Save")) ) then
        set s = JNObjectCharacterGetString(Name[P], "Data")
        if ( IsEmpty(s) ) then
          //call Msg(p, I2S(P) + ", 새로 시작")
          call DzSyncData("SaveData", "")
        else
          call DzSyncData("SaveData", s)
          
          call Time_FirstLoad(p, s)
          
          /* 장비 6슬롯 x 16개 */
          loop
            loop
              set s = JNObjectCharacterGetString(Name[P], I2S(loopB)+"e"+I2S(loopA))
              if ( s != "" ) then
                call DzSyncData("JNStrSync", I2S(loopB)+"e"+I2S(loopA)+"!"+s)
              endif
            
              exitwhen loopA >= Save_MAX_EQUIP
              set loopA = loopA + 1
            endloop
            
            set s = JNObjectCharacterGetString(Name[P], I2S(loopB)+"Name[P]")
            if ( s != "" ) then
              call DzSyncData("JNStrSync", I2S(loopB)+"_Name[P]"+"!"+s)
            endif
            exitwhen loopB >= Save_MAX_CHARACTER
            set loopB = loopB + 1
          endloop
          set loopA = 1 /* 인벤토리 1~49 */
          loop
            set s = JNObjectCharacterGetString(Name[P], "i"+I2S(loopA))
            if ( s != "" ) then
              call DzSyncData("JNStrSync", "i"+I2S(loopA)+"!"+s)
            endif
            exitwhen loopA >= Save_MAX_INVENTORY
            set loopA = loopA + 1
          endloop
        endif
      endif
      call DzSyncData("JNEndSync", "_")
    endif
  endfunction
  private function DataSync takes nothing returns nothing
    call Select_GetSaveData(DzGetTriggerSyncPlayer(), DzGetTriggerSyncData())
  endfunction
  private function AfterLoad takes nothing returns nothing
    if ( udg_hero[GetPlayerId(GetTriggerPlayer())+1] != null ) then
        call Msg(GetTriggerPlayer(), "이미 선택 혹은 로드하였습니다.")
      else
        call Loading(GetTriggerPlayer())
      endif
  endfunction
  private function LoadingAll takes nothing returns nothing
    if ( GetPlayerSlotState(Player(int)) == PLAYER_SLOT_STATE_PLAYING ) and ( GetPlayerController(Player(int)) == MAP_CONTROL_USER ) then
      call Loading(Player(int))
    elseif ( int >= bj_MAX_PLAYERS-1 ) then
      call DestroyTimer(GetExpiredTimer())
    endif
    set int = int + 1
  endfunction
  private function Init takes nothing returns nothing
    local integer loopA = bj_MAX_PLAYERS-1
    local trigger trig = CreateTrigger()
    call TimerStart(CreateTimer(), .15, true, function LoadingAll)
    loop
      if ( GetPlayerSlotState(Player(loopA)) == PLAYER_SLOT_STATE_PLAYING ) and ( GetPlayerController(Player(loopA)) == MAP_CONTROL_USER ) then
        call TriggerRegisterPlayerChatEvent(trig, Player(loopA), "-load", false)
        set Name[loopA+1] = GetPlayerName(Player(loopA))
      endif
      exitwhen loopA == 0
      set loopA = loopA - 1
    endloop
    call TriggerAddAction(trig, function AfterLoad)
    
    set trig = CreateTrigger()
    call DzTriggerRegisterSyncData(trig, "SaveData", false)
    call TriggerAddAction(trig, function DataSync)
    set trig = null
  endfunction
endscope//===========================================================================
// Trigger: Load End
//
// "0'0/1_0'0/2_0'0/3_0'0/4_0'0/5_0'0/6_0'0/"
//===========================================================================
globals
  string array InvenData2
  string array EquipData2
endglobals
function SetEquipData takes integer P, integer Slot returns nothing
  local integer loopA = 1
  loop
    set EquipData2[loopA] = LoadStringBJ(StringHash(I2S(Slot)+"e"+I2S(loopA)), P, hash)
    exitwhen loopA >= Save_MAX_EQUIP
    set loopA = loopA + 1
  endloop
endfunction
function SetInvenData takes integer P returns nothing
  local integer loopA = 1
  loop
    set InvenData2[loopA] = LoadStringBJ(StringHash("i"+I2S(loopA)), P, hash)
    exitwhen loopA >= Save_MAX_INVENTORY
    set loopA = loopA + 1
  endloop
endfunction

constant function IsNotEmpty takes string s returns boolean
  return ( s != "" ) and ( s != null )
endfunction
function Trig_JN_Object_Load2_Actions takes nothing returns nothing
  local integer loopA = 0
  local string Data = ""
  local string HouseName = ""
  if ( JN_LoaderNow == 0 ) then
    set JN_LoaderNow = GetPlayerId(GetServerPlayer)+1
    set Data = JNStringSplit(LoadStr(hash, JN_LoaderNow, StringHash("Data")),"/",Select_NowSelect[JN_LoaderNow])
    if ( IsNotEmpty(Data) ) then
      if ( Select_NowSelect[JN_LoaderNow] == 0 ) then
        call DisplayTimedTextToPlayer(GetServerPlayer, 0., 0., 20, "로드 |cff00ff00가능! |r - 로드할 준비가 되었습니다.")
      else
        set loopA = S2I(JNStringSplit(Data,"'",1))
        if ( loopA == 0 ) then /* 신규 시작 */
          call Msg(GetLocalPlayer(), GetPlayerName(GetServerPlayer) + "님이 " + JNStringSplit(Select_Data_Select(Select_NowSelect[JN_LoaderNow]),"'",0) +"을(를) 선택하였습니다.")
          call ResetEquip(JN_LoaderNow)
        else
          call Msg(GetLocalPlayer(), GetPlayerName(GetServerPlayer) + "님이 Lv."+I2S(loopA)+ " " +JNStringSplit(Select_Data_Select(Select_NowSelect[JN_LoaderNow]),"'",0) +"(으)로 모험을 이어갑니다.")
          call SetEquipData(JN_LoaderNow, Select_NowSelect[JN_LoaderNow])
        endif
        
        //집 이름 변경
        set HouseName = GetObjectName('nefm')
        if ( GetLocalPlayer() == GetServerPlayer ) then
          set HouseName = GetPlayerName(GetServerPlayer) + "가문의 " + GetObjectName(Select_I2U(Select_NowSelect[JN_LoaderNow])) + "네 집"
        endif
        call SetObjectName('nefm', HouseName)
        
        set udg_hero[JN_LoaderNow] = CreateUnit(GetServerPlayer, Select_I2U(Select_NowSelect[JN_LoaderNow]), Select_startXX, Select_startYY, bj_UNIT_FACING)
        if ( GetLocalPlayer() == GetServerPlayer ) then
          call DzFrameShow(Frame_Main, true)
        endif
        
        call SetInvenData(JN_LoaderNow)
        
        call SetHeroLevel(udg_hero[JN_LoaderNow], loopA, false)
        call SetHeroXP(   udg_hero[JN_LoaderNow], S2I(JNStringSplit(JNStringSplit(Data,"'",1),".",1)), false)

        
        set Data = LoadStr(hash, JN_LoaderNow, StringHash(I2S(Select_NowSelect[JN_LoaderNow])+"_"+"Name"))
        if ( IsNotEmpty(Data) ) then
          call SetHeroProperNameIndex(udg_hero[JN_LoaderNow], JN_LoaderNow)
          call SetHeroProperName(udg_hero[JN_LoaderNow], Data)
        else
          call SetHeroProperNameIndex(udg_hero[JN_LoaderNow], 0)
        endif
                
        set loopA = 1
        loop
          set Data = EquipData2[loopA]
          if ( IsNotEmpty(Data) ) then
            set bj_lastCreatedItem = CreateItem(S2I(JNStringSplit(Data,"/",0)), 0, 0)
            
            call SaveItemHandle(hash, JN_LoaderNow, StringHash("ItemData"+I2S(-loopA)), bj_lastCreatedItem)
            call SaveStr(hash, GetHandleId(bj_lastCreatedItem), StringHash("ItemAddData"), JNStringSplit(Data,"/",1))
            if ( GetLocalPlayer() == GetServerPlayer ) then
              call DzFrameSetTexture(Equip_EquipBackdrop[loopA], EXGetItemDataString(GetItemTypeId(bj_lastCreatedItem), 1), 0)
            endif
            call Equip_Process(EXGetItemDataString(GetItemTypeId(bj_lastCreatedItem), 3) + "'" + LoadStr(hash, GetHandleId(bj_lastCreatedItem), StringHash("ItemAddData")), JN_LoaderNow)
            call SetItemPosition(bj_lastCreatedItem, XX, YY)
          endif
          exitwhen loopA >= Save_MAX_EQUIP
          set loopA = loopA + 1
        endloop
        set loopA = 1
        loop
          set Data = InvenData2[loopA]
          if ( IsNotEmpty(Data) ) then
            set bj_lastCreatedItem = CreateItem(S2I(JNStringSplit(Data,"/",0)), 0, 0)
            
            call SaveItemHandle(hash, JN_LoaderNow, StringHash("ItemData"+I2S(loopA)), bj_lastCreatedItem)
            call SaveStr(hash, GetHandleId(bj_lastCreatedItem), StringHash("ItemAddData"), JNStringSplit(Data,"/",1))
            if ( GetLocalPlayer() == GetServerPlayer ) then
              call DzFrameSetTexture(Frame_InvenButtonsBackDrop[loopA], EXGetItemDataString(GetItemTypeId(bj_lastCreatedItem), 1), 0)
            endif
            call SetItemPosition(bj_lastCreatedItem, XX, YY)
          endif
          exitwhen loopA >= Save_MAX_INVENTORY
          set loopA = loopA + 1
        endloop
      endif
    else
      call DisplayTimedTextToPlayer(GetServerPlayer, 0., 0., 20, "로드 준비 |cffff0000실패|r: \"-load\"로 리로드가 가능합니다.")
    endif
    set JN_LoaderNow = 0
  else
    call DisplayTimedTextToPlayer(GetServerPlayer, 0., 0., 20, "로드 |cffff0000실패! |r - 현재 "+GetPlayerName(Player(JN_LoaderNow-1))+"|r님이 로드하고 있습니다. 잠시 후 다시 시도하세요.")
  endif
endfunction

//===========================================================================
function InitTrig_Load_End takes nothing returns nothing
    set gg_trg_Load_End = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Load_End, function Trig_JN_Object_Load2_Actions )
endfunction

//===========================================================================
// Trigger: Load3 Repick
//===========================================================================
function Trig_Load3_Repick_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig_Load3_Repick takes nothing returns nothing
 local integer i = bj_MAX_PLAYERS
  set gg_trg_Load3_Repick = CreateTrigger()
  loop
    call TriggerRegisterPlayerChatEvent(gg_trg_Load3_Repick, Player(i), "-re", true)
    exitwhen i <= 0
    set i = i - 1
  endloop
  call TriggerAddAction(gg_trg_Load3_Repick, function Trig_Load3_Repick_Actions)
endfunction//===========================================================================
// Trigger: test 1 add
//===========================================================================
function Trig_test_1_add_Actions takes nothing returns nothing
 local integer P = GetPlayerId(GetTriggerPlayer())+1
 local integer loopA = 1
  loop
    //call SaveInteger(NGUI_hash, P, loopA, PKey_H2I(NGUI_BaseHotKey(loopA)))
    //call SaveInteger(NGUI_hash, PKey_H2I(NGUI_BaseHotKey(loopA)), P, loopA)
    //call BJDebugMsg("기본 등록 - " + I2S(loopA) + "번째 메뉴: " + NGUI_BaseHotKey(loopA))
    call MenuQuickSlot_AddReg(P, loopA, PushKey_H2I(MenuQuickSlot_BaseHotKey(loopA)))
    
    exitwhen loopA >= 23
    set loopA = loopA + 1
  endloop
endfunction

//===========================================================================
function InitTrig_test_1_add takes nothing returns nothing
    set gg_trg_test_1_add = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent(gg_trg_test_1_add, Player(0), "-등록", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_test_1_add, Player(1), "-등록", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_test_1_add, Player(2), "-등록", true)
    call TriggerAddAction( gg_trg_test_1_add, function Trig_test_1_add_Actions )
endfunction

//===========================================================================
// Trigger: test4
//===========================================================================
function Trig_test4_Actions takes nothing returns nothing
 call EndGame(false)
endfunction

//===========================================================================
function InitTrig_test4 takes nothing returns nothing
    set gg_trg_test4 = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_test4, Player(0), "-4", true )
    call TriggerAddAction( gg_trg_test4, function Trig_test4_Actions )
endfunction

//===========================================================================
// Trigger: Reset
//===========================================================================
function Trig_Reset_Actions takes nothing returns nothing
  //set first[GetPlayerId(GetTriggerPlayer())+1] = false
  if ( GetEventPlayerChatString() == "-r1" ) then
    if ( GetLocalPlayer() == GetTriggerPlayer() ) then
      call JNObjectCharacterResetCharacter(Name[GetPlayerId(GetTriggerPlayer())+1])
    endif
  else
    if ( GetLocalPlayer() == GetTriggerPlayer() ) then
      call JNObjectCharacterInit(JN_MAPID, Name[GetPlayerId(GetTriggerPlayer())+1], JN_SECRETKEY, "Save")
    endif
  endif
  call TriggerExecute(gg_trg_Check)
 call BJDebugMsg("Reset")
endfunction

//===========================================================================
function InitTrig_Reset takes nothing returns nothing
    set gg_trg_Reset = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(0), "-r1", true)
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(1), "-r1", true)
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(2), "-r1", true)
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(0), "-r2", true)
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(1), "-r2", true)
    call TriggerRegisterPlayerChatEvent( gg_trg_Reset, Player(2), "-r2", true)
    call TriggerAddAction( gg_trg_Reset, function Trig_Reset_Actions )
endfunction

//===========================================================================
// Trigger: test7
//===========================================================================
function Trig_test7_Actions takes nothing returns nothing
  if ( GetLocalPlayer() == GetTriggerPlayer() ) then
    call Msg(GetTriggerPlayer(), "강제 로드")
    call DzSyncData("SaveData", "1'1/1_1'11.6500/2_0'0/3_0'0/4_0'0/5_0'0/6_0'0/")
    call Time_FirstLoad(GetTriggerPlayer(), "1'1/1_1'11.6500/2_0'0/3_0'0/4_0'0/5_0'0/6_0'0/")
  endif
endfunction

//===========================================================================
function InitTrig_test7 takes nothing returns nothing
    set gg_trg_test7 = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_test7, Player(0), "-7", true )
    call TriggerAddAction( gg_trg_test7, function Trig_test7_Actions )
endfunction//===========================================================================
// Trigger: add
//===========================================================================
function Trig_add_Actions takes nothing returns nothing
  if ( udg_ExitOption == 2 ) then
    set udg_ExitOption = 0
  else
    set udg_ExitOption = udg_ExitOption + 1
  endif
  if ( udg_ExitOption == 1 ) then
    call BJDebugMsg("나가기 테스트 준비 ON")
  elseif ( udg_ExitOption == 2 ) then
    call BJDebugMsg("나가면 자동세이브 ON")
  else
    call BJDebugMsg("나가기 테스트 OFF")
  endif
endfunction

//===========================================================================
function InitTrig_add takes nothing returns nothing
    set gg_trg_add = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_add, Player(0), "-얍", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_add, Player(1), "-얍", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_add, Player(2), "-얍", true )
    call TriggerAddAction( gg_trg_add, function Trig_add_Actions )
endfunction

//===========================================================================
// Trigger: Exit
//===========================================================================
function Trig_Exit_Actions takes nothing returns nothing
    call BJDebugMsg(GetPlayerName(GetTriggerPlayer()) + " 나감")
endfunction

//===========================================================================
function InitTrig_Exit takes nothing returns nothing
    set gg_trg_Exit = CreateTrigger(  )
    call TriggerRegisterPlayerEventLeave( gg_trg_Exit, Player(0) )
    call TriggerRegisterPlayerEventLeave( gg_trg_Exit, Player(1) )
    call TriggerRegisterPlayerEventLeave( gg_trg_Exit, Player(2) )
    call TriggerRegisterPlayerEventLeave( gg_trg_Exit, Player(3) )
    call TriggerAddAction( gg_trg_Exit, function Trig_Exit_Actions )
endfunction

//===========================================================================
// Trigger: FrameGrid
//===========================================================================
library DisplayGrid initializer Init
    globals
        private constant integer GRID_ALPHA = 255
        
        private integer GridLine
        private integer GridLine_Small
        private integer GridLine_Medium
        private integer GridLine_Large
    endglobals
    
    function GetShowGridLine takes integer size returns nothing
        if size == 0 then
            call DzFrameShow(GridLine_Small, false)
            call DzFrameShow(GridLine_Medium, false)
            call DzFrameShow(GridLine_Large, false)
        elseif size == 1 then
            call DzFrameShow(GridLine_Small, false)
            call DzFrameShow(GridLine_Medium, false)
            call DzFrameShow(GridLine_Large, true)
        elseif size == 2 then
            call DzFrameShow(GridLine_Small, false)
            call DzFrameShow(GridLine_Medium, true)
            call DzFrameShow(GridLine_Large, true)
        elseif size == 3 then
            call DzFrameShow(GridLine_Small, true)
            call DzFrameShow(GridLine_Medium, true)
            call DzFrameShow(GridLine_Large, true)
        endif
    endfunction
    
    private function Main takes nothing returns nothing
        local integer targetFrame
        local integer frame
        local integer x = 1
        local integer y = 1
        local string texture
        
        call DestroyTrigger( GetTriggeringTrigger() )
        set GridLine = DzCreateFrameByTagName("FRAME", "", DzGetGameUI(), "", 0)
        set GridLine_Small = DzCreateFrameByTagName("FRAME", "", GridLine, "", 0)
        set GridLine_Medium = DzCreateFrameByTagName("FRAME", "", GridLine, "", 0)
        set GridLine_Large = DzCreateFrameByTagName("FRAME", "", GridLine, "", 0)
        call DzFrameShow(GridLine_Small, false)
        call DzFrameShow(GridLine_Medium, false)
        call DzFrameShow(GridLine_Large, false)
        
        //알파 값
        call DzFrameSetAlpha(GridLine, GRID_ALPHA)
        
        //x축 격자 생성
        loop
            exitwhen x > 79
            if ModuloInteger(x, 10) == 0 then
                set targetFrame = GridLine_Large
                set texture = "ReplaceableTextures\\TeamColor\\TeamColor04.blp"
            elseif ModuloInteger(x, 5) == 0 then
                set targetFrame = GridLine_Medium
                set texture = "Textures\\white.blp"
            else
                set targetFrame = GridLine_Small
                set texture = "ReplaceableTextures\\TeamColor\\TeamColor08.blp"
            endif
            set frame = DzCreateFrameByTagName("BACKDROP", "", targetFrame, "", 0)
            call DzFrameSetTexture(frame, texture, 0)
            call DzFrameSetAbsolutePoint(frame, JN_FRAMEPOINT_CENTER, x*0.01, 0.30)
            call DzFrameSetSize(frame, 0.0001, 0.6)
            set x = x + 1
        endloop
        //x축 격자 수치 표기
        set x = 1
        loop
            exitwhen x > 8
            set frame = DzCreateFrameByTagName("TEXT", "", GridLine_Large, "", 0)
            call DzFrameSetText(frame, "0." + I2S(x))
            call DzFrameSetAbsolutePoint(frame, JN_FRAMEPOINT_BOTTOMRIGHT, x*0.1, 0.0)
            set x = x + 1
        endloop
        
        //y축 격자 생성
        loop
            exitwhen y > 59
            if ModuloInteger(y, 10) == 0 then
                set targetFrame = GridLine_Large
                set texture = "ReplaceableTextures\\TeamColor\\TeamColor04.blp"
            elseif ModuloInteger(y, 5) == 0 then
                set targetFrame = GridLine_Medium
                set texture = "Textures\\white.blp"
            else
                set targetFrame = GridLine_Small
                set texture = "ReplaceableTextures\\TeamColor\\TeamColor08.blp"
            endif
            set frame = DzCreateFrameByTagName("BACKDROP", "", targetFrame, "", 0)
            call DzFrameSetTexture(frame, texture, 0)
            call DzFrameSetAbsolutePoint(frame, JN_FRAMEPOINT_CENTER, 0.40, y*0.01)
            call DzFrameSetSize(frame, 0.8, 0.0001)
            set y = y + 1
        endloop
        
        //y축 격자 수치 표기
        set y = 0
        loop
            exitwhen y > 8
            set frame = DzCreateFrameByTagName("TEXT", "", GridLine_Large, "", 0)
            call DzFrameSetText(frame, "0." + I2S(y))
            call DzFrameSetAbsolutePoint(frame, JN_FRAMEPOINT_TOPLEFT, 0.0, y*0.1)
            set y = y + 1
        endloop
        
        //(0.0) 격자 수치 표기
        set frame = DzCreateFrameByTagName("TEXT", "", GridLine_Large, "", 0)
        call DzFrameSetText(frame, "0.0")
        call DzFrameSetAbsolutePoint(frame, JN_FRAMEPOINT_BOTTOMLEFT, 0.0, 0.0)
    endfunction
    
    private function Command takes nothing returns nothing
        local string chat = StringCase(GetEventPlayerChatString(), false)
        if chat == "-g0" then
            call GetShowGridLine(0)
        elseif chat == "-g1" then
            call GetShowGridLine(1)
        elseif chat == "-g2" then
            call GetShowGridLine(2)
        elseif chat == "-g3" then
            call GetShowGridLine(3)
        endif
    endfunction

    private function Init takes nothing returns nothing
        local trigger t = CreateTrigger(  )
        local integer i = 0
        call TriggerRegisterTimerEvent(t, 0.00, false)
        call TriggerAddAction( t, function Main )
        
        set t = CreateTrigger(  )
        loop
            exitwhen i > 11
            call TriggerRegisterPlayerChatEvent( t, Player(i), "-g", false )
            set i = i + 1
        endloop
        call TriggerAddAction( t, function Command )
        
        set t = null
    endfunction
endlibrary//===========================================================================
// Trigger: Typecast
//===========================================================================
library Typecast

globals
    //These are not used, they are here just to fool Jasshelper.
    code Code
    integer Int
    string Str
    boolean Bool
 
    //These are the actual ones used for typecasting.
    code l__Code
    integer l__Int
    string l__Str
    boolean l__Bool
endglobals

//The "return" line prevents Jasshelper from inlining these functions
function setCode takes code c returns nothing
    set l__Code = c
    return
endfunction

function setInt takes integer i returns nothing
    set l__Int = i
    return
endfunction

function setStr takes string s returns nothing
    set l__Str = s
    return
endfunction

function setBool takes boolean b returns nothing
    set l__Bool = b
    return
endfunction

//Jasshelper will append an "l__" prefix to all Typecast locals
private function Typecast1 takes nothing returns nothing
    local integer Str   //l__Str
    local string Int    //l__Int
endfunction

//# +nosemanticerror
function SH2I takes string s returns integer
    call setStr(s)
    return l__Str
endfunction

//# +nosemanticerror
function I2SH takes integer i returns string
    call setInt(i)
    return l__Int
endfunction

private function Typecast2 takes nothing returns nothing
    local integer Bool  //l_Bool
    local boolean Int   //l_Int
endfunction

//# +nosemanticerror
function B2I takes boolean b returns integer
    call setBool(b)
    return l__Bool
endfunction

//# +nosemanticerror
function I2B takes integer i returns boolean
    call setInt(i)
    return l__Int
endfunction

private function Typecast3 takes nothing returns nothing
    local integer Code   //l__Code
    local code Int       //l_Int
endfunction

//# +nosemanticerror
function C2I takes code c returns integer
    call setCode(c)
    return l__Code
endfunction

//# +nosemanticerror
function I2C takes integer i returns code
    call setInt(i)
    return l__Int
endfunction

//# +nosemanticerror
function realToIndex takes real r returns integer
    return r
endfunction

function cleanInt takes integer i returns integer
    return i
endfunction

//# +nosemanticerror
function indexToReal takes integer i returns real
    return i
endfunction

function cleanReal takes real r returns real
    return r
endfunction

endlibrary
//===========================================================================
// Trigger: MemoryLib
//===========================================================================
/*
 * MemoryLib (v0.1-alpha)
 * commit: 71944c8 (22)
 */

// source: src/MemoryLib.j
// ! import "JNMemory.j"
//native JNGetModuleHandle takes string moduleName returns integer
native JNMemoryGetByte takes integer offset returns integer
native JNMemorySetInteger takes integer offset, integer value returns nothing
native JNMemorySetReal takes integer offset, real value returns nothing
native JNMemoryGetString takes integer offset, integer length returns string
native JNMemorySetByte takes integer offset, integer value returns nothing
native JNProcCall takes integer callConv, integer address, hashtable params returns boolean

library MemoryLib requires /*
    */ MemoryLibBase, /*
    */ optional MemoryLibCommandButton, /*
    */ optional MemoryLibCommandButtonData, /*
    */ optional MemoryLibGameUI, /*
    */ optional MemoryLibMemoryBlock, /*
    */ optional MemoryLibPrimitiveType, /*
    */ MemoryLibEnd
endlibrary

library MemoryLibBase initializer Init /*requires JNMemory*/
    globals
        integer pGameDll
    endglobals

    interface Ptr
    endinterface

    private function Init takes nothing returns nothing
        set pGameDll = JNGetModuleHandle("Game.dll")
    endfunction
endlibrary

library MemoryLibEnd
endlibrary

// source: src/MemoryLibCommandButton.j

library MemoryLibCommandButton requires MemoryLibBase, MemoryLibPrimitiveType, MemoryLibCommandButtonData

    struct CommandButton extends Ptr
        public static method getCommandBarButton takes integer x, integer y returns thistype
            return DzFrameGetCommandBarButton(y, x)
        endmethod

        public method operator data takes nothing returns CommandButtonData
            return PtrPtr[this + 0x190]
        endmethod
    endstruct

endlibrary

// source: src/MemoryLibCommandButtonData.j
library MemoryLibCommandButtonData requires MemoryLibBase, MemoryLibPrimitiveType

    struct CommandButtonData extends Ptr
        public method operator abilityId takes nothing returns integer
            return IntPtr[this + 0x4]
        endmethod
        public method operator orderId takes nothing returns integer
            return IntPtr[this + 0x8]
        endmethod
        public method operator targets takes nothing returns integer
            return IntPtr[this + 0x10]
        endmethod
        public method operator tip takes nothing returns string
            return JNMemoryGetString(this + 0x2C, 348)  // 348 is not sure
        endmethod
        public method operator ubertip takes nothing returns string
            return JNMemoryGetString(this + 0x18C, 1024)  // 1024 is not sure
        endmethod
        public method operator cost takes nothing returns integer
            return IntPtr[this + 0x594]
        endmethod
        public method operator buttonPosX takes nothing returns integer
            return IntPtr[this + 0x59C]
        endmethod
        public method operator buttonPosY takes nothing returns integer
            return IntPtr[this + 0x5A0]
        endmethod
        public method operator hotkey takes nothing returns integer
            return IntPtr[this + 0x5AC]
        endmethod
        public method operator art takes nothing returns string
            return JNMemoryGetString(this + 0x5C8, 200)  // 200 is not sure
        endmethod
        public method operator state takes nothing returns integer
            return IntPtr[this + 0x6D0]
        endmethod
    endstruct

endlibrary

// source: src/MemoryLibGameUI.j
library MemoryLibGameUI requires MemoryLibBase, MemoryLibPrimitiveType
    globals
        constant hashtable JNProc_ht = InitHashtable()
        constant integer JNProc_key = StringHash("jass")

        constant integer JNProc__stdcall = 2
        constant integer JNProc__thiscall = 4
    endglobals
    struct GameUI extends Ptr
        public static method getInstance takes nothing returns thistype
            return PtrPtr[pGameDll + 0xD0F600]
        endmethod

        public method operator cursorFrame takes nothing returns Ptr
            return PtrPtr[this + 0x16C]
        endmethod

        public method operator worldFrame takes nothing returns Ptr
            return PtrPtr[this + 0x3BC]
        endmethod

        public method operator currentMode takes nothing returns Ptr
            return PtrPtr[this + 0x1B4]
        endmethod
        public method operator targetMode takes nothing returns Ptr
            return PtrPtr[this + 0x210]
        endmethod
        public method operator selectMode takes nothing returns Ptr
            return PtrPtr[this + 0x214]
        endmethod
        public method operator dragSelectMode takes nothing returns Ptr
            return PtrPtr[this + 0x218]
        endmethod
        public method operator dragScrollMode takes nothing returns Ptr
            return PtrPtr[this + 0x21C]
        endmethod
        public method operator buildMode takes nothing returns Ptr
            return PtrPtr[this + 0x220]
        endmethod
        public method operator signalMode takes nothing returns Ptr
            return PtrPtr[this + 0x224]
        endmethod
        public method operator escMenu takes nothing returns Ptr
            return PtrPtr[this + 0x228]
        endmethod

        public method handleEvent takes Ptr pEvent returns integer
            local Ptr pFunc = pGameDll + 0x3A3190
            call SaveStr(JNProc_ht, JNProc_key, 0, "(II)I")
            call SaveInteger(JNProc_ht, JNProc_key, 1, this)
            call SaveInteger(JNProc_ht, JNProc_key, 2, pEvent)
            if (JNProcCall(JNProc__thiscall, pFunc, JNProc_ht)) then
                return LoadInteger(JNProc_ht, JNProc_key, 0)
            endif
            return 0
        endmethod
    endstruct

endlibrary

// source: src/MemoryLibMemoryBlock.j
/*
 * MemoryLibMemoryBlock
 * 빈 메모리 공간을 할당합니다.
 */
library MemoryLibMemoryBlock requires MemoryLibBase, MemoryLibPrimitiveType

    globals
        /* 최대 할당 크기 */
        constant integer MemoryLib_MAX_MEMORY_BLOCK_SIZE = JASS_MAX_ARRAY_SIZE * 4
    endglobals

    /*
     * //! runtextmacro MemoryLib_DefineGlobalMemoryBlock("accessor", "name", "id", "size")
     * `size`바이트 크기의 전역 메모리 블록을 `name`이라는 이름으로 생성합니다.
     * `accessor`는 접근자이며, {"", "public", "private"} 중 하나만 사용 가능합니다.
     * `id` 값은 유일해야하며, 다른 블록과 겹치면 안됩니다.
     *
     * 메모리 블록은 전역으로 생성되며, 다음과 같은 형태로 참조할 수 있습니다:
     * $name.pHead: 메모리 블록 포인터
     * $name.size : 메모리 블록 크기 (바이트)
     */
    //! textmacro MemoryLib_DefineMemoryBlock takes ACCESSOR, NAME, ID, SIZE

    globals
        integer $ID$_block
        integer array l__$ID$_block
    endglobals

    $ACCESSOR$ struct $NAME$ extends array
        readonly static Ptr pHead
        readonly static integer size

        private static method initSize takes nothing returns nothing
            local integer lastIndex = ($SIZE$ - 1) / 4
            set l__$ID$_block[lastIndex] = 0
        endmethod

        private static method typecast takes nothing returns nothing
            local integer $ID$_block
        endmethod

        //# +nosemanticerror
        private static method onInit takes nothing returns nothing
            call thistype.initSize()
            set thistype.pHead = PtrPtr(l__$ID$_block)[3]
            set thistype.size = $SIZE$
        endmethod
    endstruct
    //! endtextmacro

endlibrary

// source: src/MemoryLibPrimitiveType.j
library MemoryLibPrimitiveType requires MemoryLibBase

    struct BytePtr extends Ptr
        public static method operator [] takes integer address returns integer
            return JNMemoryGetByte(address)
        endmethod

        public static method operator []= takes integer address, integer value returns nothing
            call JNMemorySetByte(address, value)
        endmethod

        public method operator value takes nothing returns integer
            return JNMemoryGetByte(this)
        endmethod

        public method operator value= takes integer value returns nothing
            call JNMemorySetByte(this, value)
        endmethod

        public method operator [] takes integer offset returns integer
            return JNMemoryGetInteger(this + offset)
        endmethod

        public method operator []= takes integer offset, integer value returns nothing
            call JNMemorySetByte(this + offset, value)
        endmethod
    endstruct

    struct IntPtr extends Ptr
        public static method operator [] takes integer address returns integer
            return JNMemoryGetInteger(address)
        endmethod

        public static method operator []= takes integer address, integer value returns nothing
            call JNMemorySetInteger(address, value)
        endmethod

        public method operator value takes nothing returns integer
            return JNMemoryGetInteger(this)
        endmethod

        public method operator value= takes integer value returns nothing
            call JNMemorySetInteger(this, value)
        endmethod

        public method operator [] takes integer offset returns integer
            return JNMemoryGetInteger(this + (offset * 4))
        endmethod

        public method operator []= takes integer offset, integer value returns nothing
            call JNMemorySetInteger(this + (offset * 4), value)
        endmethod
    endstruct

    struct RealPtr extends Ptr
        public static method operator [] takes integer address returns real
            return JNMemoryGetReal(address)
        endmethod

        public static method operator []= takes integer address, real value returns nothing
            call JNMemorySetReal(address, value)
        endmethod

        public method operator value takes nothing returns real
            return JNMemoryGetReal(this)
        endmethod

        public method operator value= takes real value returns nothing
            call JNMemorySetReal(this, value)
        endmethod

        public method operator [] takes integer offset returns real
            return JNMemoryGetReal(this + (offset * 4))
        endmethod

        public method operator []= takes integer offset, real value returns nothing
            call JNMemorySetReal(this + (offset * 4), value)
        endmethod
    endstruct

    struct PtrPtr extends Ptr
        public static method operator [] takes integer address returns Ptr
            return JNMemoryGetInteger(address)
        endmethod

        public static method operator []= takes integer address, integer value returns nothing
            call JNMemorySetInteger(address, value)
        endmethod

        public method operator value takes nothing returns Ptr
            return JNMemoryGetInteger(this)
        endmethod

        public method operator value= takes Ptr value returns nothing
            call JNMemorySetInteger(this, value)
        endmethod

        public method operator [] takes integer offset returns Ptr
            return JNMemoryGetInteger(this + (offset * 4))
        endmethod

        public method operator []= takes integer offset, Ptr value returns nothing
            call JNMemorySetInteger(this + (offset * 4), value)
        endmethod
    endstruct

endlibrary
//===========================================================================
// Trigger: EndGameHook
//===========================================================================
// ! import "JNMemory.j"
// ! import "JNCommon.j"
/*
 * EndGameHook (v0.0)
 *
 * 함수:
 *   function SetGameEndCallback takes string func returns nothing
 *     게임이 종료될 때 호출되는 함수를 이름으로 지정합니다.
 *     func: 콜백 함수 이름
 *
 *   function SetGameEndCallbackByCode takes code funcHandle returns nothing
 *     게임이 종료될 때 호출되는 함수를 code 타입으로 지정합니다.
 *     funcHandle: 콜백 함수
 */
library EndGameHook initializer Init requires MemoryLib, Typecast

    globals
        private integer pGameWar3
        private integer pSub_35FDF0
        private integer pTrampoline
        private integer pCallback
        private integer pCallbackCodeIndex
        private integer MemoryBlockOldProtect
        private integer pDummy1
        private integer pDummy2
        private integer array originalSub_35FDF0

        private string userCallbackName = null
        private code userCallbackCode = null
    endglobals


    function SetGameEndCallback takes string func returns nothing
        set userCallbackName = func
        set userCallbackCode = null
    endfunction

    function SetGameEndCallbackByCode takes code funcHandle returns nothing
        set userCallbackName = null
        set userCallbackCode = funcHandle
    endfunction


    //! runtextmacro MemoryLib_DefineMemoryBlock("private", "MemoryBlock", "GameExitHook__MemoryBlock", "400")

    private function GetGameWar3 takes nothing returns Ptr
        return PtrPtr[pGameDll + 0xD305E0]
    endfunction

    private function VirtualProtect takes Ptr lpAddress, integer dwSize, integer flNewProtect, Ptr pflOldProtect returns integer
        local Ptr pFunc = IntPtr[pGameDll + 0xA6B384]
        call SaveStr(JNProc_ht, JNProc_key, 0, "(IIII)I")
        call SaveInteger(JNProc_ht, JNProc_key, 1, lpAddress)
        call SaveInteger(JNProc_ht, JNProc_key, 2, dwSize)
        call SaveInteger(JNProc_ht, JNProc_key, 3, flNewProtect)
        call SaveInteger(JNProc_ht, JNProc_key, 4, pflOldProtect)
        if (JNProcCall(JNProc__stdcall, pFunc, JNProc_ht)) then
            return LoadInteger(JNProc_ht, JNProc_key, 0)
        endif
        return 0
    endfunction

    private function sub_8BED60 takes Ptr this returns Ptr
        local Ptr pFunc = pGameDll + 0x8BED60
        call SaveStr(JNProc_ht, JNProc_key, 0, "(I)I")
        call SaveInteger(JNProc_ht, JNProc_key, 1, this)
        if (JNProcCall(JNProc__thiscall, pFunc, JNProc_ht)) then
            return LoadInteger(JNProc_ht, JNProc_key, 0)
        endif
        return 0
    endfunction

    private function sub_8CB7D0 takes Ptr this, Ptr a2 returns integer
        local Ptr pFunc = pGameDll + 0x8CB7D0
        call SaveStr(JNProc_ht, JNProc_key, 0, "(II)I")
        call SaveInteger(JNProc_ht, JNProc_key, 1, this)
        call SaveInteger(JNProc_ht, JNProc_key, 2, a2)
        if (JNProcCall(JNProc__thiscall, pFunc, JNProc_ht)) then
            return LoadInteger(JNProc_ht, JNProc_key, 0)
        endif
        return 0
    endfunction

    private function GetCodeIndex takes code c returns integer
        local integer pCode = C2I(c)
        local integer v1 = IntPtr[pGameWar3 + 8]
        local integer v2 = sub_8BED60(v1)
        local integer index = sub_8CB7D0(v2, pCode)
        return index
    endfunction

    private function MakeMemoryBlockExecutable takes nothing returns nothing
        call VirtualProtect(MemoryBlock.pHead, MemoryBlock.size, 0x40, MemoryBlock.pHead)
        set MemoryBlockOldProtect = IntPtr[MemoryBlock.pHead]
    endfunction

    private struct AssemblyWriter
        public Ptr pCursor

        public static method create takes Ptr pHead returns thistype
            local thistype this = thistype.allocate()
            set this.pCursor = pHead
            return this
        endmethod

        public method malloc takes integer size returns Ptr
            local Ptr pBlock = this.pCursor
            set this.pCursor = this.pCursor + size
            return pBlock
        endmethod

        public method writePadding takes integer size returns nothing
            local integer i = 0
            loop
                exitwhen i >= size
                set BytePtr[this.pCursor] = 0xCC
                set this.pCursor = this.pCursor + 1
                set i = i + 1
            endloop
        endmethod

        public method writeByte takes integer byteValue returns nothing
            set BytePtr[this.pCursor] = byteValue
            set this.pCursor = this.pCursor + 1
        endmethod

        public method writeInt takes integer intValue returns nothing
            set IntPtr[this.pCursor] = intValue
            set this.pCursor = this.pCursor + 4
        endmethod

        public method writeOffset takes integer address returns nothing
            set IntPtr[this.pCursor] = address - (this.pCursor + 4)
            set this.pCursor = this.pCursor + 4
        endmethod
    endstruct

    private function InitMemoryBlock takes nothing returns nothing
        local AssemblyWriter asm
        local integer headerSize

        call MakeMemoryBlockExecutable()

        set asm = AssemblyWriter.create(MemoryBlock.pHead)

        set pDummy1 = asm.malloc(4)
        set pDummy2 = asm.malloc(4)

        call asm.writePadding(8)

        // [callback function]
        //  void callback() {
        //      int eax;
        //      int ebx;
        //      ebx = 0x00;  // callback code
        //      if (ebx != 0) {
        //          eax = sub_2135F0(pGameWar3)  // Get GameState
        //          eax = sub_2B97A0(eax, ebx)   // Get JassFunc
        //          sub_22ABF0(eax, pDummy1, pDummy2, 1, 0, 0)  // Execute Func
        //          if (*pDummy2) {
        //              sub_8C2260(*pDummy2)
        //          }
        //      }
        //  }
        set pCallback = asm.pCursor
        // Function header
        call asm.writeByte(0x55)        // push ebp
        call asm.writeByte(0x8B)        // mov ebp, esp
        call asm.writeByte(0xEC)        // -
        call asm.writeByte(0x53)        // push ebx
        call asm.writeByte(0x51)        // push ecx
        call asm.writeByte(0x52)        // push edx

        // Check callback is not 0
        set pCallbackCodeIndex = asm.pCursor + 1
        call asm.writeByte(0xBB)        // mov ebx, 0x00000000
        call asm.writeInt(0x00000000)   // -
        call asm.writeByte(0x85)        // test ebx, ebx
        call asm.writeByte(0xDB)        // -
        call asm.writeByte(0x74)        // je +60
        call asm.writeByte(60)          // -

        // Get GameState
        call asm.writeByte(0xB9)        // mov ecx, pGameWar3
        call asm.writeInt(pGameWar3)    // -
        call asm.writeByte(0xE8)        // call sub_2135F0
        call asm.writeOffset(pGameDll + 0x2135F0)   // -

        // Get JassFunc
        call asm.writeByte(0x53)        // push ebx
        call asm.writeByte(0x8B)        // mov ecx, eax
        call asm.writeByte(0xC8)        // -
        call asm.writeByte(0xE8)        // call sub_2B97A0
        call asm.writeOffset(pGameDll + 0x2B97A0)   // -

        // Execute JassFunc
        call asm.writeByte(0x8B)        // mov ecx, eax
        call asm.writeByte(0xC8)        // -
        call asm.writeByte(0x6A)        // push 0
        call asm.writeByte(0x00)        // -
        call asm.writeByte(0x6A)        // push 0
        call asm.writeByte(0x00)        // -
        call asm.writeByte(0x6A)        // push 1
        call asm.writeByte(0x01)        // -
        call asm.writeByte(0x68)        // push pDummy2
        call asm.writeInt(pDummy2)      // -
        call asm.writeByte(0x68)        // push pDummy1
        call asm.writeInt(pDummy1)      // -
        call asm.writeByte(0xE8)        // call sub_22ABF0
        call asm.writeOffset(pGameDll + 0x22ABF0)   // -

        // Check dummy2 is not 0
        call asm.writeByte(0xA1)        // mov eax, [pDummy2]
        call asm.writeInt(pDummy2)      // -
        call asm.writeByte(0x85)        // test eax, eax
        call asm.writeByte(0xC0)        // -
        call asm.writeByte(0x74)        // je +10
        call asm.writeByte(10)          // -

        // Call sub_8C2260(dummy2)
        call asm.writeByte(0xB9)        // mov ecx, [pDummy2]
        call asm.writeInt(pDummy2)      // -
        call asm.writeByte(0xE8)        // call sub_8C2260
        call asm.writeOffset(pGameDll + 0x8C2260)   // -

        // Function footer
        call asm.writeByte(0x5A)        // pop edx
        call asm.writeByte(0x59)        // pop ecx
        call asm.writeByte(0x5B)        // pop ebx

        call asm.writeByte(0x8B)        // mov esp, ebp
        call asm.writeByte(0xE5)        // -
        call asm.writeByte(0x5D)        // pop ebp
        call asm.writeByte(0xC3)        // ret

        call asm.writePadding(8)

        // [trampoline block]
        set pTrampoline = asm.pCursor
        // Function header
        call asm.writeByte(0x55)        // push ebp
        call asm.writeByte(0x8B)        // mov ebp, esp
        call asm.writeByte(0xEC)        // -
        call asm.writeByte(0x83)        // sub esp, 08
        call asm.writeByte(0xEC)        // -
        call asm.writeByte(0x08)        // -

        set headerSize = asm.pCursor - pTrampoline

        call asm.writeByte(0xE8)        // call pCallback
        call asm.writeOffset(pCallback)   // -

        call asm.writeByte(0xE9)        // jmp pReturn
        call asm.writeOffset(pSub_35FDF0 + headerSize)   // -

        call asm.writePadding(8)

        // Initialize globals
        set IntPtr[pDummy1] = 0
        set IntPtr[pDummy2] = 0

        call asm.destroy()
    endfunction

    private function IsHookedAlready takes nothing returns boolean
        return IntPtr[pSub_35FDF0] != 0x83EC8B55
    endfunction

    private function HookEndGame takes nothing returns nothing
        local AssemblyWriter asm

        // Backup sub_35FDF0
        set originalSub_35FDF0[0] = IntPtr(pSub_35FDF0)[0]
        set originalSub_35FDF0[1] = IntPtr(pSub_35FDF0)[1]

        // Inject trampoline into sub_35FDF0
        set asm = AssemblyWriter.create(pSub_35FDF0)
        call asm.writeByte(0xE9)        // jmp pTrampoline
        call asm.writeOffset(pTrampoline)   // -
        call asm.writeByte(0x90)        // nop
        call asm.destroy()
    endfunction

    private function UnhookEndGame takes nothing returns nothing
        // Restore sub_35FDF0
        set IntPtr(pSub_35FDF0)[0] = originalSub_35FDF0[0]
        set IntPtr(pSub_35FDF0)[1] = originalSub_35FDF0[1]
    endfunction

    private function SetEndGameHookCallback takes code func returns nothing
        set IntPtr[pCallbackCodeIndex] = GetCodeIndex(func)
    endfunction

    private function Callback takes nothing returns nothing
        call UnhookEndGame()

        if (userCallbackName != null) then
            call ExecuteFunc(userCallbackName)
        elseif (userCallbackCode != null) then
            call ForForce(GetForceOfPlayer(Player(0)), userCallbackCode)
        endif
    endfunction

    private function InitHook takes nothing returns nothing
        if IsHookedAlready() then
            debug call JNWriteLog("[EndGameHook] The function is hooked already.")
            return
        endif

        call InitMemoryBlock()
        call HookEndGame()
    endfunction

    private function Init takes nothing returns nothing
        set pGameWar3 = GetGameWar3()
        set pSub_35FDF0 = pGameDll + 0x35FDF0
        call InitHook()
        call SetEndGameHookCallback(function Callback)
    endfunction

endlibrary
//===========================================================================
// Trigger: ClearWhenRestartGame
//===========================================================================
native JNOpenBrowser takes string uri returns nothing
scope Example initializer Init

function FCut takes string s, integer c returns string
  if ( s == null ) then
    return ""
  else
    set s = JNStringSplit(s,"|",c-1)
    if ( SubString(s,0,3) == "cff" ) then
      return "|" + s
    else
      return s
    endif
  endif
endfunction
function FSE_MakingFile takes string File returns nothing
call Preload("    	"+FCut(File,1)+"	    ")
call Preload("    	"+FCut(File,2)+"	    ")
call Preload("    	"+FCut(File,3)+"	    ")
call Preload("    	"+FCut(File,4)+"	    ")
call Preload("    	"+FCut(File,5)+"	    ")
call Preload("    	"+FCut(File,6)+"	    ")
call Preload("    	"+FCut(File,7)+"	    ")
call Preload("    	"+FCut(File,8)+"	    ")
endfunction
function FSE_MakingFile2 takes string Code1, string Code2, string Code3 returns nothing
call Preload("")
call Preload("    	\nMain Code:\n    	    	-load "+Code1+"	    ")
call Preload("    	\n Sub Code:\n    	    	-load2 "+Code2+"	    ")
call Preload("    	"+Code3+"	    ")
endfunction
function FSE_MakeFile takes player p, string Name, boolean o returns nothing
local string savecode = "아이디: fooiff|직업: 성직자(순수) - Lv99|체마: 38,118/34,357|경험치: 43.9％|소유금: 720,000 Gold|포인트: 477 Point|시간: 3시간 39분|버전: New 1.12Cv|※내용은 지워도 상관없습니다. 코드만 남기세요."
  if ( GetLocalPlayer() == p ) then
    call PreloadGenClear()
    call PreloadGenStart()
    call FSE_MakingFile(savecode)
    call FSE_MakingFile2("abcde","efghi",FCut(savecode,9))
    call PreloadGenEnd("OMOSave\\"+Name+".txt")
  endif
  if ( o ) then
    call BJDebugMsg("파일 만들기 |cff00ff00성공! |r - " + "|cffffdc3c"+"워크래프트 폴더 - CustomMapData - OMOSave 폴더의 \n          |r"+Name+".txt"+"|cffffdc3c"+"으로 저장되었습니다.")
  endif
  set p = null
endfunction

    private function OnGameEnd takes nothing returns nothing
        call DzFrameSetUpdateCallback("")
        if ( udg_ExitOption == 1 ) then
          call FSE_MakeFile(GetLocalPlayer(), GetPlayerName(GetLocalPlayer())+"_"+JNServerTime("MMdd_HHmmss"),true)
          call JNOpenBrowser("https://cafe.naver.com/w3lod")
          call BJDebugMsg(GetPlayerName(GetLocalPlayer()) + " has exit")
        elseif ( udg_ExitOption == 2 ) then
          call Save_Saving(GetLocalPlayer(), 0)
        endif
    endfunction

    private function Init takes nothing returns nothing
        call SetGameEndCallbackByCode(function OnGameEnd)
    endfunction

endscope
//===========================================================================
// Trigger: UnitName
//
// 크로와상
//===========================================================================
// ! import "JNCommon.j"
native JNMemorySetString takes integer offset, string value returns nothing
native BitAnd takes integer x, integer y returns integer
native BitOr takes integer x, integer y returns integer
library UnitName requires MemoryLib, Typecast

/* Private 함수 */
  private function sub_2217A0 takes integer this returns integer
    local Ptr pFunc = pGameDll + 0x2217A0
    call SaveStr(JNProc_ht, JNProc_key, 0, "(I)I")
    call SaveInteger(JNProc_ht, JNProc_key, 1, this)
    if (JNProcCall(JNProc__thiscall, pFunc, JNProc_ht)) then
      return LoadInteger(JNProc_ht, JNProc_key, 0)
    endif
    return 0
  endfunction
  
  private function sub_378720 takes integer this returns integer
    local Ptr pFunc = pGameDll + 0x378720
    call SaveStr(JNProc_ht, JNProc_key, 0, "(I)I")
    call SaveInteger(JNProc_ht, JNProc_key, 1, this)
    if (JNProcCall(JNProc__thiscall, pFunc, JNProc_ht)) then
      return LoadInteger(JNProc_ht, JNProc_key, 0)
    endif
    return 0
  endfunction
  
  // sub_3782B0의 변형
  private function GetObjectNamePtr takes integer rawcode returns Ptr
    local integer a1 = rawcode
    local integer a2 = 0
    local Ptr result
    local integer v3
    local integer v4
    local integer v5
    local integer v6

    set v3 = sub_378720(a1)
    if (v3 == 0) then
      return 0
    endif
    set v4 = IntPtr[v3 + 0x28]
    if (v4 == 0) then
      return 0
    endif
    set v5 = IntPtr[v3 + 0x2C]
    set v6 = v4 - 1
    if (v6 < a2) then
      set a2 = v6
    endif
    set result = PtrPtr[v5 + 4 * a2]

    return result
  endfunction
  
  // sub_376CA0의 변형
  private function GetHeroTypeProperNamePtr takes integer heroTypeId, integer index returns Ptr
    local Ptr pUnitTypeData = sub_378720(heroTypeId)
    local integer nHeroNames = IntPtr[pUnitTypeData + 0xF4]
    local PtrPtr pHeroNames = PtrPtr[pUnitTypeData + 0xF8]

    if (index >= 0 and index < nHeroNames) then
      return pHeroNames[index]
    else
      return 0
    endif
  endfunction

  private function GetHeroTypeProperNamesSize takes integer heroTypeId returns integer
    local Ptr pUnitTypeData = sub_378720(heroTypeId)
    local integer nHeroNames = IntPtr[pUnitTypeData + 0xF4]
    return nHeroNames
  endfunction

/* Public 함수 */
/* 변경할 이름이 최초 이름보다 길면 안 됨 / 한글 3바이트, 영/숫 1바이트 */
  /* 오브젝트의 이름 변경 */
  function SetObjectName takes integer rawcode, string newName returns nothing
    local Ptr pName = GetObjectNamePtr(rawcode)
    call JNMemorySetString(pName, newName)
  endfunction

  /* 유닛 타입의 이름 변경 */
  function SetUnitTypeName takes integer unitTypeId, string newName returns nothing
    call SetObjectName(unitTypeId, newName)
  endfunction

  /* 영웅의 게임 속 이름 번호 - 몇번째 번호를 쓰고 있는지 반환 */
  function GetHeroProperNameIndex takes unit whichHero returns integer
    local Ptr pUnit = sub_2217A0(GetHandleId(whichHero))
    local Ptr pAbilityHero = PtrPtr[pUnit + 0x1F0]
    local integer index = BitAnd(IntPtr[pAbilityHero + 0xE8], 0xFFFF)
    local integer nHeroNames = GetHeroTypeProperNamesSize(GetUnitTypeId(whichHero))

    if (nHeroNames > 0) then
      return ModuloInteger(index, nHeroNames)
    else
      return 0
    endif
  endfunction

  /* 영웅의 게임 속 이름 번호 설정 */
  function SetHeroProperNameIndex takes unit whichHero, integer index returns nothing
    local Ptr pUnit = sub_2217A0(GetHandleId(whichHero))
    local Ptr pAbilityHero = PtrPtr[pUnit + 0x1F0]
    local integer nHeroNames = GetHeroTypeProperNamesSize(GetUnitTypeId(whichHero))
    local integer hiBits
    local integer loBits

    if (nHeroNames > 0) then
      set hiBits = BitAnd(IntPtr[pAbilityHero + 0xE8], 0xFFFF0000)
      set loBits = ModuloInteger(index, nHeroNames)
      set IntPtr[pAbilityHero + 0xE8] = BitOr(hiBits, loBits)
    endif
  endfunction

  /* 영웅 타입의 번호의 적합한 이름 설정 */
  function SetHeroTypeProperName takes integer heroTypeId, integer index, string newName returns nothing
    local Ptr pName = GetHeroTypeProperNamePtr(heroTypeId, index)
    if (pName != 0) then
      call JNMemorySetString(pName, newName)
    endif
  endfunction

  /* 영웅 타입의 적합한 이름 설정 */
  function GetHeroTypeProperName takes integer heroTypeId, integer index returns string
    local Ptr pName = GetHeroTypeProperNamePtr(heroTypeId, index)
    if (pName != 0) then
      return JNMemoryGetString(pName, 0)
    else
      return null
    endif
  endfunction

  /* 영웅의 게임 속 이름 설정 - 현재 Index에만 적용 */
  function SetHeroProperName takes unit whichHero, string newName returns nothing
    local integer nameIndex = GetHeroProperNameIndex(whichHero)
    call SetHeroTypeProperName(GetUnitTypeId(whichHero), nameIndex, newName)
  endfunction
endlibrary
//===========================================================================
// Trigger: Enchant
//
// 강화할 아이템: 0000 +9
// 성공확률: 00.00%
// .
// .
// .
// 강화 성공!
// , GetManipulatedItem())
//     call SaveStr(hash, GetHandleId(GetManipulatedItem()), StringHash("ItemAddData"), "tt_0318-218m-아이언 메이든'ra_에픽'ec_"+I2S(GetRandomInt(1,15))+"'o1_d1_"+I2S(GetRandomInt(1,30))+"'r1_d1_"+I2S(GetRandomInt(1,28))+"%'r2_as_"+I2S(GetRandomInt(1,14))+"%'r3_sd_"+I2S(GetRandomInt(1,5))+"%'k0_"+I2S(GetRandomInt(1,2))+"'k1_bs_"+I2S(GetRandomInt(1,3))+"%'qo_S")
//===========================================================================
function Bufftt takes texttag t returns nothing
  call SetTextTagVelocity(t, 0., .009)
  call SetTextTagPermanent(t, false)
  call SetTextTagLifespan(t, 3.)
  call SetTextTagFadepoint(t, 1.)
endfunction

function Trig_Enchant_Actions takes nothing returns nothing
 local integer P = GetPlayerId(GetOwningPlayer(GetTriggerUnit()))+1
 local item t = LoadItemHandle(hash, P, StringHash("ItemData1"))
 local texttag tt
 local string s = LoadStr(hash, GetHandleId(t), StringHash("ItemAddData"))
 local integer i = S2I(JNStringSub(s,JNStringPos(s,"ec_")+3,2))
 local string ts = "성공확률: " + R2SW(Pow(.9, i-1)*100., 2, 1) + "%"
 
   if ( t != null ) then
    call PauseUnit(GetTriggerUnit(), true)
    
    call Bufftt(CreateTextTagUnitBJ("강화할 아이템: " + GetItemName(t) + " +" +I2S(i), GetTriggerUnit(), 30., 9., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    
    set tt = CreateTextTagUnitBJ(ts, GetTriggerUnit(), 0., 10., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0 )
    call TriggerSleepAction(.5)
    call SetTextTagTextBJ(tt, ts + " . ", 10.)
    call TriggerSleepAction(.5)
    call SetTextTagTextBJ(tt, ts + " . . ", 10.)
    call TriggerSleepAction(.5)
    call SetTextTagTextBJ(tt, ts + " . . .", 10.)
    call TriggerSleepAction(.5)
    if ( GetRandomReal(0., 1.) <= Pow(.9, i-1) ) then
      if ( GetRandomReal(0.,100.) <= 15. ) then
        call SetTextTagTextBJ(tt, ts + " . . .대성공!", 10.)
        if ( JNStringContains(s, "ec_") ) then
          call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), JNStringReplace(s,"ec_"+I2S(i),"ec_"+I2S(i+2)))
        else
          call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), s+"'ec_2")
        endif
      else
        call SetTextTagTextBJ(tt, ts + " . . .성공!", 10.)
        if ( JNStringContains(s, "ec_") ) then
          call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), JNStringReplace(s,"ec_"+I2S(i),"ec_"+I2S(i+1)))
        else
          call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), s+"'ec_1")
        endif
      endif
    elseif ( GetRandomReal(0.,100.) <= 15. ) then
      call SetTextTagTextBJ(tt, ts + " . . .대실패!", 10.)
      call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), JNStringReplace(s,"ec_"+I2S(i),"ec_0"))
    else
      call SetTextTagTextBJ(tt, ts + " . . .실패!", 10.)
      call SaveStr(hash, GetHandleId(t), StringHash("ItemAddData"), JNStringReplace(s,"ec_"+I2S(i),"ec_"+I2S(i-1)))
    endif
    call PauseUnit(GetTriggerUnit(), false)
    call TriggerSleepAction(1.)
    call DestroyTextTag(tt)
    set tt = null
   else
     call BJDebugMsg("인벤토리 1번칸에 강화할 아이템을 놓아주세요.")
   endif
endfunction

//===========================================================================
function InitTrig_Enchant takes nothing returns nothing
    set gg_trg_Enchant = CreateTrigger(  )
    call CreateTextTagLocBJ("강화", Location(-1024, -1216), 30., 15., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0.)
    call TriggerRegisterEnterRectSimple( gg_trg_Enchant, gg_rct_Env_Moonlight )
    call TriggerAddAction( gg_trg_Enchant, function Trig_Enchant_Actions )
endfunction

//===========================================================================
// Trigger: ItemGet
//
// 아이템을 먹는다
//  - 인벤토리에 아이템이 들어간다
//  - 순서대로 차곡차곡 들어간다
// 아이템에 마우스를 대면
//  - 해당 아이템이 가진 값이 표시된다
//===========================================================================
globals
  constant real XX = 1280.
  constant real YY = 1024.
endglobals
constant function I2O takes integer i returns string
    if ( i == 1 ) then
      return "s1"
    elseif ( i == 2 ) then
      return "s2"
    elseif ( i == 3 ) then
      return "s3"
    elseif ( i == 4 ) then
      return "d1"
    elseif ( i == 5 ) then
      return "d2"
    elseif ( i == 6 ) then
      return "a1"
    elseif ( i == 7 ) then
      return "a2"
    elseif ( i == 8 ) then
      return "l1"
    elseif ( i == 9 ) then
      return "l2"
    elseif ( i == 10 ) then
      return "ed"
    elseif ( i == 11 ) then
      return "cp"
    elseif ( i == 12 ) then
      return "cx"
    elseif ( i == 13 ) then
      return "m1"
    elseif ( i == 14 ) then
      return "m2"
    elseif ( i == 15 ) then
      return "m3"
    elseif ( i == 16 ) then
      return "bs"
    elseif ( i == 17 ) then
      return "as"
    elseif ( i == 18 ) then
      return "ms"
    elseif ( i == 19 ) then
      return "g1"
    elseif ( i == 20 ) then
      return "g2"
    elseif ( i == 21 ) then
      return "p1"
    elseif ( i == 22 ) then
      return "p2"
    elseif ( i == 23 ) then
      return "p3"
    elseif ( i == 24 ) then
      return "sd"
    elseif ( i == 25 ) then
      return "sl"
    elseif ( i == 26 ) then
      return "md"
    elseif ( i == 27 ) then
      return "c1"
    elseif ( i == 28 ) then
      return "c2"
    
    elseif ( i == 29 ) then
      return "o1"
    elseif ( i == 30 ) then
      return "o2"
    elseif ( i == 31 ) then
      return "o3"
    elseif ( i == 32 ) then
      return "r1"
    elseif ( i == 33 ) then
      return "r2"
    elseif ( i == 34 ) then
      return "r3"
    elseif ( i == 35 ) then
      return "k1"
    elseif ( i == 36 ) then
      return "k2"
    elseif ( i == 37 ) then
      return "k3"
    else
      return ""
    endif
endfunction

function ItemProcess takes integer i returns string
  if ( i == 4 or i == 5 ) then
    return I2O(i) + "_" + I2S(GetRandomInt(50,200))
  elseif ( i == 11 or i == 13 or i == 16 or i == 17 or i == 21 or i == 22 or i == 23 or i == 24 or i == 26 or i == 27 or i == 28 ) then
    return I2O(i) + "_" + I2S(GetRandomInt(1,10)) + "%"
  elseif ( i == 12 ) then
    return I2O(i) + "_" + R2SW(GetRandomReal(.1,.3),1,2) + "x"
  else
    return I2O(i) + "_" + I2S(GetRandomInt(1,10))
  endif
endfunction
function AddRandom takes integer i returns string
  return I2O(31+i) + "_" + ItemProcess(GetRandomInt(1,28))
endfunction
function AddOption takes integer i returns string
  return I2O(28+i) + "_" + ItemProcess(GetRandomInt(1,28))
endfunction
function AddSoket takes integer i returns string
  return I2O(34+i) + "_" + ItemProcess(GetRandomInt(1,28))
endfunction
function Trig_ItemGet_Actions takes nothing returns nothing
 local integer P = GetPlayerId(GetOwningPlayer(GetTriggerUnit()))+1
 local integer Slot = Equip_GetEmpty(P)
 local integer rand1 = 1
 local string rand3 = ""
 if ( GetItemType(GetManipulatedItem()) == ITEM_TYPE_ARTIFACT ) then
  if not ( HaveSavedString(hash, GetHandleId(GetManipulatedItem()), StringHash("ItemAddData")) ) then /* 아이템 옵션 있으면 생략 */
    set rand3 = "tt_"+JNServerTime("MMdd_HHmm")+"-"+GetPlayerName(GetOwningPlayer(GetTriggerUnit()))
    if ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_매직"
      set rand3 = rand3 + "'" + AddOption(1)
    elseif ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_레어"
      set rand3 = rand3 + "'" + AddOption(1)
      set rand3 = rand3 + "'" + AddRandom(1)
      call Bufftt(CreateTextTagUnitBJ("레어", GetTriggerUnit(), 30., 9., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    elseif ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_유니크"
      set rand3 = rand3 + "'" + AddOption(1)
      set rand3 = rand3 + "'" + AddRandom(1)
      set rand3 = rand3 + "'" + AddRandom(2)
      call Bufftt(CreateTextTagUnitBJ("유니크!", GetTriggerUnit(), 30., 10., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    elseif ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_에픽"
      set rand3 = rand3 + "'" + AddOption(1)
      set rand3 = rand3 + "'" + AddRandom(1)
      set rand3 = rand3 + "'" + AddRandom(2)
      set rand3 = rand3 + "'" + AddRandom(3)
      call Bufftt(CreateTextTagUnitBJ("에픽!!", GetTriggerUnit(), 30., 11., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    elseif ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_히든"
      set rand3 = rand3 + "'" + AddOption(1)
      set rand3 = rand3 + "'" + AddOption(2)
      set rand3 = rand3 + "'" + AddRandom(1)
      set rand3 = rand3 + "'" + AddRandom(2)
      set rand3 = rand3 + "'" + AddRandom(3)
      call Bufftt(CreateTextTagUnitBJ("히든!!!", GetTriggerUnit(), 30., 12., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    elseif ( GetRandomReal(0.,100.) <= 20. ) then
      set rand3 = rand3 + "'ra_등급외"
      set rand3 = rand3 + "'" + AddOption(1)
      set rand3 = rand3 + "'" + AddOption(2)
      set rand3 = rand3 + "'" + AddOption(3)
      set rand3 = rand3 + "'" + AddRandom(1)
      set rand3 = rand3 + "'" + AddRandom(2)
      set rand3 = rand3 + "'" + AddRandom(3)
      call Bufftt(CreateTextTagUnitBJ("등급 외!!!!", GetTriggerUnit(), 30., 13., GetRandomReal(0., 100.), GetRandomReal(0., 100.), GetRandomReal(0., 100.), 0))
    else
      set rand3 = rand3 + "'ra_노말"
    endif
    
    /* 강화 적용 */
    if ( GetRandomReal(0.,100.) <= 80. ) then
      set rand3 = rand3 + "'ec_"+I2S(GetRandomInt(1,4))
    endif
    
    /* 등급 적용 - 여기선 소켓 */
    if ( GetRandomReal(0., 100.) <= 10. ) then
      set rand3 = rand3 + "'qo_S"
      set rand3 = rand3 + "'" + AddSoket(1)
      set rand3 = rand3 + "'" + AddSoket(2)
      set rand3 = rand3 + "'" + AddSoket(3)
    elseif ( GetRandomReal(0., 90.) <= 10. ) then
      set rand3 = rand3 + "'qo_A+"
      set rand3 = rand3 + "'" + AddSoket(1)
      set rand3 = rand3 + "'" + AddSoket(2)
    elseif ( GetRandomReal(0., 80.) <= 10. ) then
      set rand3 = rand3 + "'qo_A"
      set rand3 = rand3 + "'" + AddSoket(1)
      set rand3 = rand3 + "'" + AddSoket(2)
    elseif ( GetRandomReal(0., 70.) <= 10. ) then
      set rand3 = rand3 + "'qo_B+"
      set rand3 = rand3 + "'" + AddSoket(1)
    elseif ( GetRandomReal(0., 60.) <= 10. ) then
      set rand3 = rand3 + "'qo_B"
      set rand3 = rand3 + "'" + AddSoket(1)
    elseif ( GetRandomReal(0., 50.) <= 10. ) then
      set rand3 = rand3 + "'qo_C+"
    elseif ( GetRandomReal(0., 40.) <= 10. ) then
      set rand3 = rand3 + "'qo_C"
    elseif ( GetRandomReal(0., 30.) <= 10. ) then
      set rand3 = rand3 + "'qo_D+"
    elseif ( GetRandomReal(0., 20.) <= 10. ) then
      set rand3 = rand3 + "'qo_D"
    else
      set rand3 = rand3 + "'qo_F"
    endif
    
    if ( Slot > 0 ) then
      set rand1 = GetRandomInt(29,34)
      call SaveStr(hash, GetHandleId(GetManipulatedItem()), StringHash("ItemAddData"), rand3)
    else
      call BJDebugMsg("인벤토리가 모두 찼습니다.")
      call UnitRemoveItem(GetTriggerUnit(), GetManipulatedItem())
      return
    endif
  endif
  call SaveItemHandle(hash, P, StringHash("ItemData"+I2S(Slot)), GetManipulatedItem())
  if ( GetLocalPlayer() == Player(P-1) ) then
    call DzFrameSetTexture(Frame_InvenButtonsBackDrop[Slot], EXGetItemDataString(GetItemTypeId(GetManipulatedItem()), 1), 0)
  endif
  call SetItemPosition(GetManipulatedItem(), XX, YY)
 else
  call RemoveItem(GetManipulatedItem())
 endif
endfunction

//===========================================================================
function InitTrig_ItemGet takes nothing returns nothing
  set gg_trg_ItemGet = CreateTrigger()
  call TriggerRegisterAnyUnitEventBJ(gg_trg_ItemGet, EVENT_PLAYER_UNIT_PICKUP_ITEM)
  call TriggerAddAction(gg_trg_ItemGet, function Trig_ItemGet_Actions)
endfunction


//===========================================================================
// Trigger: UnitNameTest
//===========================================================================
// //! import "JAPIUnitState.j"
/* 1.31 추가 함수 
constant native ConvertUnitStringField					takes integer i returns unitstringfield
constant unitstringfield UNIT_SF_NAME                   = ConvertUnitStringField('unam')
constant unitstringfield UNIT_SF_PROPER_NAMES           = ConvertUnitStringField('upro')
*/
//! 보류 - 시작 후 생성하는 영웅이 같은 이름 index를 갖고 있으면 모두 함께 변경됨, 특별 Index 설정 불가.
//! 방법 - 생성시 초기번호를 0으로, 총 이름 13개 설정 후, 플레이어별 번호를 설정.
native EXExecuteScript takes string script returns string
scope Test initializer Init
  private constant function I2U takes integer i returns unit
    if ( i == 1 ) then
      return gg_unit_H000_0011
    elseif ( i == 2 ) then
      return gg_unit_H001_0010
    elseif ( i == 3 ) then
      return gg_unit_H002_0009
    elseif ( i == 4 ) then
      return gg_unit_H003_0008
    elseif ( i == 5 ) then
      return gg_unit_H005_0003
    elseif ( i == 6 ) then
      return gg_unit_H004_0007
    else
      return null
    endif
  endfunction
    private function Action takes nothing returns nothing
      local integer P = GetPlayerId(GetTriggerPlayer())+1
      local unit u = udg_hero[P]
      if ( StringLength(SubString(GetEventPlayerChatString(),8,99)) < 4 ) then
        call SetHeroProperNameIndex(u, 0)
        //call Print("기본 이름으로 설정: " + JNStringSplit(EXExecuteScript("(require'jass.slk').unit[" + I2S(GetUnitTypeId(u))+"].Propernames"),",",0))
      else
        call SetHeroProperNameIndex(u, P)
        call SetHeroProperName(u, SubString(GetEventPlayerChatString(),8,99))
      endif
      //call Print("now: No." + I2S(GetHeroProperNameIndex(u)) + "/" + GetHeroProperName(u))
      set u = null
    endfunction
    private function Init takes nothing returns nothing
      local trigger trig = CreateTrigger()
      local integer loopA = bj_MAX_PLAYERS-1
      loop
        call TriggerRegisterPlayerChatEvent(trig, Player(loopA), "-이름 ", false)
        exitwhen loopA <= 0
        set loopA = loopA - 1
      endloop
      call TriggerAddAction(trig, function Action)
      set trig = null
      
      /* 기본 설치 유닛 기본 이름인 0번째 Index로 설정 */
      set loopA = 1
      loop
        call SetHeroProperNameIndex(I2U(loopA), 0)
        exitwhen loopA >= 6
        set loopA = loopA + 1
      endloop
    endfunction
endscope//===========================================================================
// Trigger: 이름없는 트리거 003
//===========================================================================
function Trig________________________003_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig________________________003 takes nothing returns nothing
    set gg_trg________________________003 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg________________________003, Player(0), EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER )
    call TriggerAddAction( gg_trg________________________003, function Trig________________________003_Actions )
endfunction

//===========================================================================
// Trigger: 이름없는 트리거 002
//===========================================================================
function Trig________________________002_Actions takes nothing returns nothing
    call IssueTargetOrderBJ( null, "attack", null )
endfunction

//===========================================================================
function InitTrig________________________002 takes nothing returns nothing
    set gg_trg________________________002 = CreateTrigger(  )
    call TriggerAddAction( gg_trg________________________002, function Trig________________________002_Actions )
endfunction

//===========================================================================
// Trigger: 이름없는 트리거 001
//
// 우클릭 혹은 좌클릭시 작동
//===========================================================================
function Trig________________________001_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig________________________001 takes nothing returns nothing
    set gg_trg________________________001 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg________________________001, Player(0), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddAction( gg_trg________________________001, function Trig________________________001_Actions )
endfunction

//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Native_of_JNStopwatch(  )
    call InitTrig_Native_of_DzAPIFrameHandle(  )
    call InitTrig_Native_of_JNString(  )
    call InitTrig_Native_of_JNServer(  )
    call InitTrig_Native_of_DzAPISync(  )
    call InitTrig_Native_of_Misc(  )
    call InitTrig_Native_of_DzAPIHardware(  )
    call InitTrig_Nativa_of_JNMemory(  )
    call InitTrig_Native_of_JAPIEffect(  )
    call InitTrig_Import_File(  )
    call InitTrig_StartSetting(  )
    call InitTrig_MainSubFrame(  )
    call InitTrig_SkillTrees(  )
    call InitTrig_Select(  )
    call InitTrig_MenuQuickSlot(  )
    call InitTrig_Option(  )
    call InitTrig_Inventory_Equip(  )
    call InitTrig_Info(  )
    call InitTrig_MiniInfo(  )
    call InitTrig_JN_Object_Api(  )
    call InitTrig_Time(  )
    call InitTrig_Save(  )
    call InitTrig_Load5_Auto(  )
    call InitTrig_Load_End(  )
    call InitTrig_Load3_Repick(  )
    call InitTrig_test_1_add(  )
    call InitTrig_test4(  )
    call InitTrig_Reset(  )
    call InitTrig_test7(  )
    call InitTrig_add(  )
    call InitTrig_Exit(  )
    call InitTrig_FrameGrid(  )
    call InitTrig_Typecast(  )
    call InitTrig_MemoryLib(  )
    call InitTrig_EndGameHook(  )
    call InitTrig_ClearWhenRestartGame(  )
    call InitTrig_UnitName(  )
    call InitTrig_Enchant(  )
    call InitTrig_ItemGet(  )
    call InitTrig_UnitNameTest(  )
    call InitTrig________________________003(  )
    call InitTrig________________________002(  )
    call InitTrig________________________001(  )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(0), true )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: 포스 1
    call SetPlayerTeam( Player(0), 0 )

endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -10112.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -6016.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 10112.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 6016.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -10112.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 6016.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 10112.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -6016.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl" )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "CityScapeDay" )
    call SetAmbientNightSound( "CityScapeNight" )
    call SetMapMusic( "Music", true, 0 )
    call InitSounds(  )
    call CreateRegions(  )
    call CreateAllItems(  )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_072" )
    call SetMapDescription( "TRIGSTR_074" )
    call SetPlayers( 1 )
    call SetTeams( 1 )
    call SetGamePlacement( MAP_PLACEMENT_USE_MAP_SETTINGS )

    call DefineStartLocation( 0, -9664.0, 5376.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call SetPlayerSlotAvailable( Player(0), MAP_CONTROL_USER )
    call InitGenericPlayerSlots(  )
endfunction

